//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package document ;import (_e "encoding/binary";_g "fmt";_fd "github.com/unidoc/unipdf/v3/common";_cg "github.com/unidoc/unipdf/v3/internal/bitwise";_d "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_cgg "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_be "github.com/unidoc/unipdf/v3/internal/jbig2/document/segments";_dc "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/classer";_ac "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_c "io";_b "math";_f "runtime/debug";);func (_aded *Document )isFileHeaderPresent ()(bool ,error ){_aded .InputStream .Mark ();
for _ ,_bgf :=range _ab {_fce ,_bcbg :=_aded .InputStream .ReadByte ();if _bcbg !=nil {return false ,_bcbg ;};if _bgf !=_fce {_aded .InputStream .Reset ();return false ,nil ;};};_aded .InputStream .Reset ();return true ,nil ;};func (_cbg *Page )GetHeight ()(int ,error ){return _cbg .getHeight ()};
func (_bad *Page )addTextRegionSegment (_bbf []*_be .Header ,_dgg ,_egg map[int ]int ,_cggg []int ,_bgea *_cgg .Points ,_bec *_cgg .Bitmaps ,_cfc *_d .IntSlice ,_ccba *_cgg .Boxes ,_geca ,_cdf int ){_efc :=&_be .TextRegion {NumberOfSymbols :uint32 (_cdf )};
_efc .InitEncode (_dgg ,_egg ,_cggg ,_bgea ,_bec ,_cfc ,_ccba ,_bad .FinalWidth ,_bad .FinalHeight ,_geca );_abe :=&_be .Header {RTSegments :_bbf ,SegmentData :_efc ,PageAssociation :_bad .PageNumber ,Type :_be .TImmediateTextRegion };_edd :=_be .TPageInformation ;
if _egg !=nil {_edd =_be .TSymbolDictionary ;};var _fgfb int ;for ;_fgfb < len (_bad .Segments );_fgfb ++{if _bad .Segments [_fgfb ].Type ==_edd {_fgfb ++;break ;};};_bad .Segments =append (_bad .Segments ,nil );copy (_bad .Segments [_fgfb +1:],_bad .Segments [_fgfb :]);
_bad .Segments [_fgfb ]=_abe ;};func (_fb *Document )AddGenericPage (bm *_cgg .Bitmap ,duplicateLineRemoval bool )(_aca error ){const _acc ="\u0044\u006f\u0063um\u0065\u006e\u0074\u002e\u0041\u0064\u0064\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0050\u0061\u0067\u0065";
if !_fb .FullHeaders &&_fb .NumberOfPages !=0{return _ac .Error (_acc ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");
};_gc :=&Page {Segments :[]*_be .Header {},Bitmap :bm ,Document :_fb ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,IsLossless :true ,BlackIsOne :bm .Color ==_cgg .Chocolate };_gc .PageNumber =int (_fb .nextPageNumber ());_fb .Pages [_gc .PageNumber ]=_gc ;
bm .InverseData ();_gc .AddPageInformationSegment ();if _aca =_gc .AddGenericRegion (bm ,0,0,0,_be .TImmediateGenericRegion ,duplicateLineRemoval );_aca !=nil {return _ac .Wrap (_aca ,_acc ,"");};if _fb .FullHeaders {_gc .AddEndOfPageSegment ();};return nil ;
};type Page struct{Segments []*_be .Header ;PageNumber int ;Bitmap *_cgg .Bitmap ;FinalHeight int ;FinalWidth int ;ResolutionX int ;ResolutionY int ;IsLossless bool ;Document *Document ;FirstSegmentNumber int ;EncodingMethod EncodingMethod ;BlackIsOne bool ;
};func (_gcb *Page )createNormalPage (_bcbf *_be .PageInformationSegment )error {const _dgaa ="\u0063\u0072e\u0061\u0074\u0065N\u006f\u0072\u006d\u0061\u006c\u0050\u0061\u0067\u0065";_gcb .Bitmap =_cgg .New (_bcbf .PageBMWidth ,_bcbf .PageBMHeight );if _bcbf .DefaultPixelValue !=0{_gcb .Bitmap .SetDefaultPixel ();
};for _ ,_cdff :=range _gcb .Segments {switch _cdff .Type {case 6,7,22,23,38,39,42,43:_fd .Log .Trace ("\u0047\u0065\u0074\u0074in\u0067\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0064",_cdff .SegmentNumber );_afd ,_dbg :=_cdff .GetSegmentData ();
if _dbg !=nil {return _dbg ;};_fgg ,_acac :=_afd .(_be .Regioner );if !_acac {_fd .Log .Debug ("\u0053\u0065g\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069on\u0065\u0072",_afd );
return _ac .Errorf (_dgaa ,"i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062i\u0067\u0032\u0020\u0073\u0065\u0067\u006den\u0074\u0020\u0074\u0079p\u0065\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061 R\u0065\u0067i\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_afd );
};_fcb ,_dbg :=_fgg .GetRegionBitmap ();if _dbg !=nil {return _ac .Wrap (_dbg ,_dgaa ,"");};if _gcb .fitsPage (_bcbf ,_fcb ){_gcb .Bitmap =_fcb ;}else {_bfb :=_fgg .GetRegionInfo ();_ceg :=_gcb .getCombinationOperator (_bcbf ,_bfb .CombinaionOperator );
_dbg =_cgg .Blit (_fcb ,_gcb .Bitmap ,int (_bfb .XLocation ),int (_bfb .YLocation ),_ceg );if _dbg !=nil {return _ac .Wrap (_dbg ,_dgaa ,"");};};};};return nil ;};func (_bbfd *Page )GetWidth ()(int ,error ){return _bbfd .getWidth ()};func (_cgb *Document )reachedEOF (_gcfg int64 )(bool ,error ){const _gdag ="\u0072\u0065\u0061\u0063\u0068\u0065\u0064\u0045\u004f\u0046";
_ ,_bbb :=_cgb .InputStream .Seek (_gcfg ,_c .SeekStart );if _bbb !=nil {_fd .Log .Debug ("\u0072\u0065\u0061c\u0068\u0065\u0064\u0045\u004f\u0046\u0020\u002d\u0020\u0064\u002e\u0049\u006e\u0070\u0075\u0074\u0053\u0074\u0072\u0065\u0061\u006d\u002e\u0053\u0065\u0065\u006b\u0020\u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_bbb );
return false ,_ac .Wrap (_bbb ,_gdag ,"\u0069n\u0070\u0075\u0074\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020s\u0065\u0065\u006b\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};_ ,_bbb =_cgb .InputStream .ReadBits (32);if _bbb ==_c .EOF {return true ,nil ;
}else if _bbb !=nil {return false ,_ac .Wrap (_bbb ,_gdag ,"");};return false ,nil ;};func (_dcf *Document )addSymbolDictionary (_fbg int ,_dg *_cgg .Bitmaps ,_bcb []int ,_ggb map[int ]int ,_ebb bool )(*_be .Header ,error ){const _efg ="\u0061\u0064\u0064\u0053ym\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079";
_cee :=&_be .SymbolDictionary {};if _da :=_cee .InitEncode (_dg ,_bcb ,_ggb ,_ebb );_da !=nil {return nil ,_da ;};_acae :=&_be .Header {Type :_be .TSymbolDictionary ,PageAssociation :_fbg ,SegmentData :_cee };if _fbg ==0{if _dcf .GlobalSegments ==nil {_dcf .GlobalSegments =&Globals {};
};_dcf .GlobalSegments .AddSegment (_acae );return _acae ,nil ;};_fde ,_bdc :=_dcf .Pages [_fbg ];if !_bdc {return nil ,_ac .Errorf (_efg ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_fbg );};var (_eg int ;
_ecb *_be .Header ;);for _eg ,_ecb =range _fde .Segments {if _ecb .Type ==_be .TPageInformation {break ;};};_eg ++;_fde .Segments =append (_fde .Segments ,nil );copy (_fde .Segments [_eg +1:],_fde .Segments [_eg :]);_fde .Segments [_eg ]=_acae ;return _acae ,nil ;
};func (_ccbb *Page )nextSegmentNumber ()uint32 {return _ccbb .Document .nextSegmentNumber ()};func DecodeDocument (input *_cg .Reader ,globals *Globals )(*Document ,error ){return _dbf (input ,globals );};func (_bba *Document )encodeSegment (_fag *_be .Header ,_efb *int )error {const _cea ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074";
_fag .SegmentNumber =_bba .nextSegmentNumber ();_gb ,_bbag :=_fag .Encode (_bba ._cf );if _bbag !=nil {return _ac .Wrapf (_bbag ,_cea ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_fag .SegmentNumber );};*_efb +=_gb ;
return nil ;};func (_fdcb *Globals )GetSegment (segmentNumber int )(*_be .Header ,error ){const _gbg ="\u0047l\u006fb\u0061\u006c\u0073\u002e\u0047e\u0074\u0053e\u0067\u006d\u0065\u006e\u0074";if _fdcb ==nil {return nil ,_ac .Error (_gbg ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};if len (_fdcb .Segments )==0{return nil ,_ac .Error (_gbg ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");};var _dgf *_be .Header ;for _ ,_dgf =range _fdcb .Segments {if _dgf .SegmentNumber ==uint32 (segmentNumber ){break ;
};};if _dgf ==nil {return nil ,_ac .Error (_gbg ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};return _dgf ,nil ;};func (_eafb *Page )String ()string {return _g .Sprintf ("\u0050\u0061\u0067\u0065\u0020\u0023\u0025\u0064",_eafb .PageNumber );
};func (_bf *Document )completeSymbols ()(_ba error ){const _cfd ="\u0063o\u006dp\u006c\u0065\u0074\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";if _bf .Classer ==nil {return nil ;};if _bf .Classer .UndilatedTemplates ==nil {return _ac .Error (_cfd ,"\u006e\u006f t\u0065\u006d\u0070l\u0061\u0074\u0065\u0073 de\u0066in\u0065\u0064\u0020\u0066\u006f\u0072\u0020th\u0065\u0020\u0063\u006c\u0061\u0073\u0073e\u0072");
};_cc :=len (_bf .Pages )==1;_fdc :=make ([]int ,_bf .Classer .UndilatedTemplates .Size ());var _ccd int ;for _cgc :=0;_cgc < _bf .Classer .ClassIDs .Size ();_cgc ++{_ccd ,_ba =_bf .Classer .ClassIDs .Get (_cgc );if _ba !=nil {return _ac .Wrap (_ba ,_cfd ,"\u0063\u006c\u0061\u0073\u0073\u0020\u0049\u0044\u0027\u0073");
};_fdc [_ccd ]++;};var _gda []int ;for _df :=0;_df < _bf .Classer .UndilatedTemplates .Size ();_df ++{if _fdc [_df ]==0{return _ac .Error (_cfd ,"\u006eo\u0020\u0073y\u006d\u0062\u006f\u006cs\u0020\u0069\u006es\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u0066\u006fun\u0064\u0020\u0066o\u0072\u0020g\u0069\u0076\u0065\u006e\u0020\u0063l\u0061\u0073s\u003f\u0020");
};if _fdc [_df ]> 1||_cc {_gda =append (_gda ,_df );};};_bf ._fg =len (_gda );var _aa ,_dgd int ;for _cba :=0;_cba < _bf .Classer .ComponentPageNumbers .Size ();_cba ++{_aa ,_ba =_bf .Classer .ComponentPageNumbers .Get (_cba );if _ba !=nil {return _ac .Wrapf (_ba ,_cfd ,"p\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027 \u006e\u006f\u0074\u0020\u0066\u006f\u0075nd\u0020\u0069\u006e\u0020t\u0068\u0065\u0020\u0063\u006c\u0061\u0073\u0073\u0065r \u0070\u0061g\u0065\u006e\u0075\u006d\u0062\u0065\u0072\u0073",_cba );
};_dgd ,_ba =_bf .Classer .ClassIDs .Get (_cba );if _ba !=nil {return _ac .Wrapf (_ba ,_cfd ,"\u0063\u0061\u006e\u0027\u0074\u0020\u0067e\u0074\u0020\u0073y\u006d\u0062\u006f\u006c \u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027\u0020\u0066\u0072\u006f\u006d\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072",_aa );
};if _fdc [_dgd ]==1&&!_cc {_bf ._ae [_aa ]=append (_bf ._ae [_aa ],_dgd );};};if _ba =_bf .Classer .ComputeLLCorners ();_ba !=nil {return _ac .Wrap (_ba ,_cfd ,"");};return nil ;};func (_fbf *Page )createStripedPage (_fbaf *_be .PageInformationSegment )error {const _fdce ="\u0063\u0072\u0065\u0061\u0074\u0065\u0053\u0074\u0072\u0069\u0070\u0065d\u0050\u0061\u0067\u0065";
_acfe ,_eea :=_fbf .collectPageStripes ();if _eea !=nil {return _ac .Wrap (_eea ,_fdce ,"");};var _cdfc int ;for _ ,_accc :=range _acfe {if _aab ,_dgbd :=_accc .(*_be .EndOfStripe );_dgbd {_cdfc =_aab .LineNumber ()+1;}else {_ccgd :=_accc .(_be .Regioner );
_dgge :=_ccgd .GetRegionInfo ();_caee :=_fbf .getCombinationOperator (_fbaf ,_dgge .CombinaionOperator );_eeab ,_gdfd :=_ccgd .GetRegionBitmap ();if _gdfd !=nil {return _ac .Wrap (_gdfd ,_fdce ,"");};_gdfd =_cgg .Blit (_eeab ,_fbf .Bitmap ,int (_dgge .XLocation ),_cdfc ,_caee );
if _gdfd !=nil {return _ac .Wrap (_gdfd ,_fdce ,"");};};};return nil ;};func (_gddf *Globals )GetSegmentByIndex (index int )(*_be .Header ,error ){const _bca ="\u0047l\u006f\u0062\u0061\u006cs\u002e\u0047\u0065\u0074\u0053e\u0067m\u0065n\u0074\u0042\u0079\u0049\u006e\u0064\u0065x";
if _gddf ==nil {return nil ,_ac .Error (_bca ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_gddf .Segments )==0{return nil ,_ac .Error (_bca ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");
};if index > len (_gddf .Segments )-1{return nil ,_ac .Error (_bca ,"\u0069n\u0064e\u0078\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");};return _gddf .Segments [index ],nil ;};func (_eaf *Document )GetGlobalSegment (i int )(*_be .Header ,error ){_gad ,_geb :=_eaf .GlobalSegments .GetSegment (i );
if _geb !=nil {return nil ,_ac .Wrap (_geb ,"\u0047\u0065t\u0047\u006c\u006fb\u0061\u006c\u0053\u0065\u0067\u006d\u0065\u006e\u0074","");};return _gad ,nil ;};func (_cae *Document )nextPageNumber ()uint32 {_cae .NumberOfPages ++;return _cae .NumberOfPages };
func (_affa *Page )getResolutionX ()(int ,error ){const _eec ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0058";if _affa .ResolutionX !=0{return _affa .ResolutionX ,nil ;};_gbdf :=_affa .getPageInformationSegment ();if _gbdf ==nil {return 0,_ac .Error (_eec ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");
};_geea ,_gebf :=_gbdf .GetSegmentData ();if _gebf !=nil {return 0,_ac .Wrap (_gebf ,_eec ,"");};_gdcf ,_daa :=_geea .(*_be .PageInformationSegment );if !_daa {return 0,_ac .Errorf (_eec ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_geea );
};_affa .ResolutionX =_gdcf .ResolutionX ;return _affa .ResolutionX ,nil ;};func (_affc *Page )GetResolutionY ()(int ,error ){return _affc .getResolutionY ()};func (_ebc *Document )determineRandomDataOffsets (_efe []*_be .Header ,_dgb uint64 ){if _ebc .OrganizationType !=_be .ORandom {return ;
};for _ ,_eaa :=range _efe {_eaa .SegmentDataStartOffset =_dgb ;_dgb +=_eaa .SegmentDataLength ;};};func (_gbda *Page )getResolutionY ()(int ,error ){const _abaf ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0059";if _gbda .ResolutionY !=0{return _gbda .ResolutionY ,nil ;
};_bfec :=_gbda .getPageInformationSegment ();if _bfec ==nil {return 0,_ac .Error (_abaf ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_dgfc ,_cdgb :=_bfec .GetSegmentData ();if _cdgb !=nil {return 0,_ac .Wrap (_cdgb ,_abaf ,"");
};_egc ,_fcd :=_dgfc .(*_be .PageInformationSegment );if !_fcd {return 0,_ac .Errorf (_abaf ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0074\u0079\u0070\u0065\u003a\u0027%\u0054\u0027",_dgfc );
};_gbda .ResolutionY =_egc .ResolutionY ;return _gbda .ResolutionY ,nil ;};func (_bgb *Page )createPage (_ggg *_be .PageInformationSegment )error {var _dgbc error ;if !_ggg .IsStripe ||_ggg .PageBMHeight !=-1{_dgbc =_bgb .createNormalPage (_ggg );}else {_dgbc =_bgb .createStripedPage (_ggg );
};return _dgbc ;};func (_cdgf *Page )getHeight ()(int ,error ){const _ffe ="\u0067e\u0074\u0048\u0065\u0069\u0067\u0068t";if _cdgf .FinalHeight !=0{return _cdgf .FinalHeight ,nil ;};_dcfc :=_cdgf .getPageInformationSegment ();if _dcfc ==nil {return 0,_ac .Error (_ffe ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");
};_gcgd ,_agff :=_dcfc .GetSegmentData ();if _agff !=nil {return 0,_ac .Wrap (_agff ,_ffe ,"");};_dggc ,_cgd :=_gcgd .(*_be .PageInformationSegment );if !_cgd {return 0,_ac .Errorf (_ffe ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_gcgd );
};if _dggc .PageBMHeight ==_b .MaxInt32 {_ ,_agff =_cdgf .GetBitmap ();if _agff !=nil {return 0,_ac .Wrap (_agff ,_ffe ,"");};}else {_cdgf .FinalHeight =_dggc .PageBMHeight ;};return _cdgf .FinalHeight ,nil ;};func (_cge *Document )Encode ()(_ged []byte ,_gee error ){const _eeg ="\u0044o\u0063u\u006d\u0065\u006e\u0074\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
var _caf ,_gcg int ;if _cge .FullHeaders {if _caf ,_gee =_cge .encodeFileHeader (_cge ._cf );_gee !=nil {return nil ,_ac .Wrap (_gee ,_eeg ,"");};};var (_fge bool ;_bge *_be .Header ;_ccb *Page ;);if _gee =_cge .completeClassifiedPages ();_gee !=nil {return nil ,_ac .Wrap (_gee ,_eeg ,"");
};if _gee =_cge .produceClassifiedPages ();_gee !=nil {return nil ,_ac .Wrap (_gee ,_eeg ,"");};if _cge .GlobalSegments !=nil {for _ ,_bge =range _cge .GlobalSegments .Segments {if _gee =_cge .encodeSegment (_bge ,&_caf );_gee !=nil {return nil ,_ac .Wrap (_gee ,_eeg ,"");
};};};for _cbb :=1;_cbb <=int (_cge .NumberOfPages );_cbb ++{if _ccb ,_fge =_cge .Pages [_cbb ];!_fge {return nil ,_ac .Errorf (_eeg ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_cbb );};for _ ,_bge =range _ccb .Segments {if _gee =_cge .encodeSegment (_bge ,&_caf );
_gee !=nil {return nil ,_ac .Wrap (_gee ,_eeg ,"");};};};if _cge .FullHeaders {if _gcg ,_gee =_cge .encodeEOFHeader (_cge ._cf );_gee !=nil {return nil ,_ac .Wrap (_gee ,_eeg ,"");};_caf +=_gcg ;};_ged =_cge ._cf .Data ();if len (_ged )!=_caf {_fd .Log .Debug ("\u0042\u0079\u0074\u0065\u0073 \u0077\u0072\u0069\u0074\u0074\u0065\u006e \u0028\u006e\u0029\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065\u0071\u0075\u0061\u006c\u0020\u0074\u006f\u0020\u0074\u0068\u0065\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006f\u0066\u0020t\u0068\u0065\u0020\u0064\u0061\u0074\u0061\u0020\u0065\u006e\u0063\u006fd\u0065\u0064\u003a\u0020\u0027\u0025d\u0027",_caf ,len (_ged ));
};return _ged ,nil ;};type Globals struct{Segments []*_be .Header ;};func (_cefd *Document )encodeFileHeader (_dba _cg .BinaryWriter )(_cfdc int ,_efga error ){const _ccc ="\u0065\u006ec\u006f\u0064\u0065F\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";
_cfdc ,_efga =_dba .Write (_ab );if _efga !=nil {return _cfdc ,_ac .Wrap (_efga ,_ccc ,"\u0069\u0064");};if _efga =_dba .WriteByte (0x01);_efga !=nil {return _cfdc ,_ac .Wrap (_efga ,_ccc ,"\u0066\u006c\u0061g\u0073");};_cfdc ++;_fgc :=make ([]byte ,4);
_e .BigEndian .PutUint32 (_fgc ,_cefd .NumberOfPages );_bgcf ,_efga :=_dba .Write (_fgc );if _efga !=nil {return _bgcf ,_ac .Wrap (_efga ,_ccc ,"p\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_cfdc +=_bgcf ;return _cfdc ,nil ;};func (_fbd *Document )completeClassifiedPages ()(_bg error ){const _ga ="\u0063\u006f\u006dpl\u0065\u0074\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067\u0065\u0073";
if _fbd .Classer ==nil {return nil ;};_fbd ._acb =make ([]int ,_fbd .Classer .UndilatedTemplates .Size ());for _ec :=0;_ec < _fbd .Classer .ClassIDs .Size ();_ec ++{_gd ,_bb :=_fbd .Classer .ClassIDs .Get (_ec );if _bb !=nil {return _ac .Wrapf (_bb ,_ga ,"\u0063\u006c\u0061\u0073s \u0077\u0069\u0074\u0068\u0020\u0069\u0064\u003a\u0020\u0027\u0025\u0064\u0027",_ec );
};_fbd ._acb [_gd ]++;};var _af []int ;for _bcd :=0;_bcd < _fbd .Classer .UndilatedTemplates .Size ();_bcd ++{if _fbd .NumberOfPages ==1||_fbd ._acb [_bcd ]> 1{_af =append (_af ,_bcd );};};var (_ee *Page ;_fe bool ;);for _ef ,_ca :=range *_fbd .Classer .ComponentPageNumbers {if _ee ,_fe =_fbd .Pages [_ca ];
!_fe {return _ac .Errorf (_ga ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_ef );};if _ee .EncodingMethod ==GenericEM {_fd .Log .Error ("\u0047\u0065\u006e\u0065\u0072\u0069c\u0020\u0070\u0061g\u0065\u0020\u0077i\u0074\u0068\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020ma\u0070\u0070\u0065\u0064\u0020\u0061\u0073\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0020\u0070\u0061\u0067\u0065",_ef );
continue ;};_fbd ._bd [_ca ]=append (_fbd ._bd [_ca ],_ef );_cb ,_fc :=_fbd .Classer .ClassIDs .Get (_ef );if _fc !=nil {return _ac .Wrapf (_fc ,_ga ,"\u006e\u006f\u0020\u0073uc\u0068\u0020\u0063\u006c\u0061\u0073\u0073\u0049\u0044\u003a\u0020\u0025\u0064",_ef );
};if _fbd ._acb [_cb ]==1&&_fbd .NumberOfPages !=1{_ce :=append (_fbd ._ae [_ca ],_cb );_fbd ._ae [_ca ]=_ce ;};};if _bg =_fbd .Classer .ComputeLLCorners ();_bg !=nil {return _ac .Wrap (_bg ,_ga ,"");};if _ ,_bg =_fbd .addSymbolDictionary (0,_fbd .Classer .UndilatedTemplates ,_af ,_fbd ._bef ,false );
_bg !=nil {return _ac .Wrap (_bg ,_ga ,"");};return nil ;};func (_dge *Page )GetResolutionX ()(int ,error ){return _dge .getResolutionX ()};func (_fec *Page )composePageBitmap ()error {const _dff ="\u0063\u006f\u006d\u0070\u006f\u0073\u0065\u0050\u0061\u0067\u0065\u0042i\u0074\u006d\u0061\u0070";
if _fec .PageNumber ==0{return nil ;};_bfe :=_fec .getPageInformationSegment ();if _bfe ==nil {return _ac .Error (_dff ,"\u0070\u0061\u0067e \u0069\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069o\u006e \u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};_efbf ,_fcf :=_bfe .GetSegmentData ();if _fcf !=nil {return _fcf ;};_dga ,_edc :=_efbf .(*_be .PageInformationSegment );if !_edc {return _ac .Error (_dff ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006da\u0074\u0069\u006f\u006e \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");
};if _fcf =_fec .createPage (_dga );_fcf !=nil {return _ac .Wrap (_fcf ,_dff ,"");};_fec .clearSegmentData ();return nil ;};func (_cda *Page )clearSegmentData (){for _ggcb :=range _cda .Segments {_cda .Segments [_ggcb ].CleanSegmentData ();};};func InitEncodeDocument (fullHeaders bool )*Document {return &Document {FullHeaders :fullHeaders ,_cf :_cg .BufferedMSB (),Pages :map[int ]*Page {},_ae :map[int ][]int {},_bef :map[int ]int {},_bd :map[int ][]int {}};
};func (_cbae *Document )GetPage (pageNumber int )(_be .Pager ,error ){const _gfc ="\u0044\u006fc\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074\u0050\u0061\u0067\u0065";if pageNumber < 0{_fd .Log .Debug ("\u004a\u0042\u0049\u00472\u0020\u0050\u0061\u0067\u0065\u0020\u002d\u0020\u0047e\u0074\u0050\u0061\u0067\u0065\u003a\u0020\u0025\u0064\u002e\u0020\u0050\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062e\u0020\u006c\u006f\u0077\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0030\u002e\u0020\u0025\u0073",pageNumber ,_f .Stack ());
return nil ,_ac .Errorf (_gfc ,"\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032\u0020d\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u002d\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064 \u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a\u0020\u0025\u0064",pageNumber );
};if pageNumber > len (_cbae .Pages ){_fd .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_f .Stack ());return nil ,_ac .Error (_gfc ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};_ecc ,_dfe :=_cbae .Pages [pageNumber ];if !_dfe {_fd .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_f .Stack ());return nil ,_ac .Errorf (_gfc ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};return _ecc ,nil ;};func (_bbfg *Page )GetSegment (number int )(*_be .Header ,error ){const _dgec ="\u0050a\u0067e\u002e\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074";for _ ,_gbga :=range _bbfg .Segments {if _gbga .SegmentNumber ==uint32 (number ){return _gbga ,nil ;
};};_afb :=make ([]uint32 ,len (_bbfg .Segments ));for _dbc ,_aegd :=range _bbfg .Segments {_afb [_dbc ]=_aegd .SegmentNumber ;};return nil ,_ac .Errorf (_dgec ,"\u0073e\u0067\u006d\u0065n\u0074\u0020\u0077i\u0074h \u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u003a\u0020'%\u0064'\u002e\u0020\u004b\u006e\u006f\u0077n\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u003a \u0025\u0076",number ,_bbfg .PageNumber ,_afb );
};func (_fgb *Document )GetNumberOfPages ()(uint32 ,error ){if _fgb .NumberOfPagesUnknown ||_fgb .NumberOfPages ==0{if len (_fgb .Pages )==0{if _bcf :=_fgb .mapData ();_bcf !=nil {return 0,_ac .Wrap (_bcf ,"\u0044o\u0063\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074N\u0075m\u0062e\u0072\u004f\u0066\u0050\u0061\u0067\u0065s","");
};};return uint32 (len (_fgb .Pages )),nil ;};return _fgb .NumberOfPages ,nil ;};type EncodingMethod int ;func (_afba *Page )fitsPage (_ffc *_be .PageInformationSegment ,_aba *_cgg .Bitmap )bool {return _afba .countRegions ()==1&&_ffc .DefaultPixelValue ==0&&_ffc .PageBMWidth ==_aba .Width &&_ffc .PageBMHeight ==_aba .Height ;
};func (_dcg *Page )getWidth ()(int ,error ){const _bfg ="\u0067\u0065\u0074\u0057\u0069\u0064\u0074\u0068";if _dcg .FinalWidth !=0{return _dcg .FinalWidth ,nil ;};_cga :=_dcg .getPageInformationSegment ();if _cga ==nil {return 0,_ac .Error (_bfg ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");
};_gba ,_acgc :=_cga .GetSegmentData ();if _acgc !=nil {return 0,_ac .Wrap (_acgc ,_bfg ,"");};_bfeb ,_dcc :=_gba .(*_be .PageInformationSegment );if !_dcc {return 0,_ac .Errorf (_bfg ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_gba );
};_dcg .FinalWidth =_bfeb .PageBMWidth ;return _dcg .FinalWidth ,nil ;};func (_de *Page )AddEndOfPageSegment (){_cdb :=&_be .Header {Type :_be .TEndOfPage ,PageAssociation :_de .PageNumber };_de .Segments =append (_de .Segments ,_cdb );};func (_bcc *Document )nextSegmentNumber ()uint32 {_dgc :=_bcc .CurrentSegmentNumber ;
_bcc .CurrentSegmentNumber ++;return _dgc ;};func (_gce *Page )AddGenericRegion (bm *_cgg .Bitmap ,xloc ,yloc ,template int ,tp _be .Type ,duplicateLineRemoval bool )error {const _dae ="P\u0061\u0067\u0065\u002eAd\u0064G\u0065\u006e\u0065\u0072\u0069c\u0052\u0065\u0067\u0069\u006f\u006e";
_fcg :=&_be .GenericRegion {};if _gfbg :=_fcg .InitEncode (bm ,xloc ,yloc ,template ,duplicateLineRemoval );_gfbg !=nil {return _ac .Wrap (_gfbg ,_dae ,"");};_aeg :=&_be .Header {Type :_be .TImmediateGenericRegion ,PageAssociation :_gce .PageNumber ,SegmentData :_fcg };
_gce .Segments =append (_gce .Segments ,_aeg );return nil ;};func (_ddf *Globals )GetSymbolDictionary ()(*_be .Header ,error ){const _geda ="G\u006c\u006f\u0062\u0061\u006c\u0073.\u0047\u0065\u0074\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079";
if _ddf ==nil {return nil ,_ac .Error (_geda ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_ddf .Segments )==0{return nil ,_ac .Error (_geda ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");
};for _ ,_cec :=range _ddf .Segments {if _cec .Type ==_be .TSymbolDictionary {return _cec ,nil ;};};return nil ,_ac .Error (_geda ,"\u0067\u006c\u006fba\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020d\u0069c\u0074i\u006fn\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};func (_cgf *Page )Encode (w _cg .BinaryWriter )(_gdc int ,_ege error ){const _abf ="P\u0061\u0067\u0065\u002e\u0045\u006e\u0063\u006f\u0064\u0065";var _dbb int ;for _ ,_dbfd :=range _cgf .Segments {if _dbb ,_ege =_dbfd .Encode (w );_ege !=nil {return _gdc ,_ac .Wrap (_ege ,_abf ,"");
};_gdc +=_dbb ;};return _gdc ,nil ;};var _ab =[]byte {0x97,0x4A,0x42,0x32,0x0D,0x0A,0x1A,0x0A};func (_ggc *Document )mapData ()error {const _abb ="\u006da\u0070\u0044\u0061\u0074\u0061";var (_gec []*_be .Header ;_dca int64 ;_ag _be .Type ;);_cbf ,_agf :=_ggc .isFileHeaderPresent ();
if _agf !=nil {return _ac .Wrap (_agf ,_abb ,"");};if _cbf {if _agf =_ggc .parseFileHeader ();_agf !=nil {return _ac .Wrap (_agf ,_abb ,"");};_dca +=int64 (_ggc ._ea );_ggc .FullHeaders =true ;};var (_aad *Page ;_aff bool ;);for _ag !=51&&!_aff {_gge ,_eed :=_be .NewHeader (_ggc ,_ggc .InputStream ,_dca ,_ggc .OrganizationType );
if _eed !=nil {return _ac .Wrap (_eed ,_abb ,"");};_fd .Log .Trace ("\u0044\u0065c\u006f\u0064\u0069\u006eg\u0020\u0073e\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u0075m\u0062\u0065\u0072\u003a\u0020\u0025\u0064\u002c\u0020\u0054\u0079\u0070e\u003a\u0020\u0025\u0073",_gge .SegmentNumber ,_gge .Type );
_ag =_gge .Type ;if _ag !=_be .TEndOfFile {if _gge .PageAssociation !=0{_aad =_ggc .Pages [_gge .PageAssociation ];if _aad ==nil {_aad =_dad (_ggc ,_gge .PageAssociation );_ggc .Pages [_gge .PageAssociation ]=_aad ;if _ggc .NumberOfPagesUnknown {_ggc .NumberOfPages ++;
};};_aad .Segments =append (_aad .Segments ,_gge );}else {_ggc .GlobalSegments .AddSegment (_gge );};};_gec =append (_gec ,_gge );_dca =_ggc .InputStream .AbsolutePosition ();if _ggc .OrganizationType ==_be .OSequential {_dca +=int64 (_gge .SegmentDataLength );
};_aff ,_eed =_ggc .reachedEOF (_dca );if _eed !=nil {_fd .Log .Debug ("\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u0072\u0065\u0061\u0063h\u0065\u0064\u0020\u0045\u004f\u0046\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_eed );
return _ac .Wrap (_eed ,_abb ,"");};};_ggc .determineRandomDataOffsets (_gec ,uint64 (_dca ));return nil ;};func (_gg *Document )produceClassifiedPage (_ad *Page ,_fbc *_be .Header )(_ade error ){const _dd ="p\u0072\u006f\u0064\u0075ce\u0043l\u0061\u0073\u0073\u0069\u0066i\u0065\u0064\u0050\u0061\u0067\u0065";
var _gff map[int ]int ;_ff :=_gg ._fg ;_dce :=[]*_be .Header {_fbc };if len (_gg ._ae [_ad .PageNumber ])> 0{_gff =map[int ]int {};_bga ,_eb :=_gg .addSymbolDictionary (_ad .PageNumber ,_gg .Classer .UndilatedTemplates ,_gg ._ae [_ad .PageNumber ],_gff ,false );
if _eb !=nil {return _ac .Wrap (_eb ,_dd ,"");};_dce =append (_dce ,_bga );_ff +=len (_gg ._ae [_ad .PageNumber ]);};_gcf :=_gg ._bd [_ad .PageNumber ];_fd .Log .Debug ("P\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020c\u006f\u006d\u0070\u0073: \u0025\u0076",_ad .PageNumber ,_gcf );
_ad .addTextRegionSegment (_dce ,_gg ._bef ,_gff ,_gg ._bd [_ad .PageNumber ],_gg .Classer .PtaLL ,_gg .Classer .UndilatedTemplates ,_gg .Classer .ClassIDs ,nil ,_cef (_ff ),len (_gg ._bd [_ad .PageNumber ]));return nil ;};func (_abab *Page )getPageInformationSegment ()*_be .Header {for _ ,_dde :=range _abab .Segments {if _dde .Type ==_be .TPageInformation {return _dde ;
};};_fd .Log .Debug ("\u0050\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0066o\u0072\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0073\u002e",_abab );
return nil ;};func (_ge *Document )AddClassifiedPage (bm *_cgg .Bitmap ,method _dc .Method )(_db error ){const _aed ="\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002e\u0041\u0064d\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064P\u0061\u0067\u0065";
if !_ge .FullHeaders &&_ge .NumberOfPages !=0{return _ac .Error (_aed ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");
};if _ge .Classer ==nil {if _ge .Classer ,_db =_dc .Init (_dc .DefaultSettings ());_db !=nil {return _ac .Wrap (_db ,_aed ,"");};};_bc :=int (_ge .nextPageNumber ());_eab :=&Page {Segments :[]*_be .Header {},Bitmap :bm ,Document :_ge ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,PageNumber :_bc };
_ge .Pages [_bc ]=_eab ;switch method {case _dc .RankHaus :_eab .EncodingMethod =RankHausEM ;case _dc .Correlation :_eab .EncodingMethod =CorrelationEM ;};_eab .AddPageInformationSegment ();if _db =_ge .Classer .AddPage (bm ,_bc ,method );_db !=nil {return _ac .Wrap (_db ,_aed ,"");
};if _ge .FullHeaders {_eab .AddEndOfPageSegment ();};return nil ;};func (_bfgb *Page )lastSegmentNumber ()(_cbag uint32 ,_fcdf error ){const _dbdbe ="\u006c\u0061\u0073\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";if len (_bfgb .Segments )==0{return _cbag ,_ac .Errorf (_dbdbe ,"\u006e\u006f\u0020se\u0067\u006d\u0065\u006e\u0074\u0073\u0020\u0066\u006fu\u006ed\u0020i\u006e \u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027",_bfgb .PageNumber );
};return _bfgb .Segments [len (_bfgb .Segments )-1].SegmentNumber ,nil ;};func (_dbdb *Page )AddPageInformationSegment (){_bab :=&_be .PageInformationSegment {PageBMWidth :_dbdb .FinalWidth ,PageBMHeight :_dbdb .FinalHeight ,ResolutionX :_dbdb .ResolutionX ,ResolutionY :_dbdb .ResolutionY ,IsLossless :_dbdb .IsLossless };
if _dbdb .BlackIsOne {_bab .DefaultPixelValue =uint8 (0x1);};_eede :=&_be .Header {PageAssociation :_dbdb .PageNumber ,SegmentDataLength :uint64 (_bab .Size ()),SegmentData :_bab ,Type :_be .TPageInformation };_dbdb .Segments =append (_dbdb .Segments ,_eede );
};func (_cdg *Page )getCombinationOperator (_cecc *_be .PageInformationSegment ,_bbac _cgg .CombinationOperator )_cgg .CombinationOperator {if _cecc .CombinationOperatorOverrideAllowed (){return _bbac ;};return _cecc .CombinationOperator ();};func (_gfg *Page )countRegions ()int {var _adb int ;
for _ ,_gddfb :=range _gfg .Segments {switch _gddfb .Type {case 6,7,22,23,38,39,42,43:_adb ++;};};return _adb ;};func _dad (_age *Document ,_ede int )*Page {return &Page {Document :_age ,PageNumber :_ede ,Segments :[]*_be .Header {}};};func _cef (_cd int )int {_dbd :=0;
_fa :=(_cd &(_cd -1))==0;_cd >>=1;for ;_cd !=0;_cd >>=1{_dbd ++;};if _fa {return _dbd ;};return _dbd +1;};func (_fgf *Document )produceClassifiedPages ()(_ead error ){const _bee ="\u0070\u0072\u006f\u0064uc\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067e\u0073";
if _fgf .Classer ==nil {return nil ;};var (_gdd *Page ;_bgc bool ;_fcc *_be .Header ;);for _gf :=1;_gf <=int (_fgf .NumberOfPages );_gf ++{if _gdd ,_bgc =_fgf .Pages [_gf ];!_bgc {return _ac .Errorf (_bee ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_gf );
};if _gdd .EncodingMethod ==GenericEM {continue ;};if _fcc ==nil {if _fcc ,_ead =_fgf .GlobalSegments .GetSymbolDictionary ();_ead !=nil {return _ac .Wrap (_ead ,_bee ,"");};};if _ead =_fgf .produceClassifiedPage (_gdd ,_fcc );_ead !=nil {return _ac .Wrapf (_ead ,_bee ,"\u0070\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027",_gf );
};};return nil ;};type Document struct{Pages map[int ]*Page ;NumberOfPagesUnknown bool ;NumberOfPages uint32 ;GBUseExtTemplate bool ;InputStream *_cg .Reader ;GlobalSegments *Globals ;OrganizationType _be .OrganizationType ;Classer *_dc .Classer ;XRes ,YRes int ;
FullHeaders bool ;CurrentSegmentNumber uint32 ;AverageTemplates *_cgg .Bitmaps ;BaseIndexes []int ;Refinement bool ;RefineLevel int ;_ea uint8 ;_cf *_cg .BufferedWriter ;EncodeGlobals bool ;_fg int ;_ae map[int ][]int ;_bd map[int ][]int ;_acb []int ;_bef map[int ]int ;
};func (_ed *Document )encodeEOFHeader (_gaa _cg .BinaryWriter )(_acf int ,_gfa error ){_fba :=&_be .Header {SegmentNumber :_ed .nextSegmentNumber (),Type :_be .TEndOfFile };if _acf ,_gfa =_fba .Encode (_gaa );_gfa !=nil {return 0,_ac .Wrap (_gfa ,"\u0065n\u0063o\u0064\u0065\u0045\u004f\u0046\u0048\u0065\u0061\u0064\u0065\u0072","");
};return _acf ,nil ;};func (_bdd *Page )collectPageStripes ()(_bgcfg []_be .Segmenter ,_bgg error ){const _gbd ="\u0063o\u006cl\u0065\u0063\u0074\u0050\u0061g\u0065\u0053t\u0072\u0069\u0070\u0065\u0073";var _aae _be .Segmenter ;for _ ,_bddb :=range _bdd .Segments {switch _bddb .Type {case 6,7,22,23,38,39,42,43:_aae ,_bgg =_bddb .GetSegmentData ();
if _bgg !=nil {return nil ,_ac .Wrap (_bgg ,_gbd ,"");};_bgcfg =append (_bgcfg ,_aae );case 50:_aae ,_bgg =_bddb .GetSegmentData ();if _bgg !=nil {return nil ,_bgg ;};_edcg ,_edf :=_aae .(*_be .EndOfStripe );if !_edf {return nil ,_ac .Errorf (_gbd ,"\u0045\u006e\u0064\u004f\u0066\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u006f\u0066\u0020\u0076\u0061l\u0069\u0064\u0020\u0074\u0079p\u0065\u003a \u0027\u0025\u0054\u0027",_aae );
};_bgcfg =append (_bgcfg ,_edcg );_bdd .FinalHeight =_edcg .LineNumber ();};};return _bgcfg ,nil ;};const (GenericEM EncodingMethod =iota ;CorrelationEM ;RankHausEM ;);func (_gfb *Document )parseFileHeader ()error {const _acg ="\u0070a\u0072s\u0065\u0046\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";
_ ,_gae :=_gfb .InputStream .Seek (8,_c .SeekStart );if _gae !=nil {return _ac .Wrap (_gae ,_acg ,"\u0069\u0064");};_ ,_gae =_gfb .InputStream .ReadBits (5);if _gae !=nil {return _ac .Wrap (_gae ,_acg ,"\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074\u0073");
};_aced ,_gae :=_gfb .InputStream .ReadBit ();if _gae !=nil {return _ac .Wrap (_gae ,_acg ,"\u0065x\u0074e\u006e\u0064\u0065\u0064\u0020t\u0065\u006dp\u006c\u0061\u0074\u0065\u0073");};if _aced ==1{_gfb .GBUseExtTemplate =true ;};_aced ,_gae =_gfb .InputStream .ReadBit ();
if _gae !=nil {return _ac .Wrap (_gae ,_acg ,"\u0075\u006e\u006b\u006eow\u006e\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};if _aced !=1{_gfb .NumberOfPagesUnknown =false ;};_aced ,_gae =_gfb .InputStream .ReadBit ();if _gae !=nil {return _ac .Wrap (_gae ,_acg ,"\u006f\u0072\u0067\u0061\u006e\u0069\u007a\u0061\u0074\u0069\u006f\u006e \u0074\u0079\u0070\u0065");
};_gfb .OrganizationType =_be .OrganizationType (_aced );if !_gfb .NumberOfPagesUnknown {_gfb .NumberOfPages ,_gae =_gfb .InputStream .ReadUint32 ();if _gae !=nil {return _ac .Wrap (_gae ,_acg ,"\u006eu\u006db\u0065\u0072\u0020\u006f\u0066\u0020\u0070\u0061\u0067\u0065\u0073");
};_gfb ._ea =13;};return nil ;};func _dbf (_gebe *_cg .Reader ,_ebbc *Globals )(*Document ,error ){_agd :=&Document {Pages :make (map[int ]*Page ),InputStream :_gebe ,OrganizationType :_be .OSequential ,NumberOfPagesUnknown :true ,GlobalSegments :_ebbc ,_ea :9};
if _agd .GlobalSegments ==nil {_agd .GlobalSegments =&Globals {};};if _fgfd :=_agd .mapData ();_fgfd !=nil {return nil ,_fgfd ;};return _agd ,nil ;};func (_ggd *Page )GetBitmap ()(_gece *_cgg .Bitmap ,_gdff error ){_fd .Log .Trace (_g .Sprintf ("\u005b\u0050\u0041G\u0045\u005d\u005b\u0023%\u0064\u005d\u0020\u0047\u0065\u0074\u0042i\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e",_ggd .PageNumber ));
defer func (){if _gdff !=nil {_fd .Log .Trace (_g .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074B\u0069t\u006d\u0061\u0070\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_ggd .PageNumber ,_gdff ));
}else {_fd .Log .Trace (_g .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064]\u0020\u0047\u0065\u0074\u0042\u0069\u0074m\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064",_ggd .PageNumber ));};}();if _ggd .Bitmap !=nil {return _ggd .Bitmap ,nil ;
};_gdff =_ggd .composePageBitmap ();if _gdff !=nil {return nil ,_gdff ;};return _ggd .Bitmap ,nil ;};func (_ffd *Globals )AddSegment (segment *_be .Header ){_ffd .Segments =append (_ffd .Segments ,segment )};