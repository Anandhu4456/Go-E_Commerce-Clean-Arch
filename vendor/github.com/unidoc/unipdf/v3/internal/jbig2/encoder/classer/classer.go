//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package classer ;import (_fc "github.com/unidoc/unipdf/v3/common";_dc "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_cg "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_c "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_df "image";_f "math";
);func _cge (_gec *Classer ,_fgfb *_cg .Bitmap )*similarTemplatesFinder {return &similarTemplatesFinder {Width :_fgfb .Width ,Height :_fgfb .Height ,Classer :_gec };};func (_eca *Classer )classifyRankHouseNonOne (_bcf *_cg .Boxes ,_dabg ,_aae ,_ege *_cg .Bitmaps ,_gfae *_cg .Points ,_egc *_dc .NumSlice ,_dfg int )(_beb error ){const _feb ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_aga ,_dfb ,_beae ,_feee float32 ;_dgg ,_ccf ,_bbd int ;_afda ,_faa ,_faca ,_caef ,_fbeb *_cg .Bitmap ;_gedg ,_gffe bool ;);_dfbb :=_cg .MakePixelSumTab8 ();for _deb :=0;_deb < len (_dabg .Values );_deb ++{if _faa ,_beb =_aae .GetBitmap (_deb );_beb !=nil {return _c .Wrap (_beb ,_feb ,"b\u006d\u0073\u0031\u002e\u0047\u0065\u0074\u0028\u0069\u0029");
};if _dgg ,_beb =_egc .GetInt (_deb );_beb !=nil {_fc .Log .Trace ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0046\u0047T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073 \u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_deb ,_beb );
};if _faca ,_beb =_ege .GetBitmap (_deb );_beb !=nil {return _c .Wrap (_beb ,_feb ,"b\u006d\u0073\u0032\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _aga ,_dfb ,_beb =_gfae .GetGeometry (_deb );_beb !=nil {return _c .Wrapf (_beb ,_feb ,"\u0070t\u0061[\u0069\u005d\u002e\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079");
};_cecf :=len (_eca .UndilatedTemplates .Values );_gedg =false ;_efee :=_cge (_eca ,_faa );for _bbd =_efee .Next ();_bbd > -1;{if _caef ,_beb =_eca .UndilatedTemplates .GetBitmap (_bbd );_beb !=nil {return _c .Wrap (_beb ,_feb ,"\u0070\u0069\u0078\u0061\u0074\u002e\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");
};if _ccf ,_beb =_eca .FgTemplates .GetInt (_bbd );_beb !=nil {_fc .Log .Trace ("\u0047\u0065\u0074\u0074\u0069\u006eg\u0020\u0046\u0047\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u005b\u0025d\u005d\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_bbd ,_beb );
};if _fbeb ,_beb =_eca .DilatedTemplates .GetBitmap (_bbd );_beb !=nil {return _c .Wrap (_beb ,_feb ,"\u0070\u0069\u0078\u0061\u0074\u0064\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _beae ,_feee ,_beb =_eca .CentroidPointsTemplates .GetGeometry (_bbd );
_beb !=nil {return _c .Wrap (_beb ,_feb ,"\u0043\u0065\u006et\u0072\u006f\u0069\u0064P\u006f\u0069\u006e\u0074\u0073\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u005b\u0069\u0043\u006c\u0061\u0073\u0073\u005d");};_gffe ,_beb =_cg .RankHausTest (_faa ,_faca ,_caef ,_fbeb ,_aga -_beae ,_dfb -_feee ,MaxDiffWidth ,MaxDiffHeight ,_dgg ,_ccf ,float32 (_eca .Settings .RankHaus ),_dfbb );
if _beb !=nil {return _c .Wrap (_beb ,_feb ,"");};if _gffe {_gedg =true ;if _beb =_eca .ClassIDs .Add (_bbd );_beb !=nil {return _c .Wrap (_beb ,_feb ,"");};if _beb =_eca .ComponentPageNumbers .Add (_dfg );_beb !=nil {return _c .Wrap (_beb ,_feb ,"");};
if _eca .Settings .KeepClassInstances {_bcc ,_eeae :=_eca .ClassInstances .GetBitmaps (_bbd );if _eeae !=nil {return _c .Wrap (_eeae ,_feb ,"\u0063\u002e\u0050\u0069\u0078\u0061\u0061\u002e\u0047\u0065\u0074B\u0069\u0074\u006d\u0061\u0070\u0073\u0028\u0069\u0043\u006ca\u0073\u0073\u0029");
};if _afda ,_eeae =_dabg .GetBitmap (_deb );_eeae !=nil {return _c .Wrap (_eeae ,_feb ,"\u0070i\u0078\u0061\u005b\u0069\u005d");};_bcc .Values =append (_bcc .Values ,_afda );_dcbb ,_eeae :=_bcf .Get (_deb );if _eeae !=nil {return _c .Wrap (_eeae ,_feb ,"b\u006f\u0078\u0061\u002e\u0047\u0065\u0074\u0028\u0069\u0029");
};_bcc .Boxes =append (_bcc .Boxes ,_dcbb );};break ;};};if !_gedg {if _beb =_eca .ClassIDs .Add (_cecf );_beb !=nil {return _c .Wrap (_beb ,_feb ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _beb =_eca .ComponentPageNumbers .Add (_dfg );_beb !=nil {return _c .Wrap (_beb ,_feb ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_cde :=&_cg .Bitmaps {};_afda =_dabg .Values [_deb ];_cde .AddBitmap (_afda );_eceg ,_afdg :=_afda .Width ,_afda .Height ;_eca .TemplatesSize .Add (uint64 (_eceg )*uint64 (_afdg ),_cecf );_bag ,_ebb :=_bcf .Get (_deb );if _ebb !=nil {return _c .Wrap (_ebb ,_feb ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_cde .AddBox (_bag );_eca .ClassInstances .AddBitmaps (_cde );_eca .CentroidPointsTemplates .AddPoint (_aga ,_dfb );_eca .UndilatedTemplates .AddBitmap (_faa );_eca .DilatedTemplates .AddBitmap (_faca );_eca .FgTemplates .AddInt (_dgg );};};_eca .NumberOfClasses =len (_eca .UndilatedTemplates .Values );
return nil ;};const JbAddedPixels =6;func (_aec *Classer )addPageComponents (_ee *_cg .Bitmap ,_de *_cg .Boxes ,_cab *_cg .Bitmaps ,_dfd int ,_dcb Method )error {const _fb ="\u0043l\u0061\u0073\u0073\u0065r\u002e\u0041\u0064\u0064\u0050a\u0067e\u0043o\u006d\u0070\u006f\u006e\u0065\u006e\u0074s";
if _ee ==nil {return _c .Error (_fb ,"\u006e\u0069\u006c\u0020\u0069\u006e\u0070\u0075\u0074 \u0070\u0061\u0067\u0065");};if _de ==nil ||_cab ==nil ||len (*_de )==0{_fc .Log .Trace ("\u0041\u0064\u0064P\u0061\u0067\u0065\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0073\u002e\u0020\u004e\u006f\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065n\u0074\u0073\u0020\u0066\u006f\u0075\u006e\u0064",_ee );
return nil ;};var _b error ;switch _dcb {case RankHaus :_b =_aec .classifyRankHaus (_de ,_cab ,_dfd );case Correlation :_b =_aec .classifyCorrelation (_de ,_cab ,_dfd );default:_fc .Log .Debug ("\u0055\u006ek\u006e\u006f\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064\u003a\u0020'%\u0076\u0027",_dcb );
return _c .Error (_fb ,"\u0075\u006e\u006bno\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064");};if _b !=nil {return _c .Wrap (_b ,_fb ,"");};if _b =_aec .getULCorners (_ee ,_de );_b !=nil {return _c .Wrap (_b ,_fb ,"");
};_fa :=len (*_de );_aec .BaseIndex +=_fa ;if _b =_aec .ComponentsNumber .Add (_fa );_b !=nil {return _c .Wrap (_b ,_fb ,"");};return nil ;};func (_dcad *similarTemplatesFinder )Next ()int {var (_gaae ,_bdb ,_gcf ,_bede int ;_bgb bool ;_cag *_cg .Bitmap ;
_fbf error ;);for {if _dcad .Index >=25{return -1;};_bdb =_dcad .Width +TwoByTwoWalk [2*_dcad .Index ];_gaae =_dcad .Height +TwoByTwoWalk [2*_dcad .Index +1];if _gaae < 1||_bdb < 1{_dcad .Index ++;continue ;};if len (_dcad .CurrentNumbers )==0{_dcad .CurrentNumbers ,_bgb =_dcad .Classer .TemplatesSize .GetSlice (uint64 (_bdb )*uint64 (_gaae ));
if !_bgb {_dcad .Index ++;continue ;};_dcad .N =0;};_gcf =len (_dcad .CurrentNumbers );for ;_dcad .N < _gcf ;_dcad .N ++{_bede =_dcad .CurrentNumbers [_dcad .N ];_cag ,_fbf =_dcad .Classer .DilatedTemplates .GetBitmap (_bede );if _fbf !=nil {_fc .Log .Debug ("\u0046\u0069\u006e\u0064\u004e\u0065\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0074\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u006e\u006f\u0074 \u0066\u006fu\u006e\u0064\u003a\u0020");
return 0;};if _cag .Width -2*JbAddedPixels ==_bdb &&_cag .Height -2*JbAddedPixels ==_gaae {return _bede ;};};_dcad .Index ++;_dcad .CurrentNumbers =nil ;};};const (MaxDiffWidth =2;MaxDiffHeight =2;);var _bfe bool ;func (_afc *Classer )classifyCorrelation (_ade *_cg .Boxes ,_afa *_cg .Bitmaps ,_gdg int )error {const _aa ="\u0063\u006c\u0061\u0073si\u0066\u0079\u0043\u006f\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e";
if _ade ==nil {return _c .Error (_aa ,"\u006e\u0065\u0077\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0062\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0020\u0062o\u0078\u0065\u0073\u0020\u006eo\u0074\u0020f\u006f\u0075\u006e\u0064");
};if _afa ==nil {return _c .Error (_aa ,"\u006e\u0065wC\u006f\u006d\u0070o\u006e\u0065\u006e\u0074s b\u0069tm\u0061\u0070\u0020\u0061\u0072\u0072\u0061y \u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064");};_ffc :=len (_afa .Values );if _ffc ==0{_fc .Log .Debug ("\u0063l\u0061\u0073s\u0069\u0066\u0079C\u006f\u0072\u0072\u0065\u006c\u0061\u0074i\u006f\u006e\u0020\u002d\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0070\u0069\u0078\u0061s\u0020\u0069\u0073\u0020\u0065\u006d\u0070\u0074\u0079");
return nil ;};var (_ecc ,_aeg *_cg .Bitmap ;_geg error ;);_bg :=&_cg .Bitmaps {Values :make ([]*_cg .Bitmap ,_ffc )};for _gfa ,_gfd :=range _afa .Values {_aeg ,_geg =_gfd .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);
if _geg !=nil {return _c .Wrap (_geg ,_aa ,"");};_bg .Values [_gfa ]=_aeg ;};_gff :=_afc .FgTemplates ;_cd :=_cg .MakePixelSumTab8 ();_bd :=_cg .MakePixelCentroidTab8 ();_fee :=make ([]int ,_ffc );_bed :=make ([][]int ,_ffc );_ged :=_cg .Points (make ([]_cg .Point ,_ffc ));
_gdf :=&_ged ;var (_caea ,_bge int ;_eg ,_bfec ,_ebe int ;_dfae ,_abf int ;_fbac byte ;);for _dfc ,_ea :=range _bg .Values {_bed [_dfc ]=make ([]int ,_ea .Height );_caea =0;_bge =0;_bfec =(_ea .Height -1)*_ea .RowStride ;_eg =0;for _abf =_ea .Height -1;
_abf >=0;_abf ,_bfec =_abf -1,_bfec -_ea .RowStride {_bed [_dfc ][_abf ]=_eg ;_ebe =0;for _dfae =0;_dfae < _ea .RowStride ;_dfae ++{_fbac =_ea .Data [_bfec +_dfae ];_ebe +=_cd [_fbac ];_caea +=_bd [_fbac ]+_dfae *8*_cd [_fbac ];};_eg +=_ebe ;_bge +=_ebe *_abf ;
};_fee [_dfc ]=_eg ;if _eg > 0{(*_gdf )[_dfc ]=_cg .Point {X :float32 (_caea )/float32 (_eg ),Y :float32 (_bge )/float32 (_eg )};}else {(*_gdf )[_dfc ]=_cg .Point {X :float32 (_ea .Width )/float32 (2),Y :float32 (_ea .Height )/float32 (2)};};};if _geg =_afc .CentroidPoints .Add (_gdf );
_geg !=nil {return _c .Wrap (_geg ,_aa ,"\u0063\u0065\u006et\u0072\u006f\u0069\u0064\u0020\u0061\u0064\u0064");};var (_ccg ,_fff ,_dfad int ;_bfa float64 ;_cdc ,_daf ,_afe ,_bbc float32 ;_cec ,_bac _cg .Point ;_gc bool ;_ga *similarTemplatesFinder ;_bcg int ;
_ef *_cg .Bitmap ;_eeeb *_df .Rectangle ;_fbc *_cg .Bitmaps ;);for _bcg ,_aeg =range _bg .Values {_fff =_fee [_bcg ];if _cdc ,_daf ,_geg =_gdf .GetGeometry (_bcg );_geg !=nil {return _c .Wrap (_geg ,_aa ,"\u0070t\u0061\u0020\u002d\u0020\u0069");};_gc =false ;
_ecd :=len (_afc .UndilatedTemplates .Values );_ga =_cge (_afc ,_aeg );for _fbe :=_ga .Next ();_fbe > -1;{if _ef ,_geg =_afc .UndilatedTemplates .GetBitmap (_fbe );_geg !=nil {return _c .Wrap (_geg ,_aa ,"\u0075\u006e\u0069dl\u0061\u0074\u0065\u0064\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0062\u006d\u0032");
};if _dfad ,_geg =_gff .GetInt (_fbe );_geg !=nil {_fc .Log .Trace ("\u0046\u0047\u0020T\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u005b\u0069\u0063\u006ca\u0073\u0073\u005d\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_geg );};if _afe ,_bbc ,_geg =_afc .CentroidPointsTemplates .GetGeometry (_fbe );
_geg !=nil {return _c .Wrap (_geg ,_aa ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074T\u0065\u006d\u0070\u006c\u0061\u0074e\u0073\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u00782\u002c\u0079\u0032\u0020");
};if _afc .Settings .WeightFactor > 0.0{if _ccg ,_geg =_afc .TemplateAreas .Get (_fbe );_geg !=nil {_fc .Log .Trace ("\u0054\u0065\u006dp\u006c\u0061\u0074\u0065A\u0072\u0065\u0061\u0073\u005b\u0069\u0063l\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0061\u0072\u0065\u0061\u0020\u0025\u0076",_geg );
};_bfa =_afc .Settings .Thresh +(1.0-_afc .Settings .Thresh )*_afc .Settings .WeightFactor *float64 (_dfad )/float64 (_ccg );}else {_bfa =_afc .Settings .Thresh ;};_bbcf ,_cef :=_cg .CorrelationScoreThresholded (_aeg ,_ef ,_fff ,_dfad ,_cec .X -_bac .X ,_cec .Y -_bac .Y ,MaxDiffWidth ,MaxDiffHeight ,_cd ,_bed [_bcg ],float32 (_bfa ));
if _cef !=nil {return _c .Wrap (_cef ,_aa ,"");};if _bfe {var (_deg ,_fcd float64 ;_aac ,_efe int ;);_deg ,_cef =_cg .CorrelationScore (_aeg ,_ef ,_fff ,_dfad ,_cdc -_afe ,_daf -_bbc ,MaxDiffWidth ,MaxDiffHeight ,_cd );if _cef !=nil {return _c .Wrap (_cef ,_aa ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_fcd ,_cef =_cg .CorrelationScoreSimple (_aeg ,_ef ,_fff ,_dfad ,_cdc -_afe ,_daf -_bbc ,MaxDiffWidth ,MaxDiffHeight ,_cd );if _cef !=nil {return _c .Wrap (_cef ,_aa ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_aac =int (_f .Sqrt (_deg *float64 (_fff )*float64 (_dfad )));_efe =int (_f .Sqrt (_fcd *float64 (_fff )*float64 (_dfad )));if (_deg >=_bfa )!=(_fcd >=_bfa ){return _c .Errorf (_aa ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043\u006f\u0072r\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0063\u006f\u0072\u0065\u0020\u006d\u0069\u0073\u006d\u0061\u0074\u0063\u0068\u0020-\u0020\u0025d\u0028\u00250\u002e\u0034\u0066\u002c\u0020\u0025\u0076\u0029\u0020\u0076\u0073\u0020\u0025d(\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0076)\u0020\u0025\u0030\u002e\u0034\u0066",_aac ,_deg ,_deg >=_bfa ,_efe ,_fcd ,_fcd >=_bfa ,_deg -_fcd );
};if _deg >=_bfa !=_bbcf {return _c .Errorf (_aa ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043o\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e \u0073\u0063\u006f\u0072\u0065 \u004d\u0069\u0073\u006d\u0061t\u0063\u0068 \u0062\u0065\u0074w\u0065\u0065\u006e\u0020\u0063\u006frr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020/\u0020\u0074\u0068\u0072\u0065s\u0068\u006f\u006c\u0064\u002e\u0020\u0043\u006f\u006dpa\u0072\u0069\u0073\u006f\u006e:\u0020\u0025\u0030\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0064\u0029\u0020\u003e\u003d\u0020\u00250\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u0029\u0020\u0076\u0073\u0020\u0025\u0076",_deg ,_deg *float64 (_fff )*float64 (_dfad ),_aac ,_bfa ,float32 (_bfa )*float32 (_fff )*float32 (_dfad ),_bbcf );
};};if _bbcf {_gc =true ;if _cef =_afc .ClassIDs .Add (_fbe );_cef !=nil {return _c .Wrap (_cef ,_aa ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _cef =_afc .ComponentPageNumbers .Add (_gdg );_cef !=nil {return _c .Wrap (_cef ,_aa ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");
};if _afc .Settings .KeepClassInstances {if _ecc ,_cef =_afa .GetBitmap (_bcg );_cef !=nil {return _c .Wrap (_cef ,_aa ,"\u004b\u0065\u0065\u0070Cl\u0061\u0073\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u002d \u0069");};if _fbc ,_cef =_afc .ClassInstances .GetBitmaps (_fbe );
_cef !=nil {return _c .Wrap (_cef ,_aa ,"K\u0065\u0065\u0070\u0043\u006c\u0061s\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065s\u0020\u002d\u0020i\u0043l\u0061\u0073\u0073");};_fbc .AddBitmap (_ecc );if _eeeb ,_cef =_ade .Get (_bcg );_cef !=nil {return _c .Wrap (_cef ,_aa ,"\u004be\u0065p\u0043\u006c\u0061\u0073\u0073I\u006e\u0073t\u0061\u006e\u0063\u0065\u0073");
};_fbc .AddBox (_eeeb );};break ;};};if !_gc {if _geg =_afc .ClassIDs .Add (_ecd );_geg !=nil {return _c .Wrap (_geg ,_aa ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _geg =_afc .ComponentPageNumbers .Add (_gdg );_geg !=nil {return _c .Wrap (_geg ,_aa ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_fbc =&_cg .Bitmaps {};if _ecc ,_geg =_afa .GetBitmap (_bcg );_geg !=nil {return _c .Wrap (_geg ,_aa ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_fbc .AddBitmap (_ecc );_gb ,_ed :=_ecc .Width ,_ecc .Height ;_acd :=uint64 (_ed )*uint64 (_gb );_afc .TemplatesSize .Add (_acd ,_ecd );
if _eeeb ,_geg =_ade .Get (_bcg );_geg !=nil {return _c .Wrap (_geg ,_aa ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_fbc .AddBox (_eeeb );_afc .ClassInstances .AddBitmaps (_fbc );_afc .CentroidPointsTemplates .AddPoint (_cdc ,_daf );_afc .FgTemplates .AddInt (_fff );
_afc .UndilatedTemplates .AddBitmap (_ecc );_ccg =(_aeg .Width -2*JbAddedPixels )*(_aeg .Height -2*JbAddedPixels );if _geg =_afc .TemplateAreas .Add (_ccg );_geg !=nil {return _c .Wrap (_geg ,_aa ,"\u0021\u0066\u006f\u0075\u006e\u0064");};};};_afc .NumberOfClasses =len (_afc .UndilatedTemplates .Values );
return nil ;};func (_ad *Classer )ComputeLLCorners ()(_dfa error ){const _af ="\u0043l\u0061\u0073\u0073\u0065\u0072\u002e\u0043\u006f\u006d\u0070\u0075t\u0065\u004c\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _ad .PtaUL ==nil {return _c .Error (_af ,"\u0055\u004c\u0020\u0043or\u006e\u0065\u0072\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006ee\u0064");
};_fce :=len (*_ad .PtaUL );_ad .PtaLL =&_cg .Points {};var (_ac ,_cf float32 ;_feg ,_g int ;_ce *_cg .Bitmap ;);for _e :=0;_e < _fce ;_e ++{_ac ,_cf ,_dfa =_ad .PtaUL .GetGeometry (_e );if _dfa !=nil {_fc .Log .Debug ("\u0047e\u0074\u0074\u0069\u006e\u0067\u0020\u0050\u0074\u0061\u0055\u004c \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_dfa );
return _c .Wrap (_dfa ,_af ,"\u0050\u0074\u0061\u0055\u004c\u0020\u0047\u0065\u006fm\u0065\u0074\u0072\u0079");};_feg ,_dfa =_ad .ClassIDs .Get (_e );if _dfa !=nil {_fc .Log .Debug ("\u0047\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0043\u006c\u0061s\u0073\u0049\u0044\u0020\u0066\u0061\u0069\u006c\u0065\u0064:\u0020\u0025\u0076",_dfa );
return _c .Wrap (_dfa ,_af ,"\u0043l\u0061\u0073\u0073\u0049\u0044");};_ce ,_dfa =_ad .UndilatedTemplates .GetBitmap (_feg );if _dfa !=nil {_fc .Log .Debug ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0055\u006ed\u0069\u006c\u0061\u0074\u0065\u0064\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_dfa );
return _c .Wrap (_dfa ,_af ,"\u0055\u006e\u0064\u0069la\u0074\u0065\u0064\u0020\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_g =_ce .Height ;_ad .PtaLL .AddPoint (_ac ,_cf +float32 (_g ));};return nil ;};func (_fg *Classer )AddPage (inputPage *_cg .Bitmap ,pageNumber int ,method Method )(_dcg error ){const _dca ="\u0043l\u0061s\u0073\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";
_fg .Widths [pageNumber ]=inputPage .Width ;_fg .Heights [pageNumber ]=inputPage .Height ;if _dcg =_fg .verifyMethod (method );_dcg !=nil {return _c .Wrap (_dcg ,_dca ,"");};_fe ,_dcc ,_dcg :=inputPage .GetComponents (_fg .Settings .Components ,_fg .Settings .MaxCompWidth ,_fg .Settings .MaxCompHeight );
if _dcg !=nil {return _c .Wrap (_dcg ,_dca ,"");};_fc .Log .Debug ("\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_fe );if _dcg =_fg .addPageComponents (inputPage ,_dcc ,_fe ,pageNumber ,method );_dcg !=nil {return _c .Wrap (_dcg ,_dca ,"");
};return nil ;};func (_faf Settings )Validate ()error {const _fedbb ="\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0073\u002e\u0056\u0061\u006ci\u0064\u0061\u0074\u0065";if _faf .Thresh < 0.4||_faf .Thresh > 0.98{return _c .Error (_fedbb ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074\u0068\u0072\u0065\u0073\u0068\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0034\u0020\u002d\u0020\u0030\u002e\u0039\u0038\u005d");
};if _faf .WeightFactor < 0.0||_faf .WeightFactor > 1.0{return _c .Error (_fedbb ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006ec\u006f\u0064\u0065\u0072\u0020w\u0065\u0069\u0067\u0068\u0074\u0020\u0066\u0061\u0063\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0030\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _faf .RankHaus < 0.5||_faf .RankHaus > 1.0{return _c .Error (_fedbb ,"\u006a\u0062\u0069\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0072a\u006e\u006b\u0020\u0068\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065 \u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065 [\u0030\u002e\u0035\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _faf .SizeHaus < 1||_faf .SizeHaus > 10{return _c .Error (_fedbb ,"\u006a\u0062\u0069\u0067\u0032 \u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0073\u0069\u007a\u0065\u0020h\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0031\u0020\u002d\u0020\u0031\u0030]");
};switch _faf .Components {case _cg .ComponentConn ,_cg .ComponentCharacters ,_cg .ComponentWords :default:return _c .Error (_fedbb ,"\u0069n\u0076\u0061\u006c\u0069d\u0020\u0063\u006c\u0061\u0073s\u0065r\u0020c\u006f\u006d\u0070\u006f\u006e\u0065\u006et");
};return nil ;};func _bb (_ba *_cg .Bitmap ,_fedb ,_gd ,_fca ,_dg int ,_cc *_cg .Bitmap )(_gde _df .Point ,_dff error ){const _fef ="\u0066i\u006e\u0061\u006c\u0041l\u0069\u0067\u006e\u006d\u0065n\u0074P\u006fs\u0069\u0074\u0069\u006f\u006e\u0069\u006eg";
if _ba ==nil {return _gde ,_c .Error (_fef ,"\u0073\u006f\u0075\u0072ce\u0020\u006e\u006f\u0074\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064");};if _cc ==nil {return _gde ,_c .Error (_fef ,"t\u0065\u006d\u0070\u006cat\u0065 \u006e\u006f\u0074\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064");
};_abg ,_fgf :=_cc .Width ,_cc .Height ;_ag ,_aeb :=_fedb -_fca -JbAddedPixels ,_gd -_dg -JbAddedPixels ;_fc .Log .Trace ("\u0078\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0079\u003a\u0020\u0027\u0025\u0064'\u002c\u0020\u0077\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0068\u003a \u0027\u0025\u0064\u0027\u002c\u0020\u0062\u0078\u003a\u0020\u0027\u0025d'\u002c\u0020\u0062\u0079\u003a\u0020\u0027\u0025\u0064\u0027",_fedb ,_gd ,_abg ,_fgf ,_ag ,_aeb );
_gee ,_dff :=_cg .Rect (_ag ,_aeb ,_abg ,_fgf );if _dff !=nil {return _gde ,_c .Wrap (_dff ,_fef ,"");};_cbf ,_ ,_dff :=_ba .ClipRectangle (_gee );if _dff !=nil {_fc .Log .Error ("\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069\u0070\u0020\u0072\u0065c\u0074\u0061\u006e\u0067\u006c\u0065\u003a\u0020\u0025\u0076",_gee );
return _gde ,_c .Wrap (_dff ,_fef ,"");};_abe :=_cg .New (_cbf .Width ,_cbf .Height );_bc :=_f .MaxInt32 ;var _cgf ,_be ,_dfac ,_fcc ,_dcac int ;for _cgf =-1;_cgf <=1;_cgf ++{for _be =-1;_be <=1;_be ++{if _ ,_dff =_cg .Copy (_abe ,_cbf );_dff !=nil {return _gde ,_c .Wrap (_dff ,_fef ,"");
};if _dff =_abe .RasterOperation (_be ,_cgf ,_abg ,_fgf ,_cg .PixSrcXorDst ,_cc ,0,0);_dff !=nil {return _gde ,_c .Wrap (_dff ,_fef ,"");};_dfac =_abe .CountPixels ();if _dfac < _bc {_fcc =_be ;_dcac =_cgf ;_bc =_dfac ;};};};_gde .X =_fcc ;_gde .Y =_dcac ;
return _gde ,nil ;};func (_cgg *Classer )classifyRankHaus (_cbff *_cg .Boxes ,_cfc *_cg .Bitmaps ,_ece int )error {const _dgc ="\u0063\u006ca\u0073\u0073\u0069f\u0079\u0052\u0061\u006e\u006b\u0048\u0061\u0075\u0073";if _cbff ==nil {return _c .Error (_dgc ,"\u0062\u006fx\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};if _cfc ==nil {return _c .Error (_dgc ,"\u0070\u0069x\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};_dab :=len (_cfc .Values );if _dab ==0{return _c .Error (_dgc ,"e\u006dp\u0074\u0079\u0020\u006e\u0065\u0077\u0020\u0063o\u006d\u0070\u006f\u006een\u0074\u0073");
};_egb :=_cfc .CountPixels ();_ggc :=_cgg .Settings .SizeHaus ;_ace :=_cg .SelCreateBrick (_ggc ,_ggc ,_ggc /2,_ggc /2,_cg .SelHit );_agc :=&_cg .Bitmaps {Values :make ([]*_cg .Bitmap ,_dab )};_gdec :=&_cg .Bitmaps {Values :make ([]*_cg .Bitmap ,_dab )};
var (_cecc ,_cgc ,_fcb *_cg .Bitmap ;_aad error ;);for _gaa :=0;_gaa < _dab ;_gaa ++{_cecc ,_aad =_cfc .GetBitmap (_gaa );if _aad !=nil {return _c .Wrap (_aad ,_dgc ,"");};_cgc ,_aad =_cecc .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);
if _aad !=nil {return _c .Wrap (_aad ,_dgc ,"");};_fcb ,_aad =_cg .Dilate (nil ,_cgc ,_ace );if _aad !=nil {return _c .Wrap (_aad ,_dgc ,"");};_agc .Values [_dab ]=_cgc ;_gdec .Values [_dab ]=_fcb ;};_fcba ,_aad :=_cg .Centroids (_agc .Values );if _aad !=nil {return _c .Wrap (_aad ,_dgc ,"");
};if _aad =_fcba .Add (_cgg .CentroidPoints );_aad !=nil {_fc .Log .Trace ("\u004e\u006f\u0020\u0063en\u0074\u0072\u006f\u0069\u0064\u0073\u0020\u0074\u006f\u0020\u0061\u0064\u0064");};if _cgg .Settings .RankHaus ==1.0{_aad =_cgg .classifyRankHouseOne (_cbff ,_cfc ,_agc ,_gdec ,_fcba ,_ece );
}else {_aad =_cgg .classifyRankHouseNonOne (_cbff ,_cfc ,_agc ,_gdec ,_fcba ,_egb ,_ece );};if _aad !=nil {return _c .Wrap (_aad ,_dgc ,"");};return nil ;};func DefaultSettings ()Settings {_cac :=&Settings {};_cac .SetDefault ();return *_cac };type similarTemplatesFinder struct{Classer *Classer ;
Width int ;Height int ;Index int ;CurrentNumbers []int ;N int ;};var TwoByTwoWalk =[]int {0,0,0,1,-1,0,0,-1,1,0,-1,1,1,1,-1,-1,1,-1,0,-2,2,0,0,2,-2,0,-1,-2,1,-2,2,-1,2,1,1,2,-1,2,-2,1,-2,-1,-2,-2,2,-2,2,2,-2,2};const (MaxConnCompWidth =350;MaxCharCompWidth =350;
MaxWordCompWidth =1000;MaxCompHeight =120;);func (_ffdb *Classer )classifyRankHouseOne (_fdc *_cg .Boxes ,_eccc ,_gfg ,_agcd *_cg .Bitmaps ,_fbb *_cg .Points ,_afb int )(_ddb error ){const _eef ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_bad ,_dbd ,_degg ,_adb float32 ;_cga int ;_aab ,_ebc ,_aea ,_bbg ,_dcfd *_cg .Bitmap ;_ede ,_afd bool ;);for _eea :=0;_eea < len (_eccc .Values );_eea ++{_ebc =_gfg .Values [_eea ];_aea =_agcd .Values [_eea ];_bad ,_dbd ,_ddb =_fbb .GetGeometry (_eea );
if _ddb !=nil {return _c .Wrapf (_ddb ,_eef ,"\u0066\u0069\u0072\u0073\u0074\u0020\u0067\u0065\u006fm\u0065\u0074\u0072\u0079");};_dbb :=len (_ffdb .UndilatedTemplates .Values );_ede =false ;_gcb :=_cge (_ffdb ,_ebc );for _cga =_gcb .Next ();_cga > -1;
{_bbg ,_ddb =_ffdb .UndilatedTemplates .GetBitmap (_cga );if _ddb !=nil {return _c .Wrap (_ddb ,_eef ,"\u0062\u006d\u0033");};_dcfd ,_ddb =_ffdb .DilatedTemplates .GetBitmap (_cga );if _ddb !=nil {return _c .Wrap (_ddb ,_eef ,"\u0062\u006d\u0034");};_degg ,_adb ,_ddb =_ffdb .CentroidPointsTemplates .GetGeometry (_cga );
if _ddb !=nil {return _c .Wrap (_ddb ,_eef ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0073");};_afd ,_ddb =_cg .HausTest (_ebc ,_aea ,_bbg ,_dcfd ,_bad -_degg ,_dbd -_adb ,MaxDiffWidth ,MaxDiffHeight );
if _ddb !=nil {return _c .Wrap (_ddb ,_eef ,"");};if _afd {_ede =true ;if _ddb =_ffdb .ClassIDs .Add (_cga );_ddb !=nil {return _c .Wrap (_ddb ,_eef ,"");};if _ddb =_ffdb .ComponentPageNumbers .Add (_afb );_ddb !=nil {return _c .Wrap (_ddb ,_eef ,"");};
if _ffdb .Settings .KeepClassInstances {_eda ,_edee :=_ffdb .ClassInstances .GetBitmaps (_cga );if _edee !=nil {return _c .Wrap (_edee ,_eef ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_aab ,_edee =_eccc .GetBitmap (_eea );if _edee !=nil {return _c .Wrap (_edee ,_eef ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");
};_eda .AddBitmap (_aab );_bacf ,_edee :=_fdc .Get (_eea );if _edee !=nil {return _c .Wrap (_edee ,_eef ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_eda .AddBox (_bacf );};break ;};};if !_ede {if _ddb =_ffdb .ClassIDs .Add (_dbb );_ddb !=nil {return _c .Wrap (_ddb ,_eef ,"");
};if _ddb =_ffdb .ComponentPageNumbers .Add (_afb );_ddb !=nil {return _c .Wrap (_ddb ,_eef ,"");};_eab :=&_cg .Bitmaps {};_aab ,_ddb =_eccc .GetBitmap (_eea );if _ddb !=nil {return _c .Wrap (_ddb ,_eef ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_eab .Values =append (_eab .Values ,_aab );
_edc ,_bea :=_aab .Width ,_aab .Height ;_ffdb .TemplatesSize .Add (uint64 (_bea )*uint64 (_edc ),_dbb );_fac ,_ffa :=_fdc .Get (_eea );if _ffa !=nil {return _c .Wrap (_ffa ,_eef ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_eab .AddBox (_fac );_ffdb .ClassInstances .AddBitmaps (_eab );
_ffdb .CentroidPointsTemplates .AddPoint (_bad ,_dbd );_ffdb .UndilatedTemplates .AddBitmap (_ebc );_ffdb .DilatedTemplates .AddBitmap (_aea );};};return nil ;};type Settings struct{MaxCompWidth int ;MaxCompHeight int ;SizeHaus int ;RankHaus float64 ;Thresh float64 ;
WeightFactor float64 ;KeepClassInstances bool ;Components _cg .Component ;Method Method ;};func (_gf *Classer )getULCorners (_db *_cg .Bitmap ,_fd *_cg .Boxes )error {const _ab ="\u0067\u0065\u0074U\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _db ==nil {return _c .Error (_ab ,"\u006e\u0069l\u0020\u0069\u006da\u0067\u0065\u0020\u0062\u0069\u0074\u006d\u0061\u0070");
};if _fd ==nil {return _c .Error (_ab ,"\u006e\u0069\u006c\u0020\u0062\u006f\u0075\u006e\u0064\u0073");};if _gf .PtaUL ==nil {_gf .PtaUL =&_cg .Points {};};_cb :=len (*_fd );var (_bf ,_dbf ,_eb ,_ge int ;_ff ,_fed ,_dfe ,_fdf float32 ;_cae error ;_gg *_df .Rectangle ;
_dcf *_cg .Bitmap ;_dd _df .Point ;);for _fdg :=0;_fdg < _cb ;_fdg ++{_bf =_gf .BaseIndex +_fdg ;if _ff ,_fed ,_cae =_gf .CentroidPoints .GetGeometry (_bf );_cae !=nil {return _c .Wrap (_cae ,_ab ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050o\u0069\u006e\u0074\u0073");
};if _dbf ,_cae =_gf .ClassIDs .Get (_bf );_cae !=nil {return _c .Wrap (_cae ,_ab ,"\u0043\u006c\u0061s\u0073\u0049\u0044\u0073\u002e\u0047\u0065\u0074");};if _dfe ,_fdf ,_cae =_gf .CentroidPointsTemplates .GetGeometry (_dbf );_cae !=nil {return _c .Wrap (_cae ,_ab ,"\u0043\u0065\u006etr\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074\u0073\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");
};_fec :=_dfe -_ff ;_ec :=_fdf -_fed ;if _fec >=0{_eb =int (_fec +0.5);}else {_eb =int (_fec -0.5);};if _ec >=0{_ge =int (_ec +0.5);}else {_ge =int (_ec -0.5);};if _gg ,_cae =_fd .Get (_fdg );_cae !=nil {return _c .Wrap (_cae ,_ab ,"");};_eee ,_fba :=_gg .Min .X ,_gg .Min .Y ;
_dcf ,_cae =_gf .UndilatedTemplates .GetBitmap (_dbf );if _cae !=nil {return _c .Wrap (_cae ,_ab ,"\u0055\u006e\u0064\u0069\u006c\u0061\u0074\u0065\u0064\u0054e\u006d\u0070\u006c\u0061\u0074\u0065\u0073.\u0047\u0065\u0074\u0028\u0069\u0043\u006c\u0061\u0073\u0073\u0029");
};_dd ,_cae =_bb (_db ,_eee ,_fba ,_eb ,_ge ,_dcf );if _cae !=nil {return _c .Wrap (_cae ,_ab ,"");};_gf .PtaUL .AddPoint (float32 (_eee -_eb +_dd .X ),float32 (_fba -_ge +_dd .Y ));};return nil ;};const (RankHaus Method =iota ;Correlation ;);func Init (settings Settings )(*Classer ,error ){const _ca ="\u0063\u006c\u0061s\u0073\u0065\u0072\u002e\u0049\u006e\u0069\u0074";
_a :=&Classer {Settings :settings ,Widths :map[int ]int {},Heights :map[int ]int {},TemplatesSize :_dc .IntsMap {},TemplateAreas :&_dc .IntSlice {},ComponentPageNumbers :&_dc .IntSlice {},ClassIDs :&_dc .IntSlice {},ComponentsNumber :&_dc .IntSlice {},CentroidPoints :&_cg .Points {},CentroidPointsTemplates :&_cg .Points {},UndilatedTemplates :&_cg .Bitmaps {},DilatedTemplates :&_cg .Bitmaps {},ClassInstances :&_cg .BitmapsArray {},FgTemplates :&_dc .NumSlice {}};
if _ae :=_a .Settings .Validate ();_ae !=nil {return nil ,_c .Wrap (_ae ,_ca ,"");};return _a ,nil ;};func (_daa *Settings )SetDefault (){if _daa .MaxCompWidth ==0{switch _daa .Components {case _cg .ComponentConn :_daa .MaxCompWidth =MaxConnCompWidth ;
case _cg .ComponentCharacters :_daa .MaxCompWidth =MaxCharCompWidth ;case _cg .ComponentWords :_daa .MaxCompWidth =MaxWordCompWidth ;};};if _daa .MaxCompHeight ==0{_daa .MaxCompHeight =MaxCompHeight ;};if _daa .Thresh ==0.0{_daa .Thresh =0.9;};if _daa .WeightFactor ==0.0{_daa .WeightFactor =0.75;
};if _daa .RankHaus ==0.0{_daa .RankHaus =0.97;};if _daa .SizeHaus ==0{_daa .SizeHaus =2;};};func (_da *Classer )verifyMethod (_bff Method )error {if _bff !=RankHaus &&_bff !=Correlation {return _c .Error ("\u0076\u0065\u0072i\u0066\u0079\u004d\u0065\u0074\u0068\u006f\u0064","\u0069\u006e\u0076\u0061li\u0064\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072\u0020\u006d\u0065\u0074\u0068o\u0064");
};return nil ;};type Classer struct{BaseIndex int ;Settings Settings ;ComponentsNumber *_dc .IntSlice ;TemplateAreas *_dc .IntSlice ;Widths map[int ]int ;Heights map[int ]int ;NumberOfClasses int ;ClassInstances *_cg .BitmapsArray ;UndilatedTemplates *_cg .Bitmaps ;
DilatedTemplates *_cg .Bitmaps ;TemplatesSize _dc .IntsMap ;FgTemplates *_dc .NumSlice ;CentroidPoints *_cg .Points ;CentroidPointsTemplates *_cg .Points ;ClassIDs *_dc .IntSlice ;ComponentPageNumbers *_dc .IntSlice ;PtaUL *_cg .Points ;PtaLL *_cg .Points ;
};type Method int ;