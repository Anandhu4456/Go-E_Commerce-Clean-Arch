//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package timeutils ;import (_c "errors";_f "fmt";_e "regexp";_ce "strconv";_cb "time";);func ParsePdfTime (pdfTime string )(_cb .Time ,error ){_eg :=_gd .FindAllStringSubmatch (pdfTime ,1);if len (_eg )< 1{if len (pdfTime )> 0&&pdfTime [0]!='D'{pdfTime =_f .Sprintf ("\u0044\u003a\u0025\u0073",pdfTime );
return ParsePdfTime (pdfTime );};return _cb .Time {},_f .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0065\u0020s\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0073\u0029",pdfTime );};if len (_eg [0])!=10{return _cb .Time {},_c .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0067\u0065\u0078p\u0020\u0067\u0072\u006f\u0075\u0070 \u006d\u0061\u0074\u0063\u0068\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020!\u003d\u0020\u0031\u0030");
};_fbe ,_ :=_ce .ParseInt (_eg [0][1],10,32);_gfc ,_ :=_ce .ParseInt (_eg [0][2],10,32);_ea ,_ :=_ce .ParseInt (_eg [0][3],10,32);_fbg ,_ :=_ce .ParseInt (_eg [0][4],10,32);_cgf ,_ :=_ce .ParseInt (_eg [0][5],10,32);_eaa ,_ :=_ce .ParseInt (_eg [0][6],10,32);
var (_ba byte ;_da int64 ;_cf int64 ;);if len (_eg [0][7])> 0{_ba =_eg [0][7][0];}else {_ba ='+';};if len (_eg [0][8])> 0{_da ,_ =_ce .ParseInt (_eg [0][8],10,32);}else {_da =0;};if len (_eg [0][9])> 0{_cf ,_ =_ce .ParseInt (_eg [0][9],10,32);}else {_cf =0;
};_ge :=int (_da *60*60+_cf *60);switch _ba {case '-':_ge =-_ge ;case 'Z':_ge =0;};_gg :=_f .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_ba ,_da ,_cf );_eacc :=_cb .FixedZone (_gg ,_ge );return _cb .Date (int (_fbe ),_cb .Month (_gfc ),int (_ea ),int (_fbg ),int (_cgf ),int (_eaa ),0,_eacc ),nil ;
};func FormatPdfTime (in _cb .Time )string {_d :=in .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_fb ,_ :=_ce .ParseInt (_d [1:3],10,32);_b ,_ :=_ce .ParseInt (_d [4:6],10,32);_cec :=int64 (in .Year ());_ef :=int64 (in .Month ());_gc :=int64 (in .Day ());
_ed :=int64 (in .Hour ());_efd :=int64 (in .Minute ());_cg :=int64 (in .Second ());_df :=_d [0];return _f .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_cec ,_ef ,_gc ,_ed ,_efd ,_cg ,_df ,_fb ,_b );
};var _gd =_e .MustCompile ("\u005c\u0073\u002a\u0044\u005c\u0073\u002a:\u005c\u0073\u002a\u0028\u005c\u0064\u007b\u0034\u007d\u0029\u0028\u005c\u0064\u007b2\u007d)\u0028\u005c\u0064\u007b\u0032\u007d)\u0028\u005c\u0064\u007b\u0032\u007d\u0029(\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005b\u002b\u002d\u005a\u005d\u0029\u003f\u0028\u005cd\u007b\u0032\u007d\u0029\u003f\u0027\u003f\u0028\u005c\u0064\u007b\u0032\u007d)\u003f");
