//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
// 	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_de "bufio";_cf "bytes";_dd "crypto/md5";_bb "crypto/rand";_ggc "crypto/sha1";_gg "crypto/x509";_b "encoding/binary";_gf "encoding/hex";_cc "errors";_g "fmt";_gee "github.com/unidoc/pkcs7";_gcf "github.com/unidoc/unipdf/v3/common";
_bbe "github.com/unidoc/unipdf/v3/core";_bad "github.com/unidoc/unipdf/v3/core/security";_ac "github.com/unidoc/unipdf/v3/core/security/crypt";_fb "github.com/unidoc/unipdf/v3/internal/cmap";_gb "github.com/unidoc/unipdf/v3/internal/imageutil";_ea "github.com/unidoc/unipdf/v3/internal/license";
_dfc "github.com/unidoc/unipdf/v3/internal/sampling";_ff "github.com/unidoc/unipdf/v3/internal/textencoding";_gge "github.com/unidoc/unipdf/v3/internal/timeutils";_ggeb "github.com/unidoc/unipdf/v3/internal/transform";_gcg "github.com/unidoc/unipdf/v3/model/internal/docutil";
_bfg "github.com/unidoc/unipdf/v3/model/internal/fonts";_gfg "github.com/unidoc/unipdf/v3/model/mdp";_bfc "github.com/unidoc/unipdf/v3/model/sigutil";_gfe "github.com/unidoc/unipdf/v3/ps";_abf "github.com/unidoc/unitype";_cfc "golang.org/x/xerrors";_da "hash";
_bf "image";_c "image/color";_ "image/gif";_ "image/png";_geb "io";_gc "io/ioutil";_ab "math";_e "math/rand";_cd "os";_a "regexp";_cg "sort";_fc "strconv";_df "strings";_f "sync";_ge "time";_ddb "unicode";_eg "unicode/utf8";);

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_bbe .PdfIndirectObject ;SV *_bbe .PdfIndirectObject ;};

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_bffef *modelManager )GetPrimitiveFromModel (model PdfModel )_bbe .PdfObject {_cagf ,_bgbcg :=_bffef ._gbfdg [model ];if !_bgbcg {return nil ;};return _cagf ;};

// SetLocation sets the `Location` field of the signature.
func (_gfddg *PdfSignature )SetLocation (location string ){_gfddg .Location =_bbe .MakeString (location )};

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_bbe .PdfObjectInteger ;BitsPerComponent *_bbe .PdfObjectInteger ;VerticesPerRow *_bbe .PdfObjectInteger ;Decode *_bbe .PdfObjectArray ;Function []PdfFunction ;};var _dgfg =_a .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");


// ToGoImage converts the unidoc Image to a golang Image structure.
func (_abeed *Image )ToGoImage ()(_bf .Image ,error ){_gcf .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_afabe ,_cbaga :=_gb .NewImage (int (_abeed .Width ),int (_abeed .Height ),int (_abeed .BitsPerComponent ),_abeed .ColorComponents ,_abeed .Data ,_abeed ._gagad ,_abeed ._eacbf );
if _cbaga !=nil {return nil ,_cbaga ;};return _afabe ,nil ;};

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_cfbf :=NewPdfAnnotation ();_aee :=&PdfAnnotationWatermark {};_aee .PdfAnnotation =_cfbf ;_cfbf .SetContext (_aee );return _aee ;};

// ToPdfObject implements interface PdfModel.
func (_geeb *PdfAnnotationSquare )ToPdfObject ()_bbe .PdfObject {_geeb .PdfAnnotation .ToPdfObject ();_fgbf :=_geeb ._dbg ;_gbde :=_fgbf .PdfObject .(*_bbe .PdfObjectDictionary );if _geeb .PdfAnnotationMarkup !=nil {_geeb .PdfAnnotationMarkup .appendToPdfDictionary (_gbde );
};_gbde .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbe .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_gbde .SetIfNotNil ("\u0042\u0053",_geeb .BS );_gbde .SetIfNotNil ("\u0049\u0043",_geeb .IC );_gbde .SetIfNotNil ("\u0042\u0045",_geeb .BE );
_gbde .SetIfNotNil ("\u0052\u0044",_geeb .RD );return _fgbf ;};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bbe .PdfObject ;};func (_cgacdd *PdfWriter )getPdfVersion ()string {return _g .Sprintf ("\u0025\u0064\u002e%\u0064",_cgacdd ._dfadc .Major ,_cgacdd ._dfadc .Minor );};


// C returns the value of the cyan component of the color.
func (_gfcee *PdfColorDeviceCMYK )C ()float64 {return _gfcee [0]};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bagfg *PdfShadingType5 )ToPdfObject ()_bbe .PdfObject {_bagfg .PdfShading .ToPdfObject ();_gcdef ,_faec :=_bagfg .getShadingDict ();if _faec !=nil {_gcf .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _bagfg .BitsPerCoordinate !=nil {_gcdef .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_bagfg .BitsPerCoordinate );};if _bagfg .BitsPerComponent !=nil {_gcdef .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bagfg .BitsPerComponent );
};if _bagfg .VerticesPerRow !=nil {_gcdef .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_bagfg .VerticesPerRow );};if _bagfg .Decode !=nil {_gcdef .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_bagfg .Decode );};
if _bagfg .Function !=nil {if len (_bagfg .Function )==1{_gcdef .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bagfg .Function [0].ToPdfObject ());}else {_dcbf :=_bbe .MakeArray ();for _ ,_becec :=range _bagfg .Function {_dcbf .Append (_becec .ToPdfObject ());
};_gcdef .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dcbf );};};return _bagfg ._eecbb ;};

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_aefdc *PdfAcroForm ,_beeeb *PdfField ,_ebcag *PdfAnnotationWidget )(*_bbe .PdfObjectDictionary ,error );};

// ToPdfObject implements interface PdfModel.
func (_ec *PdfActionSubmitForm )ToPdfObject ()_bbe .PdfObject {_ec .PdfAction .ToPdfObject ();_ce :=_ec ._be ;_ged :=_ce .PdfObject .(*_bbe .PdfObjectDictionary );_ged .SetIfNotNil ("\u0053",_bbe .MakeName (string (ActionTypeSubmitForm )));if _ec .F !=nil {_ged .Set ("\u0046",_ec .F .ToPdfObject ());
};_ged .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_ec .Fields );_ged .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_ec .Flags );return _ce ;};

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_gfgc *BorderStyle )GetPdfName ()string {switch *_gfgc {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";
};return "";};type pdfFontType3 struct{fontCommon ;_bebga *_bbe .PdfIndirectObject ;

// These fields are specific to Type 3 fonts.
CharProcs _bbe .PdfObject ;Encoding _bbe .PdfObject ;FontBBox _bbe .PdfObject ;FontMatrix _bbe .PdfObject ;FirstChar _bbe .PdfObject ;LastChar _bbe .PdfObject ;Widths _bbe .PdfObject ;Resources _bbe .PdfObject ;_ecfga map[_ff .CharCode ]float64 ;_adfd _ff .TextEncoder ;
};type fontFile struct{_fcggd string ;_edfgg string ;_edaf _ff .SimpleEncoder ;};

// ParsePdfObject parses input pdf object into given output intent.
func (_aaedc *PdfOutputIntent )ParsePdfObject (object _bbe .PdfObject )error {_fbadg ,_afea :=_bbe .GetDict (object );if !_afea {_gcf .Log .Error ("\u0055\u006e\u006bno\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020%\u0054 \u0066o\u0072 \u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074",object );
return _cc .New ("\u0075\u006e\u006b\u006e\u006fw\u006e\u0020\u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074");
};_aaedc ._agbec =_fbadg ;_aaedc .Type ,_ =_fbadg .GetString ("\u0054\u0079\u0070\u0065");_ccdfef ,_afea :=_fbadg .GetString ("\u0053");if _afea {switch _ccdfef {case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411":_aaedc .S =PdfOutputIntentTypeA1 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00412":_aaedc .S =PdfOutputIntentTypeA2 ;
case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00413":_aaedc .S =PdfOutputIntentTypeA3 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00414":_aaedc .S =PdfOutputIntentTypeA4 ;case "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058":_aaedc .S =PdfOutputIntentTypeX ;
};};_aaedc .OutputCondition ,_ =_fbadg .GetString ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e");_aaedc .OutputConditionIdentifier ,_ =_fbadg .GetString ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r");
_aaedc .RegistryName ,_ =_fbadg .GetString ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065");_aaedc .Info ,_ =_fbadg .GetString ("\u0049\u006e\u0066\u006f");if _efdfa ,_babcac :=_bbe .GetStream (_fbadg .Get ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065"));
_babcac {_aaedc .ColorComponents ,_ =_bbe .GetIntVal (_efdfa .Get ("\u004e"));_aecfdb ,_acda :=_bbe .DecodeStream (_efdfa );if _acda !=nil {return _acda ;};_aaedc .DestOutputProfile =_aecfdb ;};return nil ;};func (_ffebe *PdfReader )newPdfOutlineItemFromIndirectObject (_ffded *_bbe .PdfIndirectObject )(*PdfOutlineItem ,error ){_ceddc ,_cafbc :=_ffded .PdfObject .(*_bbe .PdfObjectDictionary );
if !_cafbc {return nil ,_g .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_beeg :=NewPdfOutlineItem ();_fabg :=_ceddc .Get ("\u0054\u0069\u0074l\u0065");
if _fabg ==nil {return nil ,_g .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};_dacfdg ,_bfdae :=_bbe .GetString (_fabg );if !_bfdae {return nil ,_g .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_fabg );};_beeg .Title =_dacfdg ;if _fabgf :=_ceddc .Get ("\u0043\u006f\u0075n\u0074");
_fabgf !=nil {_ccbg ,_gdgde :=_fabgf .(*_bbe .PdfObjectInteger );if !_gdgde {return nil ,_g .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_fabgf );};_ebce :=int64 (*_ccbg );
_beeg .Count =&_ebce ;};if _fdgf :=_ceddc .Get ("\u0044\u0065\u0073\u0074");_fdgf !=nil {_beeg .Dest =_bbe .ResolveReference (_fdgf );if !_ffebe ._egggg {_gcff :=_ffebe .traverseObjectData (_beeg .Dest );if _gcff !=nil {return nil ,_gcff ;};};};if _bbge :=_ceddc .Get ("\u0041");
_bbge !=nil {_beeg .A =_bbe .ResolveReference (_bbge );if !_ffebe ._egggg {_fdff :=_ffebe .traverseObjectData (_beeg .A );if _fdff !=nil {return nil ,_fdff ;};};};if _afcc :=_ceddc .Get ("\u0053\u0045");_afcc !=nil {_beeg .SE =nil ;};if _feab :=_ceddc .Get ("\u0043");
_feab !=nil {_beeg .C =_bbe .ResolveReference (_feab );};if _cegeb :=_ceddc .Get ("\u0046");_cegeb !=nil {_beeg .F =_bbe .ResolveReference (_cegeb );};return _beeg ,nil ;};

// Mask returns the uin32 bitmask for the specific flag.
func (_baea FieldFlag )Mask ()uint32 {return uint32 (_baea )};

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_gcea *PdfField )GetContainingPdfObject ()_bbe .PdfObject {return _gcea ._acga };

// GetAllContentStreams gets all the content streams for a page as one string.
func (_abdce *PdfPage )GetAllContentStreams ()(string ,error ){_dgfb ,_bdda :=_abdce .GetContentStreams ();if _bdda !=nil {return "",_bdda ;};return _df .Join (_dgfb ,"\u0020"),nil ;};

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _bbe .PdfObject )(*PdfFont ,error ){return _dfbdd (fontObj ,true )};

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_bbe .PdfObjectArray ;_gfcgd *Image ;};

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_degg *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_bbe .PdfObject )(PdfColor ,error ){if len (objects )!=_degg .GetNumComponents (){return nil ,_cc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bfbfg ,_eabbc :=_bbe .GetNumbersAsFloat (objects );
if _eabbc !=nil {return nil ,_eabbc ;};return _degg .ColorFromFloats (_bfbfg );};

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _bbe .PdfObject ;Flags _bbe .PdfObject ;};var _ddaf =map[string ]struct{}{"\u0054\u0069\u0074l\u0065":{},"\u0041\u0075\u0074\u0068\u006f\u0072":{},"\u0053u\u0062\u006a\u0065\u0063\u0074":{},"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":{},"\u0043r\u0065\u0061\u0074\u006f\u0072":{},"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":{},"\u0054r\u0061\u0070\u0070\u0065\u0064":{},"\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":{},"\u004do\u0064\u0044\u0061\u0074\u0065":{}};


// LTV represents an LTV (Long-Term Validation) client. It is used to LTV
// enable signatures by adding validation and revocation data (certificate,
// OCSP and CRL information) to the DSS dictionary of a PDF document.
//
// LTV is added through the DSS by:
// - Adding certificates, OCSP and CRL information in the global scope of the
//   DSS. The global data is used for validating any of the signatures present
//   in the document.
// - Adding certificates, OCSP and CRL information for a single signature,
//   through an entry in the VRI dictionary of the DSS. The added data is used
//   for validating that particular signature only. This is the recommended
//   method for adding validation data for a signature. However, this is not
//   is not possible in the same revision the signature is applied. Validation
//   data for a signature is added based on the Contents entry of the signature,
//   which is known only after the revision is written. Even if the Contents
//   are known (e.g. when signing externally), updating the DSS at that point
//   would invalidate the calculated signature. As a result, if adding LTV
//   in the same revision is a requirement, use the first method.
//   See LTV.EnableChain.
// The client applies both methods, when possible.
//
// If `LTV.SkipExisting` is set to true (the default), validations are
// not added for signatures which are already present in the VRI entry of the
// document's DSS dictionary.
type LTV struct{

// CertClient is the client used to retrieve certificates.
CertClient *_bfc .CertClient ;

// OCSPClient is the client used to retrieve OCSP validation information.
OCSPClient *_bfc .OCSPClient ;

// CRLClient is the client used to retrieve CRL validation information.
CRLClient *_bfc .CRLClient ;

// SkipExisting specifies whether existing signature validations
// should be skipped.
SkipExisting bool ;_acgcc *PdfAppender ;_afgee *DSS ;};

// String returns a string that describes `font`.
func (_acadga *PdfFont )String ()string {_fcge :="";if _acadga ._afag .Encoder ()!=nil {_fcge =_acadga ._afag .Encoder ().String ();};return _g .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_acadga ._afag ,_acadga .baseFields ().coreString (),_fcge );
};

// GetNumComponents returns the number of color components (1 for Separation).
func (_gbge *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};

// GetPdfVersion gets the version of the PDF used within this document.
func (_fgdb *PdfWriter )GetPdfVersion ()string {return _fgdb .getPdfVersion ()};

// ToPdfObject returns the PDF representation of the pattern.
func (_agddd *PdfPattern )ToPdfObject ()_bbe .PdfObject {_dcdae :=_agddd .getDict ();_dcdae .Set ("\u0054\u0079\u0070\u0065",_bbe .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_dcdae .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_bbe .MakeInteger (_agddd .PatternType ));
return _agddd ._agefc ;};func (_eafd *PdfReader )newPdfAnnotationPolyLineFromDict (_faed *_bbe .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_ede :=PdfAnnotationPolyLine {};_feef ,_agfe :=_eafd .newPdfAnnotationMarkupFromDict (_faed );if _agfe !=nil {return nil ,_agfe ;
};_ede .PdfAnnotationMarkup =_feef ;_ede .Vertices =_faed .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_ede .LE =_faed .Get ("\u004c\u0045");_ede .BS =_faed .Get ("\u0042\u0053");_ede .IC =_faed .Get ("\u0049\u0043");_ede .BE =_faed .Get ("\u0042\u0045");
_ede .IT =_faed .Get ("\u0049\u0054");_ede .Measure =_faed .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_ede ,nil ;};

// IsSimple returns true if `font` is a simple font.
func (_ceac *PdfFont )IsSimple ()bool {_ ,_acce :=_ceac ._afag .(*pdfFontSimple );return _acce };

// ToPdfObject implements interface PdfModel.
func (_abff *Permissions )ToPdfObject ()_bbe .PdfObject {return _abff ._bddcd };func _gadad (_cacga *_bbe .PdfObjectDictionary )(*PdfFieldChoice ,error ){_adfb :=&PdfFieldChoice {};_adfb .Opt ,_ =_bbe .GetArray (_cacga .Get ("\u004f\u0070\u0074"));_adfb .TI ,_ =_bbe .GetInt (_cacga .Get ("\u0054\u0049"));
_adfb .I ,_ =_bbe .GetArray (_cacga .Get ("\u0049"));return _adfb ,nil ;};

// GetOptimizer returns current PDF optimizer.
func (_dedg *PdfWriter )GetOptimizer ()Optimizer {return _dedg ._aacdbg };func _efgggb (_ggba _bbe .PdfObject )(string ,error ){_ggba =_bbe .TraceToDirectObject (_ggba );switch _dcdbef :=_ggba .(type ){case *_bbe .PdfObjectString :return _dcdbef .Str (),nil ;
case *_bbe .PdfObjectStream :_ageae ,_aefca :=_bbe .DecodeStream (_dcdbef );if _aefca !=nil {return "",_aefca ;};return string (_ageae ),nil ;};return "",_g .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_ggba );
};

// ToPdfObject implements interface PdfModel.
func (_adbc *PdfAnnotationTrapNet )ToPdfObject ()_bbe .PdfObject {_adbc .PdfAnnotation .ToPdfObject ();_ccd :=_adbc ._dbg ;_afed :=_ccd .PdfObject .(*_bbe .PdfObjectDictionary );_afed .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbe .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));
return _ccd ;};func (_caff *PdfReader )loadStructure ()error {if _caff ._ffgcd .GetCrypter ()!=nil &&!_caff ._ffgcd .IsAuthenticated (){return _g .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_dgaba :=_caff ._ffgcd .GetTrailer ();if _dgaba ==nil {return _g .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_dfbga ,_agebf :=_dgaba .Get ("\u0052\u006f\u006f\u0074").(*_bbe .PdfObjectReference );if !_agebf {return _g .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_dgaba );
};_ebebf ,_feceg :=_caff ._ffgcd .LookupByReference (*_dfbga );if _feceg !=nil {_gcf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_feceg );
return _feceg ;};_fbeff ,_agebf :=_ebebf .(*_bbe .PdfIndirectObject );if !_agebf {_gcf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_ebebf ,*_dgaba );
return _cc .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_bbefg ,_agebf :=(*_fbeff ).PdfObject .(*_bbe .PdfObjectDictionary );if !_agebf {_gcf .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_fbeff .PdfObject );
return _cc .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_gcf .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_bbefg );_cgccf ,_agebf :=_bbefg .Get ("\u0050\u0061\u0067e\u0073").(*_bbe .PdfObjectReference );
if !_agebf {return _cc .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_bcdbag ,_feceg :=_caff ._ffgcd .LookupByReference (*_cgccf );
if _feceg !=nil {_gcf .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _feceg ;};_addae ,_agebf :=_bcdbag .(*_bbe .PdfIndirectObject );if !_agebf {_gcf .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");
_gcf .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_addae );return _cc .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_cegaa ,_agebf :=_addae .PdfObject .(*_bbe .PdfObjectDictionary );if !_agebf {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_addae );
return _cc .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_acddf ,_agebf :=_bbe .GetInt (_cegaa .Get ("\u0043\u006f\u0075n\u0074"));if !_agebf {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return _cc .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_agebf =_bbe .GetName (_cegaa .Get ("\u0054\u0079\u0070\u0065"));!_agebf {_gcf .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");
_cegaa .Set ("\u0054\u0079\u0070\u0065",_bbe .MakeName ("\u0050\u0061\u0067e\u0073"));};if _egdf ,_ccefg :=_bbe .GetInt (_cegaa .Get ("\u0052\u006f\u0074\u0061\u0074\u0065"));_ccefg {_ecabd :=int64 (*_egdf );_caff .Rotate =&_ecabd ;};_caff ._effc =_dfbga ;
_caff ._cagcc =_bbefg ;_caff ._bgded =_cegaa ;_caff ._feddd =_addae ;_caff ._defad =int (*_acddf );_caff ._cfgf =[]*_bbe .PdfIndirectObject {};_gdee :=map[_bbe .PdfObject ]struct{}{};_feceg =_caff .buildPageList (_addae ,nil ,_gdee );if _feceg !=nil {return _feceg ;
};_gcf .Log .Trace ("\u002d\u002d\u002d");_gcf .Log .Trace ("\u0054\u004f\u0043");_gcf .Log .Trace ("\u0050\u0061\u0067e\u0073");_gcf .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_caff ._cfgf ),_caff ._cfgf );_caff ._adeab ,_feceg =_caff .loadOutlines ();
if _feceg !=nil {_gcf .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_feceg );
return _feceg ;};_caff .AcroForm ,_feceg =_caff .loadForms ();if _feceg !=nil {return _feceg ;};_caff .DSS ,_feceg =_caff .loadDSS ();if _feceg !=nil {return _feceg ;};_caff ._fabc ,_feceg =_caff .loadPerms ();if _feceg !=nil {return _feceg ;};return nil ;
};

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overridden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _bbe .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {var _fegcg error ;encoder ,_fegcg =img .getSuitableEncoder ();if _fegcg !=nil {_gcf .Log .Debug ("F\u0061\u0069l\u0075\u0072\u0065\u0020\u006f\u006e\u0020\u0066\u0069\u006e\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0069\u0074\u0061b\u006c\u0065\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072,\u0020\u0066\u0061\u006c\u006c\u0062\u0061\u0063\u006b\u0020\u0074\u006f\u0020R\u0061\u0077\u0045\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_fegcg );
encoder =_bbe .NewRawEncoder ();};};encoder .UpdateParams (img .GetParamsDict ());_acegd ,_gcdf :=encoder .EncodeBytes (img .Data );if _gcdf !=nil {_gcf .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_gcdf );
return nil ,_gcdf ;};_gffdd :=NewXObjectImage ();_badg :=img .Width ;_bagg :=img .Height ;_gffdd .Width =&_badg ;_gffdd .Height =&_bagg ;_dfee :=img .BitsPerComponent ;_gffdd .BitsPerComponent =&_dfee ;_gffdd .Filter =encoder ;_gffdd .Stream =_acegd ;if cs ==nil {if img .ColorComponents ==1{_gffdd .ColorSpace =NewPdfColorspaceDeviceGray ();
if img .BitsPerComponent ==16{switch encoder .(type ){case *_bbe .DCTEncoder :_gffdd .ColorSpace =NewPdfColorspaceDeviceRGB ();_dfee =8;_gffdd .BitsPerComponent =&_dfee ;};};}else if img .ColorComponents ==3{_gffdd .ColorSpace =NewPdfColorspaceDeviceRGB ();
}else if img .ColorComponents ==4{switch encoder .(type ){case *_bbe .DCTEncoder :_gffdd .ColorSpace =NewPdfColorspaceDeviceRGB ();default:_gffdd .ColorSpace =NewPdfColorspaceDeviceCMYK ();};}else {return nil ,_cc .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");
};}else {_gffdd .ColorSpace =cs ;};if len (img ._gagad )!=0{_egbbg :=NewXObjectImage ();_egbbg .Filter =encoder ;_dbdea ,_cgffg :=encoder .EncodeBytes (img ._gagad );if _cgffg !=nil {_gcf .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_cgffg );
return nil ,_cgffg ;};_egbbg .Stream =_dbdea ;_egbbg .BitsPerComponent =_gffdd .BitsPerComponent ;_egbbg .Width =&img .Width ;_egbbg .Height =&img .Height ;_egbbg .ColorSpace =NewPdfColorspaceDeviceGray ();_gffdd .SMask =_egbbg .ToPdfObject ();}else {_gffdd .SMask =xobjIn .SMask ;
_gffdd .ImageMask =xobjIn .ImageMask ;if _gffdd .ColorSpace .GetNumComponents ()==1{_cacea (_gffdd );};};return _gffdd ,nil ;};

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_cbddg *PdfFontDescriptor )ToPdfObject ()_bbe .PdfObject {_eaeg :=_bbe .MakeDict ();if _cbddg ._gedf ==nil {_cbddg ._gedf =&_bbe .PdfIndirectObject {};};_cbddg ._gedf .PdfObject =_eaeg ;_eaeg .Set ("\u0054\u0079\u0070\u0065",_bbe .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));
if _cbddg .FontName !=nil {_eaeg .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_cbddg .FontName );};if _cbddg .FontFamily !=nil {_eaeg .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_cbddg .FontFamily );};if _cbddg .FontStretch !=nil {_eaeg .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_cbddg .FontStretch );
};if _cbddg .FontWeight !=nil {_eaeg .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_cbddg .FontWeight );};if _cbddg .Flags !=nil {_eaeg .Set ("\u0046\u006c\u0061g\u0073",_cbddg .Flags );};if _cbddg .FontBBox !=nil {_eaeg .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_cbddg .FontBBox );
};if _cbddg .ItalicAngle !=nil {_eaeg .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_cbddg .ItalicAngle );};if _cbddg .Ascent !=nil {_eaeg .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_cbddg .Ascent );};if _cbddg .Descent !=nil {_eaeg .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_cbddg .Descent );
};if _cbddg .Leading !=nil {_eaeg .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_cbddg .Leading );};if _cbddg .CapHeight !=nil {_eaeg .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_cbddg .CapHeight );};if _cbddg .XHeight !=nil {_eaeg .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_cbddg .XHeight );
};if _cbddg .StemV !=nil {_eaeg .Set ("\u0053\u0074\u0065m\u0056",_cbddg .StemV );};if _cbddg .StemH !=nil {_eaeg .Set ("\u0053\u0074\u0065m\u0048",_cbddg .StemH );};if _cbddg .AvgWidth !=nil {_eaeg .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_cbddg .AvgWidth );
};if _cbddg .MaxWidth !=nil {_eaeg .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_cbddg .MaxWidth );};if _cbddg .MissingWidth !=nil {_eaeg .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_cbddg .MissingWidth );};if _cbddg .FontFile !=nil {_eaeg .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_cbddg .FontFile );
};if _cbddg .FontFile2 !=nil {_eaeg .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_cbddg .FontFile2 );};if _cbddg .FontFile3 !=nil {_eaeg .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_cbddg .FontFile3 );};if _cbddg .CharSet !=nil {_eaeg .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_cbddg .CharSet );
};if _cbddg .Style !=nil {_eaeg .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_cbddg .FontName );};if _cbddg .Lang !=nil {_eaeg .Set ("\u004c\u0061\u006e\u0067",_cbddg .Lang );};if _cbddg .FD !=nil {_eaeg .Set ("\u0046\u0044",_cbddg .FD );};
if _cbddg .CIDSet !=nil {_eaeg .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_cbddg .CIDSet );};return _cbddg ._gedf ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_ffbbg *PdfShadingType6 )ToPdfObject ()_bbe .PdfObject {_ffbbg .PdfShading .ToPdfObject ();_gddga ,_cagcg :=_ffbbg .getShadingDict ();if _cagcg !=nil {_gcf .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _ffbbg .BitsPerCoordinate !=nil {_gddga .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_ffbbg .BitsPerCoordinate );};if _ffbbg .BitsPerComponent !=nil {_gddga .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ffbbg .BitsPerComponent );
};if _ffbbg .BitsPerFlag !=nil {_gddga .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_ffbbg .BitsPerFlag );};if _ffbbg .Decode !=nil {_gddga .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_ffbbg .Decode );};if _ffbbg .Function !=nil {if len (_ffbbg .Function )==1{_gddga .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ffbbg .Function [0].ToPdfObject ());
}else {_cggcf :=_bbe .MakeArray ();for _ ,_abbgf :=range _ffbbg .Function {_cggcf .Append (_abbgf .ToPdfObject ());};_gddga .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cggcf );};};return _ffbbg ._eecbb ;};func (_bbfae *PdfWriter )copyObjects (){_cgeaf :=make (map[_bbe .PdfObject ]_bbe .PdfObject );
_gadegeb :=make ([]_bbe .PdfObject ,0,len (_bbfae ._ageab ));_fbbcd :=make (map[_bbe .PdfObject ]struct{},len (_bbfae ._ageab ));_ecbc :=make (map[_bbe .PdfObject ]struct{});for _ ,_aggfbd :=range _bbfae ._ageab {_deeb :=_bbfae .copyObject (_aggfbd ,_cgeaf ,_ecbc ,false );
if _ ,_fdce :=_ecbc [_aggfbd ];_fdce {continue ;};_gadegeb =append (_gadegeb ,_deeb );_fbbcd [_deeb ]=struct{}{};};_bbfae ._ageab =_gadegeb ;_bbfae ._ffebc =_fbbcd ;_bbfae ._befcg =_bbfae .copyObject (_bbfae ._befcg ,_cgeaf ,nil ,false ).(*_bbe .PdfIndirectObject );
_bbfae ._ecdbbf =_bbfae .copyObject (_bbfae ._ecdbbf ,_cgeaf ,nil ,false ).(*_bbe .PdfIndirectObject );if _bbfae ._bgdgf !=nil {_bbfae ._bgdgf =_bbfae .copyObject (_bbfae ._bgdgf ,_cgeaf ,nil ,false ).(*_bbe .PdfIndirectObject );};if _bbfae ._degbe {_gbagc :=make (map[_bbe .PdfObject ]int64 );
for _ggbae ,_fbcf :=range _bbfae ._febda {if _dgaae ,_adbcec :=_cgeaf [_ggbae ];_adbcec {_gbagc [_dgaae ]=_fbcf ;}else {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");
};};_bbfae ._febda =_gbagc ;};};

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_aaeca *PdfFont )CharcodesToUnicodeWithStats (charcodes []_ff .CharCode )(_eebe []rune ,_fbdba ,_ceec int ){_ebdg ,_fbdba ,_ceec :=_aaeca .CharcodesToStrings (charcodes );return []rune (_df .Join (_ebdg ,"")),_fbdba ,_ceec ;};

// Encoder returns the font's text encoder.
func (_gbebd *PdfFont )Encoder ()_ff .TextEncoder {_cacbg :=_gbebd .actualFont ();if _cacbg ==nil {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_gbebd ._afag );
return nil ;};return _cacbg .Encoder ();};func (_dfadd *PdfAppender )replaceObject (_dcbb ,_gaea _bbe .PdfObject ){switch _dfaa :=_dcbb .(type ){case *_bbe .PdfIndirectObject :_dfadd ._aggfg [_gaea ]=_dfaa .ObjectNumber ;case *_bbe .PdfObjectStream :_dfadd ._aggfg [_gaea ]=_dfaa .ObjectNumber ;
};};

// ToPdfObject implements interface PdfModel.
func (_bff *PdfActionGoToR )ToPdfObject ()_bbe .PdfObject {_bff .PdfAction .ToPdfObject ();_bag :=_bff ._be ;_dff :=_bag .PdfObject .(*_bbe .PdfObjectDictionary );_dff .SetIfNotNil ("\u0053",_bbe .MakeName (string (ActionTypeGoToR )));if _bff .F !=nil {_dff .Set ("\u0046",_bff .F .ToPdfObject ());
};_dff .SetIfNotNil ("\u0044",_bff .D );_dff .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_bff .NewWindow );return _bag ;};

// Y returns the value of the yellow component of the color.
func (_bcbb *PdfColorDeviceCMYK )Y ()float64 {return _bcbb [2]};func (_gfde *pdfCIDFontType2 )baseFields ()*fontCommon {return &_gfde .fontCommon };

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
/*
	Format: [/DeviceN names alternateSpace tintTransform]
	    or: [/DeviceN names alternateSpace tintTransform attributes]
*/
func (_dfdg *PdfColorspaceDeviceN )ToPdfObject ()_bbe .PdfObject {_bdea :=_bbe .MakeArray (_bbe .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_bdea .Append (_dfdg .ColorantNames );_bdea .Append (_dfdg .AlternateSpace .ToPdfObject ());_bdea .Append (_dfdg .TintTransform .ToPdfObject ());
if _dfdg .Attributes !=nil {_bdea .Append (_dfdg .Attributes .ToPdfObject ());};if _dfdg ._ggb !=nil {_dfdg ._ggb .PdfObject =_bdea ;return _dfdg ._ggb ;};return _bdea ;};

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_dbdfb *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _gaffa []_ff .TextEncoder ;var _eeaeg _ff .CMapEncoder ;if _dcgbb :=_dbdfb .baseFields ()._ggdec ;_dcgbb !=nil {_eeaeg =_ff .NewCMapEncoder ("",nil ,_dcgbb );};_cdgg :=_dbdfb .Encoder ();
if _cdgg !=nil {switch _bcbbdb :=_cdgg .(type ){case _ff .SimpleEncoder :_adda :=_bcbbdb .BaseName ();if _ ,_gadbd :=_adaa [_adda ];_gadbd {_gaffa =append (_gaffa ,_cdgg );};};};if len (_gaffa )==0{if _dbdfb .baseFields ()._ggdec !=nil {_gaffa =append (_gaffa ,_eeaeg );
};if _cdgg !=nil {_gaffa =append (_gaffa ,_cdgg );};};var _cfddd _cf .Buffer ;var _gbda int ;for _ ,_acedf :=range data {var _gdbg bool ;for _ ,_cacbdg :=range _gaffa {if _gfcca :=_cacbdg .Encode (string (_acedf ));len (_gfcca )> 0{_cfddd .Write (_gfcca );
_gdbg =true ;break ;};};if !_gdbg {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_acedf );
_gbda ++;};};if _gbda !=0{_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_gbda ,_dbdfb ,_gaffa );
};return _cfddd .Bytes (),_gbda ;};

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _bbe .PdfObjectArray )(*PdfRectangle ,error ){_gedfc :=PdfRectangle {};if arr .Len ()!=4{return nil ,_cc .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");
};var _bfeg error ;_gedfc .Llx ,_bfeg =_bbe .GetNumberAsFloat (arr .Get (0));if _bfeg !=nil {return nil ,_bfeg ;};_gedfc .Lly ,_bfeg =_bbe .GetNumberAsFloat (arr .Get (1));if _bfeg !=nil {return nil ,_bfeg ;};_gedfc .Urx ,_bfeg =_bbe .GetNumberAsFloat (arr .Get (2));
if _bfeg !=nil {return nil ,_bfeg ;};_gedfc .Ury ,_bfeg =_bbe .GetNumberAsFloat (arr .Get (3));if _bfeg !=nil {return nil ,_bfeg ;};return &_gedfc ,nil ;};

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_ccfb PdfModel ;Rect _bbe .PdfObject ;Contents _bbe .PdfObject ;P _bbe .PdfObject ;NM _bbe .PdfObject ;M _bbe .PdfObject ;F _bbe .PdfObject ;AP _bbe .PdfObject ;AS _bbe .PdfObject ;Border _bbe .PdfObject ;C _bbe .PdfObject ;StructParent _bbe .PdfObject ;
OC _bbe .PdfObject ;_dbg *_bbe .PdfIndirectObject ;};

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_gfe .PSProgram ;_aggfb *_gfe .PSExecutor ;_cefed []byte ;_aaagc *_bbe .PdfObjectStream ;};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_cfef :=NewPdfAnnotation ();_acd :=&PdfAnnotationMovie {};_acd .PdfAnnotation =_cfef ;_cfef .SetContext (_acd );return _acd ;};func _gdgdeb (_fcafd *_bbe .PdfObjectDictionary )(*PdfShadingType2 ,error ){_eddd :=PdfShadingType2 {};
_gcaef :=_fcafd .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _gcaef ==nil {_gcf .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");
return nil ,ErrRequiredAttributeMissing ;};_gbede ,_abbcab :=_gcaef .(*_bbe .PdfObjectArray );if !_abbcab {_gcf .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gcaef );
return nil ,_cc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};if _gbede .Len ()!=4{_gcf .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_gbede .Len ());
return nil ,_cc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");};_eddd .Coords =_gbede ;if _cebgd :=_fcafd .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_cebgd !=nil {_cebgd =_bbe .TraceToDirectObject (_cebgd );
_edfag ,_afcdg :=_cebgd .(*_bbe .PdfObjectArray );if !_afcdg {_gcf .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cebgd );return nil ,_cc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_eddd .Domain =_edfag ;};_gcaef =_fcafd .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _gcaef ==nil {_gcf .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_eddd .Function =[]PdfFunction {};if _bbdgc ,_gcca :=_gcaef .(*_bbe .PdfObjectArray );_gcca {for _ ,_bdbea :=range _bbdgc .Elements (){_egcd ,_decgd :=_bdce (_bdbea );if _decgd !=nil {_gcf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_decgd );
return nil ,_decgd ;};_eddd .Function =append (_eddd .Function ,_egcd );};}else {_abeef ,_gdcbad :=_bdce (_gcaef );if _gdcbad !=nil {_gcf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gdcbad );
return nil ,_gdcbad ;};_eddd .Function =append (_eddd .Function ,_abeef );};if _gbeac :=_fcafd .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_gbeac !=nil {_gbeac =_bbe .TraceToDirectObject (_gbeac );_fbfd ,_fdbgce :=_gbeac .(*_bbe .PdfObjectArray );if !_fdbgce {_gcf .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gbeac );
return nil ,_bbe .ErrTypeError ;};if _fbfd .Len ()!=2{_gcf .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_fbfd .Len ());return nil ,ErrInvalidAttribute ;
};_eddd .Extend =_fbfd ;};return &_eddd ,nil ;};func (_fgfac *PdfWriter )addObject (_ddefe _bbe .PdfObject )bool {_ecgd :=_fgfac .hasObject (_ddefe );if !_ecgd {_cagedf :=_bbe .ResolveReferencesDeep (_ddefe ,_fgfac ._dcddd );if _cagedf !=nil {_gcf .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_cagedf );
};_fgfac ._ageab =append (_fgfac ._ageab ,_ddefe );_fgfac ._ffebc [_ddefe ]=struct{}{};return true ;};return false ;};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};

// GetPreviousRevision returns the previous revision of PdfReader for the Pdf document
func (_bgbed *PdfReader )GetPreviousRevision ()(*PdfReader ,error ){if _bgbed ._ffgcd .GetRevisionNumber ()==0{return nil ,_cc .New ("\u0070\u0072e\u0076\u0069\u006f\u0075\u0073\u0020\u0076\u0065\u0072\u0073\u0069\u006f\u006e\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065xi\u0073\u0074");
};if _baefa ,_cdccb :=_bgbed ._eebfa [_bgbed ];_cdccb {return _baefa ,nil ;};_gcbda ,_eefec :=_bgbed ._ffgcd .GetPreviousRevisionReadSeeker ();if _eefec !=nil {return nil ,_eefec ;};_bcedd ,_eefec :=_cbab (_gcbda ,_bgbed ._cacaab ,_bgbed ._aded ,"\u006do\u0064\u0065\u006c\u003aG\u0065\u0074\u0050\u0072\u0065v\u0069o\u0075s\u0052\u0065\u0076\u0069\u0073\u0069\u006fn");
if _eefec !=nil {return nil ,_eefec ;};_bgbed ._dccdf [_bgbed ._ffgcd .GetRevisionNumber ()-1]=_bcedd ;_bgbed ._eebfa [_bgbed ]=_bcedd ;_bcedd ._eebfa =_bgbed ._eebfa ;return _bcedd ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_agcf *PdfAnnotationFreeText )ToPdfObject ()_bbe .PdfObject {_agcf .PdfAnnotation .ToPdfObject ();_baf :=_agcf ._dbg ;_ddbc :=_baf .PdfObject .(*_bbe .PdfObjectDictionary );_agcf .PdfAnnotationMarkup .appendToPdfDictionary (_ddbc );_ddbc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbe .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));
_ddbc .SetIfNotNil ("\u0044\u0041",_agcf .DA );_ddbc .SetIfNotNil ("\u0051",_agcf .Q );_ddbc .SetIfNotNil ("\u0052\u0043",_agcf .RC );_ddbc .SetIfNotNil ("\u0044\u0053",_agcf .DS );_ddbc .SetIfNotNil ("\u0043\u004c",_agcf .CL );_ddbc .SetIfNotNil ("\u0049\u0054",_agcf .IT );
_ddbc .SetIfNotNil ("\u0042\u0045",_agcf .BE );_ddbc .SetIfNotNil ("\u0052\u0044",_agcf .RD );_ddbc .SetIfNotNil ("\u0042\u0053",_agcf .BS );_ddbc .SetIfNotNil ("\u004c\u0045",_agcf .LE );return _baf ;};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _bbe .PdfObject ;Name _bbe .PdfObject ;};

// GetCustomInfo returns a custom info value for the specified name.
func (_aaed *PdfInfo )GetCustomInfo (name string )*_bbe .PdfObjectString {var _fefa *_bbe .PdfObjectString ;if _aaed ._fecbf ==nil {return _fefa ;};if _egabe ,_gaadf :=_aaed ._fecbf .Get (*_bbe .MakeName (name )).(*_bbe .PdfObjectString );_gaadf {_fefa =_egabe ;
};return _fefa ;};

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_gbeb :=PdfColorCalRGB {a ,b ,c };return &_gbeb ;};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _bbe .PdfObject ;V _bbe .PdfObject ;};

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_eaab *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_afae :=0.3*_eaab .R ()+0.59*_eaab .G ()+0.11*_eaab .B ();_afae =_ab .Min (_ab .Max (_afae ,0.0),1.0);return NewPdfColorDeviceGray (_afae );};

// String returns string value of output intent for given type
// ISO_19005-2 6.2.3: GTS_PDFA1 value should be used for PDF/A-1, A-2 and A-3 at least
func (_degdd PdfOutputIntentType )String ()string {switch _degdd {case PdfOutputIntentTypeA1 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA2 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA3 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";
case PdfOutputIntentTypeA4 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeX :return "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058";default:return "\u0055N\u0044\u0045\u0046\u0049\u004e\u0045D";};};

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bbe .PdfObject ;};

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_ebe :=NewPdfAnnotation ();_cef :=&PdfAnnotationPolyLine {};_cef .PdfAnnotation =_ebe ;_cef .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ebe .SetContext (_cef );return _cef ;};

// IsValid checks if the given pdf output intent type is valid.
func (_bege PdfOutputIntentType )IsValid ()bool {return _bege >=PdfOutputIntentTypeA1 &&_bege <=PdfOutputIntentTypeX ;};func (_deeead fontCommon )coreString ()string {_ddbgb :="";if _deeead ._abdgdb !=nil {_ddbgb =_deeead ._abdgdb .String ();};return _g .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_deeead ._cafed ,_deeead ._ffdd ,_deeead ._aefc ,_deeead ._adcg ,_deeead ._adbd !=nil ,_deeead .fontFlags (),_ddbgb );
};

// Add appends a top level outline item to the outline.
func (_ffbc *Outline )Add (item *OutlineItem ){_ffbc .Entries =append (_ffbc .Entries ,item )};

// PdfOutputIntentType is the subtype of the given PdfOutputIntent.
type PdfOutputIntentType int ;func _effga (_gddac *[]*PdfField ,_efda FieldFilterFunc ,_acbe bool )[]*PdfField {if _gddac ==nil {return nil ;};_bafe :=*_gddac ;if len (*_gddac )==0{return nil ;};_bafc :=_bafe [:0];if _efda ==nil {_efda =func (*PdfField )bool {return true };
};var _cdda []*PdfField ;for _ ,_fcag :=range _bafe {_ecbag :=_efda (_fcag );if _ecbag {_cdda =append (_cdda ,_fcag );if len (_fcag .Kids )> 0{_cdda =append (_cdda ,_effga (&_fcag .Kids ,_efda ,_acbe )...);};};if !_acbe ||!_ecbag ||len (_fcag .Kids )> 0{_bafc =append (_bafc ,_fcag );
};};*_gddac =_bafc ;return _cdda ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_bfbfd *PdfColorspaceDeviceCMYK )ToPdfObject ()_bbe .PdfObject {return _bbe .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};func (_ffg *PdfReader )newPdfActionThreadFromDict (_fcb *_bbe .PdfObjectDictionary )(*PdfActionThread ,error ){_bbb ,_cfcd :=_bfac (_fcb .Get ("\u0046"));
if _cfcd !=nil {return nil ,_cfcd ;};return &PdfActionThread {D :_fcb .Get ("\u0044"),B :_fcb .Get ("\u0042"),F :_bbb },nil ;};func _gaebe ()_ge .Time {_cccbdc .Lock ();defer _cccbdc .Unlock ();return _cebbd };

// String implements interface PdfObject.
func (_eae *PdfAction )String ()string {_ae ,_daf :=_eae .ToPdfObject ().(*_bbe .PdfIndirectObject );if _daf {return _g .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_eae ._gfc ,_ae .PdfObject .String ());};return "";};

// ApplyStandard is used to apply changes required on the document to match the rules required by the input standard.
// The writer's content would be changed after all the document parts are already established during the Write method.
// A good example of the StandardApplier could be a PDF/A Profile (i.e.: pdfa.Profile1A). In such a case PdfWriter would
// set up all rules required by that Profile.
func (_fdefe *PdfWriter )ApplyStandard (optimizer StandardApplier ){_fdefe ._faee =optimizer };

// GetOCProperties returns the optional content properties PdfObject.
func (_efgdg *PdfReader )GetOCProperties ()(_bbe .PdfObject ,error ){_dcbbda :=_efgdg ._cagcc ;_dbff :=_dcbbda .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_dbff =_bbe .ResolveReference (_dbff );if !_efgdg ._egggg {_eedbcf :=_efgdg .traverseObjectData (_dbff );
if _eedbcf !=nil {return nil ,_eedbcf ;};};return _dbff ,nil ;};

// IsPush returns true if the button field represents a push button, false otherwise.
func (_dccg *PdfFieldButton )IsPush ()bool {return _dccg .GetType ()==ButtonTypePush };

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_dcb :=NewPdfAnnotation ();_gag :=&PdfAnnotationStamp {};_gag .PdfAnnotation =_dcb ;_gag .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dcb .SetContext (_gag );return _gag ;};

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _bbe .PdfObject ;B _bbe .PdfObject ;};func (_fgfc *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _fgfc ._abdgdb };func _gdaee (_feece _bfg .StdFont )pdfFontSimple {_dgbad :=_feece .Descriptor ();
return pdfFontSimple {fontCommon :fontCommon {_cafed :"\u0054\u0079\u0070e\u0031",_ffdd :_feece .Name ()},_gbafb :_feece .GetMetricsTable (),_fgfb :&PdfFontDescriptor {FontName :_bbe .MakeName (string (_dgbad .Name )),FontFamily :_bbe .MakeName (_dgbad .Family ),FontWeight :_bbe .MakeFloat (float64 (_dgbad .Weight )),Flags :_bbe .MakeInteger (int64 (_dgbad .Flags )),FontBBox :_bbe .MakeArrayFromFloats (_dgbad .BBox [:]),ItalicAngle :_bbe .MakeFloat (_dgbad .ItalicAngle ),Ascent :_bbe .MakeFloat (_dgbad .Ascent ),Descent :_bbe .MakeFloat (_dgbad .Descent ),CapHeight :_bbe .MakeFloat (_dgbad .CapHeight ),XHeight :_bbe .MakeFloat (_dgbad .XHeight ),StemV :_bbe .MakeFloat (_dgbad .StemV ),StemH :_bbe .MakeFloat (_dgbad .StemH )},_bfgf :_feece .Encoder ()};
};

// B returns the value of the B component of the color.
func (_caca *PdfColorCalRGB )B ()float64 {return _caca [1]};func (_abfbg *pdfFontType0 )subsetRegistered ()error {_fbaaa ,_agec :=_abfbg .DescendantFont ._afag .(*pdfCIDFontType2 );if !_agec {_gcf .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_abfbg .DescendantFont );
return nil ;};if _fbaaa ==nil {return nil ;};if _fbaaa ._abdgdb ==nil {_gcf .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _abfbg ._cacge ==nil {_gcf .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");
return nil ;};_fbecf ,_agec :=_bbe .GetStream (_fbaaa ._abdgdb .FontFile2 );if !_agec {_gcf .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");
return _cc .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_cfgg ,_badba :=_bbe .DecodeStream (_fbecf );if _badba !=nil {_gcf .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_badba );
return _badba ;};_geffb ,_badba :=_abf .Parse (_cf .NewReader (_cfgg ));if _badba !=nil {_gcf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_fbecf .Stream ));
return _badba ;};var _fdcf []rune ;var _aebdfc *_abf .Font ;switch _effe :=_abfbg ._cacge .(type ){case *_ff .TrueTypeFontEncoder :_fdcf =_effe .RegisteredRunes ();_aebdfc ,_badba =_geffb .SubsetKeepRunes (_fdcf );if _badba !=nil {_gcf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_badba );
return _badba ;};_effe .SubsetRegistered ();case *_ff .IdentityEncoder :_fdcf =_effe .RegisteredRunes ();_agfd :=make ([]_abf .GlyphIndex ,len (_fdcf ));for _aebc ,_fgfdd :=range _fdcf {_agfd [_aebc ]=_abf .GlyphIndex (_fgfdd );};_aebdfc ,_badba =_geffb .SubsetKeepIndices (_agfd );
if _badba !=nil {_gcf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_badba );return _badba ;};case _ff .SimpleEncoder :_afcde :=_effe .Charcodes ();for _ ,_bccee :=range _afcde {_fbcde ,_fbedd :=_effe .CharcodeToRune (_bccee );if !_fbedd {_gcf .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_bccee );
continue ;};_fdcf =append (_fdcf ,_fbcde );};default:return _g .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_abfbg ._cacge );
};var _dbag _cf .Buffer ;_badba =_aebdfc .Write (&_dbag );if _badba !=nil {_gcf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_badba );return _badba ;};if _abfbg ._ggdec !=nil {_gdcfa :=make (map[_fb .CharCode ]rune ,len (_fdcf ));for _ ,_bbedc :=range _fdcf {_gbcee ,_ebgeg :=_abfbg ._cacge .RuneToCharcode (_bbedc );
if !_ebgeg {continue ;};_gdcfa [_fb .CharCode (_gbcee )]=_bbedc ;};_abfbg ._ggdec =_fb .NewToUnicodeCMap (_gdcfa );};_fbecf ,_badba =_bbe .MakeStream (_dbag .Bytes (),_bbe .NewFlateEncoder ());if _badba !=nil {_gcf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_badba );
return _badba ;};_fbecf .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_bbe .MakeInteger (int64 (_dbag .Len ())));if _dadb ,_aebe :=_bbe .GetStream (_fbaaa ._abdgdb .FontFile2 );_aebe {*_dadb =*_fbecf ;}else {_fbaaa ._abdgdb .FontFile2 =_fbecf ;};_dacb :=_dfgdc ();
if len (_abfbg ._ffdd )> 0{_abfbg ._ffdd =_gcdgf (_abfbg ._ffdd ,_dacb );};if len (_fbaaa ._ffdd )> 0{_fbaaa ._ffdd =_gcdgf (_fbaaa ._ffdd ,_dacb );};if len (_abfbg ._aefc )> 0{_abfbg ._aefc =_gcdgf (_abfbg ._aefc ,_dacb );};if _fbaaa ._abdgdb !=nil {_cbdg ,_geece :=_bbe .GetName (_fbaaa ._abdgdb .FontName );
if _geece &&len (_cbdg .String ())> 0{_badab :=_gcdgf (_cbdg .String (),_dacb );_fbaaa ._abdgdb .FontName =_bbe .MakeName (_badab );};};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_aa *PdfActionGoToE )ToPdfObject ()_bbe .PdfObject {_aa .PdfAction .ToPdfObject ();_fec :=_aa ._be ;_bdc :=_fec .PdfObject .(*_bbe .PdfObjectDictionary );_bdc .SetIfNotNil ("\u0053",_bbe .MakeName (string (ActionTypeGoToE )));if _aa .F !=nil {_bdc .Set ("\u0046",_aa .F .ToPdfObject ());
};_bdc .SetIfNotNil ("\u0044",_aa .D );_bdc .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_aa .NewWindow );_bdc .SetIfNotNil ("\u0054",_aa .T );return _fec ;};func (_ffe *PdfReader )newPdfActionGotoRFromDict (_ad *_bbe .PdfObjectDictionary )(*PdfActionGoToR ,error ){_edb ,_gcb :=_bfac (_ad .Get ("\u0046"));
if _gcb !=nil {return nil ,_gcb ;};return &PdfActionGoToR {D :_ad .Get ("\u0044"),NewWindow :_ad .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_edb },nil ;};

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_facb :=NewPdfAnnotation ();_cggf :=&PdfAnnotationRichMedia {};_cggf .PdfAnnotation =_facb ;_facb .SetContext (_cggf );return _cggf ;};

// NewPdfAcroForm returns a new PdfAcroForm with an intialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_agbef :_bbe .MakeIndirectObject (_bbe .MakeDict ())};};

// AddAnnotation appends `annot` to the list of page annotations.
func (_cafbf *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _cafbf ._eeeeb ==nil {_cafbf .GetAnnotations ();};_cafbf ._eeeeb =append (_cafbf ._eeeeb ,annot );};

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_afaeb *PdfFieldChoice )ToPdfObject ()_bbe .PdfObject {_afaeb .PdfField .ToPdfObject ();_ebcb :=_afaeb ._acga ;_dabb :=_ebcb .PdfObject .(*_bbe .PdfObjectDictionary );_dabb .Set ("\u0046\u0054",_bbe .MakeName ("\u0043\u0068"));if _afaeb .Opt !=nil {_dabb .Set ("\u004f\u0070\u0074",_afaeb .Opt );
};if _afaeb .TI !=nil {_dabb .Set ("\u0054\u0049",_afaeb .TI );};if _afaeb .I !=nil {_dabb .Set ("\u0049",_afaeb .I );};return _ebcb ;};

// ToPdfObject implements interface PdfModel.
func (_defg *PdfActionHide )ToPdfObject ()_bbe .PdfObject {_defg .PdfAction .ToPdfObject ();_eag :=_defg ._be ;_gcfg :=_eag .PdfObject .(*_bbe .PdfObjectDictionary );_gcfg .SetIfNotNil ("\u0053",_bbe .MakeName (string (ActionTypeHide )));_gcfg .SetIfNotNil ("\u0054",_defg .T );
_gcfg .SetIfNotNil ("\u0048",_defg .H );return _eag ;};

// GetNameDictionary returns the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_fdgdg *PdfReader )GetNameDictionary ()(_bbe .PdfObject ,error ){_cagg :=_bbe .ResolveReference (_fdgdg ._cagcc .Get ("\u004e\u0061\u006de\u0073"));if _cagg ==nil {return nil ,nil ;};if !_fdgdg ._egggg {_edfgc :=_fdgdg .traverseObjectData (_cagg );
if _edfgc !=nil {return nil ,_edfgc ;};};return _cagg ,nil ;};

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_cdbd *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_bbe .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_cc .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");
};_agab :=&PdfColorPattern {};_egge ,_gaca :=objects [len (objects )-1].(*_bbe .PdfObjectName );if !_gaca {_gcf .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);
return nil ,ErrTypeCheck ;};_agab .PatternName =*_egge ;if len (objects )> 1{_ebgbd :=objects [0:len (objects )-1];if _cdbd .UnderlyingCS ==nil {_gcf .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");
return nil ,_cc .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_ebbbg ,_ebfaa :=_cdbd .UnderlyingCS .ColorFromPdfObjects (_ebgbd );if _ebfaa !=nil {_gcf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_ebfaa );
return nil ,_ebfaa ;};_agab .Color =_ebbbg ;};return _agab ,nil ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_adabg *PdfColorspaceLab )ToPdfObject ()_bbe .PdfObject {_efec :=_bbe .MakeArray ();_efec .Append (_bbe .MakeName ("\u004c\u0061\u0062"));_cddg :=_bbe .MakeDict ();if _adabg .WhitePoint !=nil {_aeeda :=_bbe .MakeArray (_bbe .MakeFloat (_adabg .WhitePoint [0]),_bbe .MakeFloat (_adabg .WhitePoint [1]),_bbe .MakeFloat (_adabg .WhitePoint [2]));
_cddg .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_aeeda );}else {_gcf .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};if _adabg .BlackPoint !=nil {_dcea :=_bbe .MakeArray (_bbe .MakeFloat (_adabg .BlackPoint [0]),_bbe .MakeFloat (_adabg .BlackPoint [1]),_bbe .MakeFloat (_adabg .BlackPoint [2]));_cddg .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_dcea );
};if _adabg .Range !=nil {_afffd :=_bbe .MakeArray (_bbe .MakeFloat (_adabg .Range [0]),_bbe .MakeFloat (_adabg .Range [1]),_bbe .MakeFloat (_adabg .Range [2]),_bbe .MakeFloat (_adabg .Range [3]));_cddg .Set ("\u0052\u0061\u006eg\u0065",_afffd );};_efec .Append (_cddg );
if _adabg ._eff !=nil {_adabg ._eff .PdfObject =_efec ;return _adabg ._eff ;};return _efec ;};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_bbe .PdfObjectStream )(*XObjectImage ,error ){_eadcg :=&XObjectImage {};_eadcg ._cggga =stream ;_abfga :=*(stream .PdfObjectDictionary );_cdafb ,_gddda :=_bbe .NewEncoderFromStream (stream );if _gddda !=nil {return nil ,_gddda ;
};_eadcg .Filter =_cdafb ;if _caedfb :=_bbe .TraceToDirectObject (_abfga .Get ("\u0057\u0069\u0064t\u0068"));_caedfb !=nil {_cafgg ,_bbbafd :=_caedfb .(*_bbe .PdfObjectInteger );if !_bbbafd {return nil ,_cc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");
};_ebbbc :=int64 (*_cafgg );_eadcg .Width =&_ebbbc ;}else {return nil ,_cc .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _bfegd :=_bbe .TraceToDirectObject (_abfga .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));
_bfegd !=nil {_dbcfg ,_eccedg :=_bfegd .(*_bbe .PdfObjectInteger );if !_eccedg {return nil ,_cc .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_bcccg :=int64 (*_dbcfg );
_eadcg .Height =&_bcccg ;}else {return nil ,_cc .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _cbfdb :=_bbe .TraceToDirectObject (_abfga .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));
_cbfdb !=nil {_dgffb ,_gagdg :=NewPdfColorspaceFromPdfObject (_cbfdb );if _gagdg !=nil {return nil ,_gagdg ;};_eadcg .ColorSpace =_dgffb ;}else {_gcf .Log .Debug ("\u0058O\u0062\u006a\u0065c\u0074\u0020\u0049m\u0061ge\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067 1\u0020c\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065n\u0074\u0020\u002d\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047r\u0061\u0079");
_eadcg .ColorSpace =NewPdfColorspaceDeviceGray ();};if _gfded :=_bbe .TraceToDirectObject (_abfga .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_gfded !=nil {_fdccg ,_dabgb :=_gfded .(*_bbe .PdfObjectInteger );
if !_dabgb {return nil ,_cc .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_adabf :=int64 (*_fdccg );_eadcg .BitsPerComponent =&_adabf ;};_eadcg .Intent =_abfga .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");
_eadcg .ImageMask =_abfga .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_eadcg .Mask =_abfga .Get ("\u004d\u0061\u0073\u006b");_eadcg .Decode =_abfga .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_eadcg .Interpolate =_abfga .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");
_eadcg .Alternatives =_abfga .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_eadcg .SMask =_abfga .Get ("\u0053\u004d\u0061s\u006b");_eadcg .SMaskInData =_abfga .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");
_eadcg .Matte =_abfga .Get ("\u004d\u0061\u0074t\u0065");_eadcg .Name =_abfga .Get ("\u004e\u0061\u006d\u0065");_eadcg .StructParent =_abfga .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_eadcg .ID =_abfga .Get ("\u0049\u0044");
_eadcg .OPI =_abfga .Get ("\u004f\u0050\u0049");_eadcg .Metadata =_abfga .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_eadcg .OC =_abfga .Get ("\u004f\u0043");_eadcg .Stream =stream .Stream ;return _eadcg ,nil ;};func _cbab (_feceaf _geb .ReadSeeker ,_ddge *ReaderOpts ,_ceggcf bool ,_aeefg string )(*PdfReader ,error ){if _ddge ==nil {_ddge =NewReaderOpts ();
};_bbegf :=*_ddge ;_bffae :=&PdfReader {_bdfdg :_feceaf ,_beaad :map[_bbe .PdfObject ]struct{}{},_ffgae :_bdbge (),_egggg :_ddge .LazyLoad ,_dbae :_ddge .ComplianceMode ,_aded :_ceggcf ,_cacaab :&_bbegf };_cgffe ,_gedgg :=_cecdd ("\u0072");if _gedgg !=nil {return nil ,_gedgg ;
};_gedgg =_ea .Track (_cgffe ,_aeefg );if _gedgg !=nil {return nil ,_gedgg ;};_bffae ._egaee =_cgffe ;var _fcgbf *_bbe .PdfParser ;if !_bffae ._dbae {_fcgbf ,_gedgg =_bbe .NewParser (_feceaf );}else {_fcgbf ,_gedgg =_bbe .NewCompliancePdfParser (_feceaf );
};if _gedgg !=nil {return nil ,_gedgg ;};_bffae ._ffgcd =_fcgbf ;_cbbgb ,_gedgg :=_bffae .IsEncrypted ();if _gedgg !=nil {return nil ,_gedgg ;};if !_cbbgb {_gedgg =_bffae .loadStructure ();if _gedgg !=nil {return nil ,_gedgg ;};}else if _ceggcf {_cbce ,_fgeccg :=_bffae .Decrypt ([]byte (_ddge .Password ));
if _fgeccg !=nil {return nil ,_fgeccg ;};if !_cbce {return nil ,_cc .New ("\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f \u0064\u0065c\u0072\u0079\u0070\u0074\u0020\u0070\u0061\u0073\u0073w\u006f\u0072\u0064\u0020p\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u002d\u0020\u006e\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0073\u0070\u0065\u0063\u0069\u0066y\u0020\u0070\u0061s\u0073\u0020\u0074\u006f\u0020\u0044\u0065\u0063\u0072\u0079\u0070\u0074");
};};_bffae ._eebfa =make (map[*PdfReader ]*PdfReader );_bffae ._dccdf =make ([]*PdfReader ,_fcgbf .GetRevisionNumber ());return _bffae ,nil ;};

// ToPdfObject implements model.PdfModel interface.
func (_debeg *PdfOutputIntent )ToPdfObject ()_bbe .PdfObject {if _debeg ._agbec ==nil {_debeg ._agbec =_bbe .MakeDict ();};_eeacce :=_debeg ._agbec ;if _debeg .Type !=""{_eeacce .Set ("\u0054\u0079\u0070\u0065",_bbe .MakeName (_debeg .Type ));};_eeacce .Set ("\u0053",_bbe .MakeName (_debeg .S .String ()));
if _debeg .OutputCondition !=""{_eeacce .Set ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e",_bbe .MakeString (_debeg .OutputCondition ));};_eeacce .Set ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r",_bbe .MakeString (_debeg .OutputConditionIdentifier ));
_eeacce .Set ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065",_bbe .MakeString (_debeg .RegistryName ));if _debeg .Info !=""{_eeacce .Set ("\u0049\u006e\u0066\u006f",_bbe .MakeString (_debeg .Info ));};if len (_debeg .DestOutputProfile )!=0{_faegf ,_bgec :=_bbe .MakeStream (_debeg .DestOutputProfile ,_bbe .NewFlateEncoder ());
if _bgec !=nil {_gcf .Log .Error ("\u004d\u0061\u006b\u0065\u0053\u0074\u0072\u0065\u0061\u006d\u0020\u0044\u0065s\u0074\u004f\u0075\u0074\u0070\u0075t\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_bgec );
};_faegf .PdfObjectDictionary .Set ("\u004e",_bbe .MakeInteger (int64 (_debeg .ColorComponents )));_cacde :=make ([]float64 ,_debeg .ColorComponents *2);for _dafbf :=0;_dafbf < _debeg .ColorComponents *2;_dafbf ++{_abfd :=0.0;if _dafbf %2!=0{_abfd =1.0;
};_cacde [_dafbf ]=_abfd ;};_faegf .PdfObjectDictionary .Set ("\u0052\u0061\u006eg\u0065",_bbe .MakeArrayFromFloats (_cacde ));_eeacce .Set ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065",_faegf );};
return _eeacce ;};

// SetRotation sets the rotation of all pages added to writer. The rotation is
// specified in degrees and must be a multiple of 90.
// The Rotate field of individual pages has priority over the global rotation.
func (_bdedg *PdfWriter )SetRotation (rotate int64 )error {_fgccb ,_dffag :=_bbe .GetDict (_bdedg ._fbfea );if !_dffag {return ErrTypeCheck ;};_fgccb .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_bbe .MakeInteger (rotate ));return nil ;};func (_fbed *PdfReader )newPdfAnnotationPrinterMarkFromDict (_ffbe *_bbe .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_bbba :=PdfAnnotationPrinterMark {};
_bbba .MN =_ffbe .Get ("\u004d\u004e");return &_bbba ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gebf *PdfAnnotationRedact )ToPdfObject ()_bbe .PdfObject {_gebf .PdfAnnotation .ToPdfObject ();_bede :=_gebf ._dbg ;_dedaa :=_bede .PdfObject .(*_bbe .PdfObjectDictionary );_gebf .PdfAnnotationMarkup .appendToPdfDictionary (_dedaa );_dedaa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbe .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));
_dedaa .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_gebf .QuadPoints );_dedaa .SetIfNotNil ("\u0049\u0043",_gebf .IC );_dedaa .SetIfNotNil ("\u0052\u004f",_gebf .RO );_dedaa .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_gebf .OverlayText );
_dedaa .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_gebf .Repeat );_dedaa .SetIfNotNil ("\u0044\u0041",_gebf .DA );_dedaa .SetIfNotNil ("\u0051",_gebf .Q );return _bede ;};func (_gfeae *PdfAcroForm )fillImageWithAppearance (_cdcc FieldImageProvider ,_fabbb FieldAppearanceGenerator )error {if _gfeae ==nil {return nil ;
};_faabf ,_dbeb :=_cdcc .FieldImageValues ();if _dbeb !=nil {return _dbeb ;};for _ ,_aggg :=range _gfeae .AllFields (){_aefbc :=_aggg .PartialName ();_ecgf ,_dfdee :=_faabf [_aefbc ];if !_dfdee {if _dbfc ,_cgdgc :=_aggg .FullName ();_cgdgc ==nil {_ecgf ,_dfdee =_faabf [_dbfc ];
};};if !_dfdee {_gcf .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_aefbc );
continue ;};switch _eeca :=_aggg .GetContext ().(type ){case *PdfFieldButton :if _eeca .IsPush (){_eeca .SetFillImage (_ecgf );};};if _fabbb ==nil {continue ;};for _ ,_bdgb :=range _aggg .Annotations {_gbga ,_fdea :=_fabbb .GenerateAppearanceDict (_gfeae ,_aggg ,_bdgb );
if _fdea !=nil {return _fdea ;};_bdgb .AP =_gbga ;_bdgb .ToPdfObject ();};};return nil ;};

// EnableAll LTV enables all signatures in the PDF document.
// The signing certificate chain is extracted from each signature dictionary.
// Optionally, additional certificates can be specified through the
// `extraCerts` parameter. The LTV client attempts to build the certificate
// chain up to a trusted root by downloading any missing certificates.
func (_abgdb *LTV )EnableAll (extraCerts []*_gg .Certificate )error {_ddeaf :=_abgdb ._acgcc ._aeaa .AcroForm ;for _ ,_cdag :=range _ddeaf .AllFields (){_gbcgc ,_ :=_cdag .GetContext ().(*PdfFieldSignature );if _gbcgc ==nil {continue ;};_abafa :=_gbcgc .V ;
if _abcad :=_abgdb .validateSig (_abafa );_abcad !=nil {_gcf .Log .Debug ("\u0057\u0041\u0052N\u003a\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_abcad );
};if _dffdg :=_abgdb .Enable (_abafa ,extraCerts );_dffdg !=nil {return _dffdg ;};};return nil ;};

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_dfda *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_bfgb :=func (_dgbbc float64 )float64 {if _dgbbc >=6.0/29{return _dgbbc *_dgbbc *_dgbbc ;};return 108.0/841*(_dgbbc -4.0/29.0);};_ccaa :=img ._eacbf ;if len (_ccaa )!=6{_gcf .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");
_ccaa =_dfda .DecodeArray ();};_adfc :=_dfc .NewReader (img .getBase ());_bcfec :=_gb .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._gagad ,img ._eacbf );_eaaa :=_dfc .NewWriter (_bcfec );_gcfca :=_ab .Pow (2,float64 (img .BitsPerComponent ))-1;
_edda :=make ([]uint32 ,3);var (_agccf error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_effb ,_cacf ,_debac float64 ;);for {_agccf =_adfc .ReadSamples (_edda );if _agccf ==_geb .EOF {break ;}else if _agccf !=nil {return img ,_agccf ;};Ls =float64 (_edda [0])/_gcfca ;
As =float64 (_edda [1])/_gcfca ;Bs =float64 (_edda [2])/_gcfca ;Ls =_gb .LinearInterpolate (Ls ,0.0,1.0,_ccaa [0],_ccaa [1]);As =_gb .LinearInterpolate (As ,0.0,1.0,_ccaa [2],_ccaa [3]);Bs =_gb .LinearInterpolate (Bs ,0.0,1.0,_ccaa [4],_ccaa [5]);L =(Ls +16)/116+As /500;
M =(Ls +16)/116;N =(Ls +16)/116-Bs /200;X =_dfda .WhitePoint [0]*_bfgb (L );Y =_dfda .WhitePoint [1]*_bfgb (M );Z =_dfda .WhitePoint [2]*_bfgb (N );_effb =3.240479*X +-1.537150*Y +-0.498535*Z ;_cacf =-0.969256*X +1.875992*Y +0.041556*Z ;_debac =0.055648*X +-0.204043*Y +1.057311*Z ;
_effb =_ab .Min (_ab .Max (_effb ,0),1.0);_cacf =_ab .Min (_ab .Max (_cacf ,0),1.0);_debac =_ab .Min (_ab .Max (_debac ,0),1.0);_edda [0]=uint32 (_effb *_gcfca );_edda [1]=uint32 (_cacf *_gcfca );_edda [2]=uint32 (_debac *_gcfca );if _agccf =_eaaa .WriteSamples (_edda );
_agccf !=nil {return img ,_agccf ;};};return _gdbea (&_bcfec ),nil ;};func (_bgeg *PdfAnnotationMarkup )appendToPdfDictionary (_gegg *_bbe .PdfObjectDictionary ){_gegg .SetIfNotNil ("\u0054",_bgeg .T );if _bgeg .Popup !=nil {_gegg .Set ("\u0050\u006f\u0070u\u0070",_bgeg .Popup .ToPdfObject ());
};_gegg .SetIfNotNil ("\u0043\u0041",_bgeg .CA );_gegg .SetIfNotNil ("\u0052\u0043",_bgeg .RC );_gegg .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_bgeg .CreationDate );_gegg .SetIfNotNil ("\u0049\u0052\u0054",_bgeg .IRT );
_gegg .SetIfNotNil ("\u0053\u0075\u0062\u006a",_bgeg .Subj );_gegg .SetIfNotNil ("\u0052\u0054",_bgeg .RT );_gegg .SetIfNotNil ("\u0049\u0054",_bgeg .IT );_gegg .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_bgeg .ExData );};

// ToPdfObject returns the PDF representation of the colorspace.
func (_ceae *PdfColorspaceDeviceRGB )ToPdfObject ()_bbe .PdfObject {return _bbe .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _bbe .PdfObject ;};

// VariableText contains the common attributes of a variable text.
// The VariableText is typically not used directly, but is can encapsulate by PdfField
// See section 12.7.3.3 "Variable Text" and Table 222 (pp. 434-436 PDF32000_2008).
type VariableText struct{DA *_bbe .PdfObjectString ;Q *_bbe .PdfObjectInteger ;DS *_bbe .PdfObjectString ;RV _bbe .PdfObject ;};

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_cdgb *PdfShading )GetContainingPdfObject ()_bbe .PdfObject {return _cdgb ._eecbb };

// ToPdfObject converts the font to a PDF representation.
func (_bbbc *pdfFontType0 )ToPdfObject ()_bbe .PdfObject {if _bbbc ._aacba ==nil {_bbbc ._aacba =&_bbe .PdfIndirectObject {};};_becf :=_bbbc .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_bbbc ._aacba .PdfObject =_becf ;if _bbbc .Encoding !=nil {_becf .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_bbbc .Encoding );
}else if _bbbc ._cacge !=nil {_becf .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_bbbc ._cacge .ToPdfObject ());};if _bbbc .DescendantFont !=nil {_becf .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_bbe .MakeArray (_bbbc .DescendantFont .ToPdfObject ()));
};return _bbbc ._aacba ;};

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _bbe .PdfObject ;_gbcdg []byte ;_feaa *_bbe .PdfIndirectObject ;};func (_acbbg Image )getBase ()_gb .ImageBase {return _gb .NewImageBase (int (_acbbg .Width ),int (_acbbg .Height ),int (_acbbg .BitsPerComponent ),_acbbg .ColorComponents ,_acbbg .Data ,_acbbg ._gagad ,_acbbg ._eacbf );
};func _cfbgde (_egdbad *_bbe .PdfObjectDictionary )(*PdfShadingType5 ,error ){_fgege :=PdfShadingType5 {};_cfab :=_egdbad .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _cfab ==nil {_gcf .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_dedec ,_fdfg :=_cfab .(*_bbe .PdfObjectInteger );if !_fdfg {_gcf .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cfab );
return nil ,_bbe .ErrTypeError ;};_fgege .BitsPerCoordinate =_dedec ;_cfab =_egdbad .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _cfab ==nil {_gcf .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_dedec ,_fdfg =_cfab .(*_bbe .PdfObjectInteger );if !_fdfg {_gcf .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_cfab );
return nil ,_bbe .ErrTypeError ;};_fgege .BitsPerComponent =_dedec ;_cfab =_egdbad .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _cfab ==nil {_gcf .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");
return nil ,ErrRequiredAttributeMissing ;};_dedec ,_fdfg =_cfab .(*_bbe .PdfObjectInteger );if !_fdfg {_gcf .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_cfab );
return nil ,_bbe .ErrTypeError ;};_fgege .VerticesPerRow =_dedec ;_cfab =_egdbad .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _cfab ==nil {_gcf .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_agbag ,_fdfg :=_cfab .(*_bbe .PdfObjectArray );if !_fdfg {_gcf .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cfab );
return nil ,_bbe .ErrTypeError ;};_fgege .Decode =_agbag ;if _gdfcb :=_egdbad .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_gdfcb !=nil {_fgege .Function =[]PdfFunction {};if _cfccd ,_cfabd :=_gdfcb .(*_bbe .PdfObjectArray );_cfabd {for _ ,_fbabd :=range _cfccd .Elements (){_dcaf ,_edgf :=_bdce (_fbabd );
if _edgf !=nil {_gcf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_edgf );return nil ,_edgf ;};_fgege .Function =append (_fgege .Function ,_dcaf );
};}else {_gbgge ,_cdbge :=_bdce (_gdfcb );if _cdbge !=nil {_gcf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cdbge );return nil ,_cdbge ;
};_fgege .Function =append (_fgege .Function ,_gbgge );};};return &_fgege ,nil ;};func _eadb (_gafb _bbe .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_efgg :=NewPdfColorspaceSpecialIndexed ();if _ddfa ,_bebg :=_gafb .(*_bbe .PdfIndirectObject );_bebg {_efgg ._feaa =_ddfa ;
};_gafb =_bbe .TraceToDirectObject (_gafb );_ddfg ,_ddda :=_gafb .(*_bbe .PdfObjectArray );if !_ddda {return nil ,_g .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _ddfg .Len ()!=4{return nil ,_g .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");
};_gafb =_ddfg .Get (0);_gedd ,_ddda :=_gafb .(*_bbe .PdfObjectName );if !_ddda {return nil ,_g .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_gedd !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_g .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");
};_gafb =_ddfg .Get (1);_fdfd ,_dbbd :=DetermineColorspaceNameFromPdfObject (_gafb );if _dbbd !=nil {return nil ,_dbbd ;};if _fdfd =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_fdfd =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_gcf .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_fdfd );
return nil ,_gagc ;};_abc ,_dbbd :=NewPdfColorspaceFromPdfObject (_gafb );if _dbbd !=nil {return nil ,_dbbd ;};_efgg .Base =_abc ;_gafb =_ddfg .Get (2);_egdcdg ,_dbbd :=_bbe .GetNumberAsInt64 (_gafb );if _dbbd !=nil {return nil ,_dbbd ;};if _egdcdg > 255{return nil ,_g .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");
};_efgg .HiVal =int (_egdcdg );_gafb =_ddfg .Get (3);_efgg .Lookup =_gafb ;_gafb =_bbe .TraceToDirectObject (_gafb );var _bdgg []byte ;if _facd ,_cbbc :=_gafb .(*_bbe .PdfObjectString );_cbbc {_bdgg =_facd .Bytes ();_gcf .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_bdgg );
}else if _dabc ,_ffdeb :=_gafb .(*_bbe .PdfObjectStream );_ffdeb {_gcf .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_gafb .String ());_gcf .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_dabc .Stream ),_dabc .Stream );
_febc ,_fecfg :=_bbe .DecodeStream (_dabc );if _fecfg !=nil {return nil ,_fecfg ;};_gcf .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_febc ),_febc );_bdgg =_febc ;}else {_gcf .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_gafb );
return nil ,_g .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_bdgg )< _efgg .Base .GetNumComponents ()*(_efgg .HiVal +1){_gcf .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");
_gcf .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_bdgg ),_efgg .Base .GetNumComponents (),_efgg .HiVal );
}else {_bdgg =_bdgg [:_efgg .Base .GetNumComponents ()*(_efgg .HiVal +1)];};_efgg ._gbcdg =_bdgg ;return _efgg ,nil ;};

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_cccbdc .Lock ();defer _cccbdc .Unlock ();_fcfgd =keywords };

// SetSubtype sets the Subtype S for given PdfOutputIntent.
func (_afcdbb *PdfOutputIntent )SetSubtype (subtype PdfOutputIntentType )error {if !subtype .IsValid (){return _cc .New ("\u0070\u0072o\u0076\u0069\u0064\u0065d\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u004f\u0075t\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0020\u0053\u0075b\u0054\u0079\u0070\u0065");
};_afcdbb .S =subtype ;return nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_gdfg *PdfColorspaceSpecialSeparation )ToPdfObject ()_bbe .PdfObject {_gecc :=_bbe .MakeArray (_bbe .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_gecc .Append (_gdfg .ColorantName );_gecc .Append (_gdfg .AlternateSpace .ToPdfObject ());
_gecc .Append (_gdfg .TintTransform .ToPdfObject ());if _gdfg ._daab !=nil {_gdfg ._daab .PdfObject =_gecc ;return _gdfg ._daab ;};return _gecc ;};

// AddPages adds pages to be appended to the end of the source PDF.
func (_agcc *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_fgbe :=range pages {_fgbe =_fgbe .Duplicate ();_eagf (_fgbe );_agcc ._gada =append (_agcc ._gada ,_fgbe );};};

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_ccfd *PdfAnnotation )GetContext ()PdfModel {if _ccfd ==nil {return nil ;};return _ccfd ._ccfb ;};

// AddCerts adds certificates to DSS.
func (_bcdf *DSS )AddCerts (certs [][]byte )([]*_bbe .PdfObjectStream ,error ){return _bcdf .add (&_bcdf .Certs ,_bcdf ._egdd ,certs );};

// NewPdfColorPattern returns an empty color pattern.
func NewPdfColorPattern ()*PdfColorPattern {_fcdab :=&PdfColorPattern {};return _fcdab };func (_gcbd *PdfReader )newPdfAnnotationProjectionFromDict (_abgb *_bbe .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_edd :=&PdfAnnotationProjection {};
_ccb ,_cgdd :=_gcbd .newPdfAnnotationMarkupFromDict (_abgb );if _cgdd !=nil {return nil ,_cgdd ;};_edd .PdfAnnotationMarkup =_ccb ;return _edd ,nil ;};

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_fddc *pdfFontSimple )ToPdfObject ()_bbe .PdfObject {if _fddc ._faga ==nil {_fddc ._faga =&_bbe .PdfIndirectObject {};};_edee :=_fddc .baseFields ().asPdfObjectDictionary ("");_fddc ._faga .PdfObject =_edee ;if _fddc .FirstChar !=nil {_edee .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_fddc .FirstChar );
};if _fddc .LastChar !=nil {_edee .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_fddc .LastChar );};if _fddc .Widths !=nil {_edee .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_fddc .Widths );};if _fddc .Encoding !=nil {_edee .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_fddc .Encoding );
}else if _fddc ._adcac !=nil {_aaaf :=_fddc ._adcac .ToPdfObject ();if _aaaf !=nil {_edee .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_aaaf );};};return _fddc ._faga ;};

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};

// GetRotate gets the inheritable rotate value, either from the page
// or a higher up page/pages struct.
func (_bfecba *PdfPage )GetRotate ()(int64 ,error ){if _bfecba .Rotate !=nil {return *_bfecba .Rotate ,nil ;};_degc :=_bfecba .Parent ;for _degc !=nil {_dagfa ,_bgefaf :=_bbe .GetDict (_degc );if !_bgefaf {return 0,_cc .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _eddg :=_dagfa .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_eddg !=nil {_bdcff ,_ecfe :=_bbe .GetInt (_eddg );if !_ecfe {return 0,_cc .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0072\u006f\u0074a\u0074\u0065\u0020\u0076al\u0075\u0065");};if _bdcff !=nil {return int64 (*_bdcff ),nil ;
};return 0,_cc .New ("\u0072\u006f\u0074\u0061te\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};_degc =_dagfa .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return 0,_cc .New ("\u0072o\u0074a\u0074\u0065\u0020\u006e\u006ft\u0020\u0064e\u0066\u0069\u006e\u0065\u0064");
};func _dcac (_degf _bbe .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_cbcb :=&PdfColorspaceDeviceNAttributes {};var _cbeg *_bbe .PdfObjectDictionary ;switch _bfabb :=_degf .(type ){case *_bbe .PdfIndirectObject :_cbcb ._fefcb =_bfabb ;var _bfffg bool ;
_cbeg ,_bfffg =_bfabb .PdfObject .(*_bbe .PdfObjectDictionary );if !_bfffg {_gcf .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");return nil ,_cc .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};case *_bbe .PdfObjectDictionary :_cbeg =_bfabb ;case *_bbe .PdfObjectReference :_beee :=_bfabb .Resolve ();return _dcac (_beee );default:_gcf .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_cc .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _ccea :=_cbeg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_ccea !=nil {_eebb ,_dacg :=_bbe .TraceToDirectObject (_ccea ).(*_bbe .PdfObjectName );if !_dacg {_gcf .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");
return nil ,_cc .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_cbcb .Subtype =_eebb ;};if _ffcc :=_cbeg .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_ffcc !=nil {_cbcb .Colorants =_ffcc ;};if _geab :=_cbeg .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");
_geab !=nil {_cbcb .Process =_geab ;};if _gccb :=_cbeg .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_gccb !=nil {_cbcb .MixingHints =_gccb ;};return _cbcb ,nil ;};

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_bdbafd *PdfRectangle )Normalize (){if _bdbafd .Llx > _bdbafd .Urx {_bdbafd .Llx ,_bdbafd .Urx =_bdbafd .Urx ,_bdbafd .Llx ;};if _bdbafd .Lly > _bdbafd .Ury {_bdbafd .Lly ,_bdbafd .Ury =_bdbafd .Ury ,_bdbafd .Lly ;};};func _acbgc (_bagec string )map[string ]string {_cdcgf :=_dgfg .Split (_bagec ,-1);
_edeca :=map[string ]string {};for _ ,_afad :=range _cdcgf {_dbbba :=_cfgc .FindStringSubmatch (_afad );if _dbbba ==nil {continue ;};_aebf ,_feeda :=_dbbba [1],_dbbba [2];_edeca [_aebf ]=_feeda ;};return _edeca ;};

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_cddd :=NewPdfAnnotation ();_eega :=&PdfAnnotationPrinterMark {};_eega .PdfAnnotation =_cddd ;_cddd .SetContext (_eega );return _eega ;};

// ColorToRGB converts a CalGray color to an RGB color.
func (_ggcff *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_gaf ,_ccfba :=color .(*PdfColorCalGray );if !_ccfba {_gcf .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");
return nil ,_cc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_gaf .Val ();X :=_ggcff .WhitePoint [0]*_ab .Pow (ANorm ,_ggcff .Gamma );Y :=_ggcff .WhitePoint [1]*_ab .Pow (ANorm ,_ggcff .Gamma );
Z :=_ggcff .WhitePoint [2]*_ab .Pow (ANorm ,_ggcff .Gamma );_ecfg :=3.240479*X +-1.537150*Y +-0.498535*Z ;_ccfge :=-0.969256*X +1.875992*Y +0.041556*Z ;_cfbbf :=0.055648*X +-0.204043*Y +1.057311*Z ;_ecfg =_ab .Min (_ab .Max (_ecfg ,0),1.0);_ccfge =_ab .Min (_ab .Max (_ccfge ,0),1.0);
_cfbbf =_ab .Min (_ab .Max (_cfbbf ,0),1.0);return NewPdfColorDeviceRGB (_ecfg ,_ccfge ,_cfbbf ),nil ;};

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_gaag *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};func _fcdfa (_gedfe *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_gedfe }};func (_ddcf *PdfReader )newPdfAnnotationSoundFromDict (_afgd *_bbe .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_bab :=PdfAnnotationSound {};
_beed ,_gdb :=_ddcf .newPdfAnnotationMarkupFromDict (_afgd );if _gdb !=nil {return nil ,_gdb ;};_bab .PdfAnnotationMarkup =_beed ;_bab .Name =_afgd .Get ("\u004e\u0061\u006d\u0065");_bab .Sound =_afgd .Get ("\u0053\u006f\u0075n\u0064");return &_bab ,nil ;
};

// ToPdfObject implements interface PdfModel.
func (_edgad *PdfFilespec )ToPdfObject ()_bbe .PdfObject {_edgce :=_edgad .getDict ();_edgce .Clear ();_edgce .Set ("\u0054\u0079\u0070\u0065",_bbe .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_edgce .SetIfNotNil ("\u0046\u0053",_edgad .FS );
_edgce .SetIfNotNil ("\u0046",_edgad .F );_edgce .SetIfNotNil ("\u0055\u0046",_edgad .UF );_edgce .SetIfNotNil ("\u0044\u004f\u0053",_edgad .DOS );_edgce .SetIfNotNil ("\u004d\u0061\u0063",_edgad .Mac );_edgce .SetIfNotNil ("\u0055\u006e\u0069\u0078",_edgad .Unix );
_edgce .SetIfNotNil ("\u0049\u0044",_edgad .ID );_edgce .SetIfNotNil ("\u0056",_edgad .V );_edgce .SetIfNotNil ("\u0045\u0046",_edgad .EF );_edgce .SetIfNotNil ("\u0052\u0046",_edgad .RF );_edgce .SetIfNotNil ("\u0044\u0065\u0073\u0063",_edgad .Desc );
_edgce .SetIfNotNil ("\u0043\u0049",_edgad .CI );return _edgad ._ffbgc ;};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_bfag :=&PdfColorspaceCalGray {};_bfag .BlackPoint =[]float64 {0.0,0.0,0.0};_bfag .Gamma =1;return _bfag ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_adgc pdfFontType3 )GetCharMetrics (code _ff .CharCode )(_bfg .CharMetrics ,bool ){if _egbd ,_dbbeg :=_adgc ._ecfga [code ];_dbbeg {return _bfg .CharMetrics {Wx :_egbd },true ;};if _bfg .IsStdFont (_bfg .StdFontName (_adgc ._ffdd )){return _bfg .CharMetrics {Wx :250},true ;
};return _bfg .CharMetrics {},false ;};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_debc *PdfColorspaceICCBased )ToPdfObject ()_bbe .PdfObject {_cddb :=&_bbe .PdfObjectArray {};_cddb .Append (_bbe .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _dbdf *_bbe .PdfObjectStream ;if _debc ._dfac !=nil {_dbdf =_debc ._dfac ;
}else {_dbdf =&_bbe .PdfObjectStream {};};_gfgd :=_bbe .MakeDict ();_gfgd .Set ("\u004e",_bbe .MakeInteger (int64 (_debc .N )));if _debc .Alternate !=nil {_gfgd .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_debc .Alternate .ToPdfObject ());};if _debc .Metadata !=nil {_gfgd .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_debc .Metadata );
};if _debc .Range !=nil {var _fga []_bbe .PdfObject ;for _ ,_dacc :=range _debc .Range {_fga =append (_fga ,_bbe .MakeFloat (_dacc ));};_gfgd .Set ("\u0052\u0061\u006eg\u0065",_bbe .MakeArray (_fga ...));};_gfgd .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bbe .MakeInteger (int64 (len (_debc .Data ))));
_dbdf .Stream =_debc .Data ;_dbdf .PdfObjectDictionary =_gfgd ;_cddb .Append (_dbdf );if _debc ._febg !=nil {_debc ._febg .PdfObject =_cddb ;return _debc ._febg ;};return _cddb ;};

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;

// GetStructRoot gets the StructTreeRoot object
func (_gfeec *PdfPage )GetStructTreeRoot ()(*_bbe .PdfObject ,bool ){_abef ,_fdccf :=_gfeec ._cbged .GetCatalogStructTreeRoot ();return &_abef ,_fdccf ;};func (_ffdc *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";
};

// ToPdfObject returns a stream object.
func (_debef *XObjectForm )ToPdfObject ()_bbe .PdfObject {_geebfg :=_debef ._abbbg ;_cegeg :=_geebfg .PdfObjectDictionary ;if _debef .Filter !=nil {_cegeg =_debef .Filter .MakeStreamDict ();_geebfg .PdfObjectDictionary =_cegeg ;};_cegeg .Set ("\u0054\u0079\u0070\u0065",_bbe .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_cegeg .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbe .MakeName ("\u0046\u006f\u0072\u006d"));_cegeg .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_debef .FormType );_cegeg .SetIfNotNil ("\u0042\u0042\u006f\u0078",_debef .BBox );
_cegeg .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_debef .Matrix );if _debef .Resources !=nil {_cegeg .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_debef .Resources .ToPdfObject ());};_cegeg .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_debef .Group );
_cegeg .SetIfNotNil ("\u0052\u0065\u0066",_debef .Ref );_cegeg .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_debef .MetaData );_cegeg .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_debef .PieceInfo );_cegeg .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_debef .LastModified );
_cegeg .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_debef .StructParent );_cegeg .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_debef .StructParents );_cegeg .SetIfNotNil ("\u004f\u0050\u0049",_debef .OPI );
_cegeg .SetIfNotNil ("\u004f\u0043",_debef .OC );_cegeg .SetIfNotNil ("\u004e\u0061\u006d\u0065",_debef .Name );_cegeg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bbe .MakeInteger (int64 (len (_debef .Stream ))));_geebfg .Stream =_debef .Stream ;return _geebfg ;
};func (_cbefe *PdfWriter )setWriter (_adga _geb .Writer ){_cbefe ._dccgd =_cbefe ._abcgf ;_cbefe ._gcceb =_de .NewWriter (_adga );};

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_ffceg *Image )AlphaMap (mapFunc AlphaMapFunc ){for _gbec ,_gagf :=range _ffceg ._gagad {_ffceg ._gagad [_gbec ]=mapFunc (_gagf );};};

// Width returns the width of `rect`.
func (_aeaee *PdfRectangle )Width ()float64 {return _ab .Abs (_aeaee .Urx -_aeaee .Llx )};

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_gbfa *PdfPattern )SetContext (ctx PdfModel ){_gbfa ._adcag =ctx };

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_eegbc *PdfPage )AppendContentStream (contentStr string )error {_aedeb ,_ebecb :=_eegbc .GetContentStreams ();if _ebecb !=nil {return _ebecb ;};if len (_aedeb )==0{_aedeb =[]string {contentStr };return _eegbc .SetContentStreams (_aedeb ,_bbe .NewFlateEncoder ());
};var _adeee _cf .Buffer ;_adeee .WriteString (_aedeb [len (_aedeb )-1]);_adeee .WriteString ("\u000a");_adeee .WriteString (contentStr );_aedeb [len (_aedeb )-1]=_adeee .String ();return _eegbc .SetContentStreams (_aedeb ,_bbe .NewFlateEncoder ());};type pdfFontType0 struct{fontCommon ;
_aacba *_bbe .PdfIndirectObject ;_cacge _ff .TextEncoder ;Encoding _bbe .PdfObject ;DescendantFont *PdfFont ;_cfeba *_fb .CMap ;};func (_eaad *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _eaad ._ffgcd .GetCrypter ()!=nil &&!_eaad ._ffgcd .IsAuthenticated (){return nil ,_g .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_bcbd :=_eaad ._cagcc ;_bfde :=_bcbd .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _bfde ==nil {return nil ,nil ;};_gcf .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_daffd :=_bbe .ResolveReference (_bfde );
_gcf .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_daffd );if _bgebg :=_bbe .IsNullObject (_daffd );_bgebg {_gcf .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");
return nil ,nil ;};_ffgdaf ,_geagd :=_daffd .(*_bbe .PdfIndirectObject );if !_geagd {if _ ,_eaged :=_bbe .GetDict (_daffd );!_eaged {_gcf .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");
return nil ,nil ;};_gcf .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
_ffgdaf =_bbe .MakeIndirectObject (_daffd );};_eedd ,_geagd :=_ffgdaf .PdfObject .(*_bbe .PdfObjectDictionary );if !_geagd {return nil ,_cc .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");
};_gcf .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_eedd );_fbcda ,_ ,_aaee :=_eaad .buildOutlineTree (_ffgdaf ,nil ,nil ,nil );if _aaee !=nil {return nil ,_aaee ;};_gcf .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_fbcda );
return _fbcda ,nil ;};

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_dgffe *XObjectImage )ToImage ()(*Image ,error ){_degeg :=&Image {};if _dgffe .Height ==nil {return nil ,_cc .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_degeg .Height =*_dgffe .Height ;if _dgffe .Width ==nil {return nil ,_cc .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_degeg .Width =*_dgffe .Width ;if _dgffe .BitsPerComponent ==nil {switch _dgffe .Filter .(type ){case *_bbe .CCITTFaxEncoder ,*_bbe .JBIG2Encoder :_degeg .BitsPerComponent =1;
case *_bbe .LZWEncoder ,*_bbe .RunLengthEncoder :_degeg .BitsPerComponent =8;default:return nil ,_cc .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
};}else {_degeg .BitsPerComponent =*_dgffe .BitsPerComponent ;};_degeg .ColorComponents =_dgffe .ColorSpace .GetNumComponents ();_dgffe ._cggga .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_bbe .MakeInteger (int64 (_degeg .ColorComponents )));
_egeae ,_gfeeb :=_bbe .DecodeStream (_dgffe ._cggga );if _gfeeb !=nil {return nil ,_gfeeb ;};_degeg .Data =_egeae ;if _dgffe .Decode !=nil {_adbed ,_eddb :=_dgffe .Decode .(*_bbe .PdfObjectArray );if !_eddb {_gcf .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");
return nil ,_cc .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_gcbdae ,_acdda :=_adbed .ToFloat64Array ();if _acdda !=nil {return nil ,_acdda ;};switch _dgffe .ColorSpace .(type ){case *PdfColorspaceDeviceCMYK :_addcf :=_dgffe .ColorSpace .DecodeArray ();
if _addcf [0]==_gcbdae [0]&&_addcf [1]==_gcbdae [1]&&_addcf [2]==_gcbdae [2]&&_addcf [3]==_gcbdae [3]{_degeg ._eacbf =_gcbdae ;};default:_degeg ._eacbf =_gcbdae ;};};return _degeg ,nil ;};func (_bgcec *Image )samplesTrimPadding (_ebbfa []uint32 )[]uint32 {_aacdb :=_bgcec .ColorComponents *int (_bgcec .Width )*int (_bgcec .Height );
if len (_ebbfa )==_aacdb {return _ebbfa ;};_gegdg :=make ([]uint32 ,_aacdb );_fgdfd :=int (_bgcec .Width )*_bgcec .ColorComponents ;var _efaa ,_befac ,_affcc ,_bcad int ;_acgac :=_gb .BytesPerLine (int (_bgcec .Width ),int (_bgcec .BitsPerComponent ),_bgcec .ColorComponents );
for _efaa =0;_efaa < int (_bgcec .Height );_efaa ++{_befac =_efaa *int (_bgcec .Width );_affcc =_efaa *_acgac ;for _bcad =0;_bcad < _fgdfd ;_bcad ++{_gegdg [_befac +_bcad ]=_ebbfa [_affcc +_bcad ];};};return _gegdg ;};

// Fill populates `form` with values provided by `provider`.
func (_gfagf *PdfAcroForm )Fill (provider FieldValueProvider )error {return _gfagf .fill (provider ,nil )};

// DecodeArray returns the component range values for the Indexed colorspace.
func (_cbfa *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_cbfa .HiVal )};};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_ebgg *PdfColorspaceLab )ColorFromPdfObjects (objects []_bbe .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_cc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cbbb ,_ecgg :=_bbe .GetNumbersAsFloat (objects );
if _ecgg !=nil {return nil ,_ecgg ;};return _ebgg .ColorFromFloats (_cbbb );};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_cgfg *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_cc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_agff :=vals [0];if _agff < 0.0||_agff > 100.0{_gcf .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_agff );
return nil ,ErrColorOutOfRange ;};_ecdbc :=vals [1];_dafba :=float64 (-100);_dbgg :=float64 (100);if len (_cgfg .Range )> 1{_dafba =_cgfg .Range [0];_dbgg =_cgfg .Range [1];};if _ecdbc < _dafba ||_ecdbc > _dbgg {_gcf .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_ecdbc ,_dafba ,_dbgg );
return nil ,ErrColorOutOfRange ;};_bcec :=vals [2];_dcca :=float64 (-100);_gged :=float64 (100);if len (_cgfg .Range )> 3{_dcca =_cgfg .Range [2];_gged =_cgfg .Range [3];};if _bcec < _dcca ||_bcec > _gged {_gcf .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_bcec ,_dcca ,_gged );
return nil ,ErrColorOutOfRange ;};_ddad :=NewPdfColorLab (_agff ,_ecdbc ,_bcec );return _ddad ,nil ;};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_cegc *PdfPage )error ;};

// Encoder returns the font's text encoder.
func (_ebccg *pdfFontSimple )Encoder ()_ff .TextEncoder {if _ebccg ._adcac !=nil {return _ebccg ._adcac ;};if _ebccg ._bfgf !=nil {return _ebccg ._bfgf ;};_gege ,_ :=_ff .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );
return _gege ;};

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_gacbg *PdfPageResources )HasXObjectByName (keyName _bbe .PdfObjectName )bool {_fbcag ,_ :=_gacbg .GetXObjectByName (keyName );return _fbcag !=nil ;};type crossReference struct{Type int ;

// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_cccbdc .Lock ();defer _cccbdc .Unlock ();_bccba =creator };func (_aadfe *pdfCIDFontType0 )baseFields ()*fontCommon {return &_aadfe .fontCommon };

// Write writes out the PDF.
func (_fbfda *PdfWriter )Write (writer _geb .Writer )error {_gcf .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");_bddca :=_fbfda .checkLicense ();if _bddca !=nil {return _bddca ;};if _bddca =_fbfda .writeOutlines ();_bddca !=nil {return _bddca ;};
if _bddca =_fbfda .writeAcroFormFields ();_bddca !=nil {return _bddca ;};_fbfda .checkPendingObjects ();if _bddca =_fbfda .writeOutputIntents ();_bddca !=nil {return _bddca ;};_fbfda .setCatalogVersion ();_fbfda .copyObjects ();if _bddca =_fbfda .optimize ();
_bddca !=nil {return _bddca ;};if _bddca =_fbfda .optimizeDocument ();_bddca !=nil {return _bddca ;};var _dffcdc _da .Hash ;if _fbfda ._fcgfg {_dffcdc =_dd .New ();writer =_geb .MultiWriter (_dffcdc ,writer );};_fbfda .setWriter (writer );_fabfb :=_fbfda .checkCrossReferenceStream ();
_fecab ,_fabfb :=_fbfda .mapObjectStreams (_fabfb );_fbfda .adjustXRefAffectedVersion (_fabfb );_fbfda .writeDocumentVersion ();_fbfda .updateObjectNumbers ();_fbfda .writeObjects ();if _bddca =_fbfda .writeObjectsInStreams (_fecab );_bddca !=nil {return _bddca ;
};_afdad :=_fbfda ._dccgd ;var _bfaag int ;for _adadf :=range _fbfda ._cffgb {if _adadf > _bfaag {_bfaag =_adadf ;};};if _fbfda ._fcgfg {if _bddca =_fbfda .setHashIDs (_dffcdc );_bddca !=nil {return _bddca ;};};if _fabfb {if _bddca =_fbfda .writeXRefStreams (_bfaag ,_afdad );
_bddca !=nil {return _bddca ;};}else {_fbfda .writeTrailer (_bfaag );};_fbfda .makeOffSetReference (_afdad );if _bddca =_fbfda .flushWriter ();_bddca !=nil {return _bddca ;};return nil ;};

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _bbe .PdfObject ;AN _bbe .PdfObject ;OP _bbe .PdfObject ;JS _bbe .PdfObject ;};

// PageCallback callback function used in page loading
// that could be used to modify the page content.
//
// Deprecated: will be removed in v4. Use PageProcessCallback instead.
type PageCallback func (_beebc int ,_gbbbb *PdfPage );

// ToPdfObject implements interface PdfModel.
func (_afg *PdfActionGoTo )ToPdfObject ()_bbe .PdfObject {_afg .PdfAction .ToPdfObject ();_bbc :=_afg ._be ;_bde :=_bbc .PdfObject .(*_bbe .PdfObjectDictionary );_bde .SetIfNotNil ("\u0053",_bbe .MakeName (string (ActionTypeGoTo )));_bde .SetIfNotNil ("\u0044",_afg .D );
return _bbc ;};

// GetTrailer returns the PDF's trailer dictionary.
func (_aagf *PdfReader )GetTrailer ()(*_bbe .PdfObjectDictionary ,error ){_gaeef :=_aagf ._ffgcd .GetTrailer ();if _gaeef ==nil {return nil ,_cc .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _gaeef ,nil ;
};

// Evaluate runs the function. Input is [x1 x2 x3].
func (_cddf *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _cddf ._aggfb ==nil {_cddf ._aggfb =_gfe .NewPSExecutor (_cddf .Program );};var _ecdf []_gfe .PSObject ;for _ ,_gfddd :=range xVec {_ecdf =append (_ecdf ,_gfe .MakeReal (_gfddd ));
};_gbddg ,_ecacb :=_cddf ._aggfb .Execute (_ecdf );if _ecacb !=nil {return nil ,_ecacb ;};_aefac ,_ecacb :=_gfe .PSObjectArrayToFloat64Array (_gbddg );if _ecacb !=nil {return nil ,_ecacb ;};return _aefac ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_fa *PdfActionLaunch )ToPdfObject ()_bbe .PdfObject {_fa .PdfAction .ToPdfObject ();_cb :=_fa ._be ;_deg :=_cb .PdfObject .(*_bbe .PdfObjectDictionary );_deg .SetIfNotNil ("\u0053",_bbe .MakeName (string (ActionTypeLaunch )));if _fa .F !=nil {_deg .Set ("\u0046",_fa .F .ToPdfObject ());
};_deg .SetIfNotNil ("\u0057\u0069\u006e",_fa .Win );_deg .SetIfNotNil ("\u004d\u0061\u0063",_fa .Mac );_deg .SetIfNotNil ("\u0055\u006e\u0069\u0078",_fa .Unix );_deg .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_fa .NewWindow );return _cb ;
};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_bdcf *PdfColorspaceCalGray )GetNumComponents ()int {return 1};

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_bedfb :=&XObjectForm {};_ceef :=&_bbe .PdfObjectStream {};_ceef .PdfObjectDictionary =_bbe .MakeDict ();_bedfb ._abbbg =_ceef ;return _bedfb ;};

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_ddabf *PdfPageResources )HasColorspaceByName (keyName _bbe .PdfObjectName )bool {_eagec ,_cdcca :=_ddabf .GetColorspaces ();if _cdcca !=nil {_gcf .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_cdcca );
return false ;};if _eagec ==nil {return false ;};_ ,_abbb :=_eagec .Colorspaces [string (keyName )];return _abbb ;};

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_gdceb :=&PdfAppender {_facg :reader ._bdfdg ,Reader :reader ,_deff :reader ._ffgcd ,_adbcd :reader ._beaad };_bbfa ,_bceeg :=_gdceb ._facg .Seek (0,_geb .SeekEnd );if _bceeg !=nil {return nil ,_bceeg ;
};_gdceb ._egg =_bbfa ;if _ ,_bceeg =_gdceb ._facg .Seek (0,_geb .SeekStart );_bceeg !=nil {return nil ,_bceeg ;};_gdceb ._aeaa ,_bceeg =NewPdfReader (_gdceb ._facg );if _bceeg !=nil {return nil ,_bceeg ;};for _ ,_afaf :=range _gdceb .Reader .GetObjectNums (){if _gdceb ._acbd < _afaf {_gdceb ._acbd =_afaf ;
};};_gdceb ._bafb =_gdceb ._deff .GetXrefTable ();_gdceb ._decd =_gdceb ._deff .GetXrefOffset ();_gdceb ._gada =append (_gdceb ._gada ,_gdceb ._aeaa .PageList ...);_gdceb ._ggee =make (map[_bbe .PdfObject ]struct{});_gdceb ._aggfg =make (map[_bbe .PdfObject ]int64 );
_gdceb ._gdg =make (map[_bbe .PdfObject ]struct{});_gdceb ._bggf =_gdceb ._aeaa .AcroForm ;_gdceb ._cagb =_gdceb ._aeaa .DSS ;return _gdceb ,nil ;};

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _bbe .PdfObject )(PdfColorspace ,error ){if obj ==nil {return nil ,nil ;};var _ffda *_bbe .PdfIndirectObject ;var _fefg *_bbe .PdfObjectName ;var _abbg *_bbe .PdfObjectArray ;if _agb ,_aafb :=obj .(*_bbe .PdfIndirectObject );
_aafb {_ffda =_agb ;};obj =_bbe .TraceToDirectObject (obj );switch _aeeb :=obj .(type ){case *_bbe .PdfObjectArray :_abbg =_aeeb ;case *_bbe .PdfObjectName :_fefg =_aeeb ;};if _fefg !=nil {switch *_fefg {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;
case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;
default:_gcf .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_fefg );return nil ,_gagc ;};};if _abbg !=nil &&_abbg .Len ()> 0{var _ccbca _bbe .PdfObject =_ffda ;
if _ffda ==nil {_ccbca =_abbg ;};if _bfdg ,_cagc :=_bbe .GetName (_abbg .Get (0));_cagc {switch _bfdg .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _abbg .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _abbg .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;
};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _abbg .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _aaeb (_ccbca );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _cdce (_ccbca );
case "\u004c\u0061\u0062":return _aece (_ccbca );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _gbgf (_ccbca );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _aecfd (_ccbca );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _eadb (_ccbca );
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _gdbc (_ccbca );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _aega (_ccbca );default:_gcf .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_bfdg );
};};};_gcf .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());
return nil ,ErrTypeCheck ;};func _aaeb (_cbfc _bbe .PdfObject )(*PdfColorspaceCalGray ,error ){_gbfdb :=NewPdfColorspaceCalGray ();if _dagd ,_bacg :=_cbfc .(*_bbe .PdfIndirectObject );_bacg {_gbfdb ._ffea =_dagd ;};_cbfc =_bbe .TraceToDirectObject (_cbfc );
_fged ,_gdddf :=_cbfc .(*_bbe .PdfObjectArray );if !_gdddf {return nil ,_g .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _fged .Len ()!=2{return nil ,_g .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");
};_cbfc =_bbe .TraceToDirectObject (_fged .Get (0));_cbcc ,_gdddf :=_cbfc .(*_bbe .PdfObjectName );if !_gdddf {return nil ,_g .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_cbcc !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_g .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_cbfc =_bbe .TraceToDirectObject (_fged .Get (1));
_bedg ,_gdddf :=_cbfc .(*_bbe .PdfObjectDictionary );if !_gdddf {return nil ,_g .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");
};_cbfc =_bedg .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_cbfc =_bbe .TraceToDirectObject (_cbfc );_cdc ,_gdddf :=_cbfc .(*_bbe .PdfObjectArray );if !_gdddf {return nil ,_g .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");
};if _cdc .Len ()!=3{return nil ,_g .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_afaef ,_abbfa :=_cdc .GetAsFloat64Slice ();
if _abbfa !=nil {return nil ,_abbfa ;};_gbfdb .WhitePoint =_afaef ;_cbfc =_bedg .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _cbfc !=nil {_cbfc =_bbe .TraceToDirectObject (_cbfc );_aff ,_bfae :=_cbfc .(*_bbe .PdfObjectArray );
if !_bfae {return nil ,_g .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");};if _aff .Len ()!=3{return nil ,_g .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");
};_ffad ,_ccfg :=_aff .GetAsFloat64Slice ();if _ccfg !=nil {return nil ,_ccfg ;};_gbfdb .BlackPoint =_ffad ;};_cbfc =_bedg .Get ("\u0047\u0061\u006dm\u0061");if _cbfc !=nil {_cbfc =_bbe .TraceToDirectObject (_cbfc );_cadc ,_edcd :=_bbe .GetNumberAsFloat (_cbfc );
if _edcd !=nil {return nil ,_g .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");};_gbfdb .Gamma =_cadc ;};return _gbfdb ,nil ;};

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_baab *PdfFieldButton )IsCheckbox ()bool {return _baab .GetType ()==ButtonTypeCheckbox };

// IsEncrypted returns true if the PDF file is encrypted.
func (_abcb *PdfReader )IsEncrypted ()(bool ,error ){return _abcb ._ffgcd .IsEncrypted ()};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_aecec *PdfShadingType2 )ToPdfObject ()_bbe .PdfObject {_aecec .PdfShading .ToPdfObject ();_accda ,_efcded :=_aecec .getShadingDict ();if _efcded !=nil {_gcf .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _accda ==nil {_gcf .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _aecec .Coords !=nil {_accda .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_aecec .Coords );
};if _aecec .Domain !=nil {_accda .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_aecec .Domain );};if _aecec .Function !=nil {if len (_aecec .Function )==1{_accda .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_aecec .Function [0].ToPdfObject ());
}else {_dgdfg :=_bbe .MakeArray ();for _ ,_efaf :=range _aecec .Function {_dgdfg .Append (_efaf .ToPdfObject ());};_accda .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dgdfg );};};if _aecec .Extend !=nil {_accda .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_aecec .Extend );
};return _aecec ._eecbb ;};

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _bbe .PdfObjectName ;};

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_becb :=NewPdfAnnotation ();_bgcf :=&PdfAnnotationRedact {};_bgcf .PdfAnnotation =_becb ;_bgcf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_becb .SetContext (_bgcf );return _bgcf ;};

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;DiffResults *_gfg .DiffResults ;IsCrlFound bool ;IsOcspFound bool ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _ge .Time ;};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_bbe .PdfObjectName ;Colorants _bbe .PdfObject ;Process _bbe .PdfObject ;MixingHints _bbe .PdfObject ;_fefcb *_bbe .PdfIndirectObject ;};func _edcdf (_bggcc *_bbe .PdfObjectDictionary )(*PdfFieldText ,error ){_efdda :=&PdfFieldText {};
_efdda .DA ,_ =_bbe .GetString (_bggcc .Get ("\u0044\u0041"));_efdda .Q ,_ =_bbe .GetInt (_bggcc .Get ("\u0051"));_efdda .DS ,_ =_bbe .GetString (_bggcc .Get ("\u0044\u0053"));_efdda .RV =_bggcc .Get ("\u0052\u0056");_efdda .MaxLen ,_ =_bbe .GetInt (_bggcc .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));
return _efdda ,nil ;};

// GetAction returns the PDF action for the annotation link.
func (_ecfc *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _ecfc ._ecb !=nil {return _ecfc ._ecb ,nil ;};if _ecfc .A ==nil {return nil ,nil ;};if _ecfc ._gdc ==nil {return nil ,nil ;};_aaa ,_agf :=_ecfc ._gdc .loadAction (_ecfc .A );if _agf !=nil {return nil ,_agf ;
};_ecfc ._ecb =_aaa ;return _ecfc ._ecb ,nil ;};

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _geb .ReadSeeker )(*PdfFont ,error ){const _ccccg =_ff .CharCode (32);const _dgad =_ff .CharCode (255);_faaeg ,_bdee :=_gc .ReadAll (r );if _bdee !=nil {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_bdee );
return nil ,_bdee ;};_ggbd ,_bdee :=_bfg .TtfParse (_cf .NewReader (_faaeg ));if _bdee !=nil {_gcf .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_bdee );
return nil ,_bdee ;};_feca :=&pdfFontSimple {_dbba :make (map[_ff .CharCode ]float64 ),fontCommon :fontCommon {_cafed :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_feca ._adcac =_ff .NewWinAnsiEncoder ();_feca ._ffdd =_ggbd .PostScriptName ;_feca .FirstChar =_bbe .MakeInteger (int64 (_ccccg ));
_feca .LastChar =_bbe .MakeInteger (int64 (_dgad ));_fcgd :=1000.0/float64 (_ggbd .UnitsPerEm );if len (_ggbd .Widths )<=0{return nil ,_cc .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_adbgc :=_fcgd *float64 (_ggbd .Widths [0]);_ffca :=make ([]float64 ,0,_dgad -_ccccg +1);for _gagac :=_ccccg ;_gagac <=_dgad ;_gagac ++{_bagfc ,_ggaab :=_feca .Encoder ().CharcodeToRune (_gagac );if !_ggaab {_gcf .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_gagac );
_ffca =append (_ffca ,_adbgc );continue ;};_bfed ,_cbeaa :=_ggbd .Chars [_bagfc ];if !_cbeaa {_gcf .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_ffca =append (_ffca ,_adbgc );continue ;
};_adfee :=_fcgd *float64 (_ggbd .Widths [_bfed ]);_ffca =append (_ffca ,_adfee );};_feca .Widths =_bbe .MakeIndirectObject (_bbe .MakeArrayFromFloats (_ffca ));if len (_ffca )< int (_dgad -_ccccg +1){_gcf .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_ffca ),255-32+1);
return nil ,_bbe .ErrRangeError ;};for _eeafc :=_ccccg ;_eeafc <=_dgad ;_eeafc ++{_feca ._dbba [_eeafc ]=_ffca [_eeafc -_ccccg ];};_feca .Encoding =_bbe .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_ffgcg :=&PdfFontDescriptor {};
_ffgcg .FontName =_bbe .MakeName (_ggbd .PostScriptName );_ffgcg .Ascent =_bbe .MakeFloat (_fcgd *float64 (_ggbd .TypoAscender ));_ffgcg .Descent =_bbe .MakeFloat (_fcgd *float64 (_ggbd .TypoDescender ));_ffgcg .CapHeight =_bbe .MakeFloat (_fcgd *float64 (_ggbd .CapHeight ));
_ffgcg .FontBBox =_bbe .MakeArrayFromFloats ([]float64 {_fcgd *float64 (_ggbd .Xmin ),_fcgd *float64 (_ggbd .Ymin ),_fcgd *float64 (_ggbd .Xmax ),_fcgd *float64 (_ggbd .Ymax )});_ffgcg .ItalicAngle =_bbe .MakeFloat (_ggbd .ItalicAngle );_ffgcg .MissingWidth =_bbe .MakeFloat (_fcgd *float64 (_ggbd .Widths [0]));
_agcd ,_bdee :=_bbe .MakeStream (_faaeg ,_bbe .NewFlateEncoder ());if _bdee !=nil {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_bdee );
return nil ,_bdee ;};_agcd .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_bbe .MakeInteger (int64 (len (_faaeg ))));_ffgcg .FontFile2 =_agcd ;if _ggbd .Bold {_ffgcg .StemV =_bbe .MakeInteger (120);}else {_ffgcg .StemV =_bbe .MakeInteger (70);
};_ebdc :=_efbf ;if _ggbd .IsFixedPitch {_ebdc |=_eafda ;};if _ggbd .ItalicAngle !=0{_ebdc |=_gcag ;};_ffgcg .Flags =_bbe .MakeInteger (int64 (_ebdc ));_feca ._abdgdb =_ffgcg ;_fggf :=&PdfFont {_afag :_feca };return _fggf ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_eegcb *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};

// ToPdfObject implements interface PdfModel.
func (_abaa *PdfAnnotationInk )ToPdfObject ()_bbe .PdfObject {_abaa .PdfAnnotation .ToPdfObject ();_adae :=_abaa ._dbg ;_baaa :=_adae .PdfObject .(*_bbe .PdfObjectDictionary );_abaa .PdfAnnotationMarkup .appendToPdfDictionary (_baaa );_baaa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbe .MakeName ("\u0049\u006e\u006b"));
_baaa .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_abaa .InkList );_baaa .SetIfNotNil ("\u0042\u0053",_abaa .BS );return _adae ;};

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_bfg .CharMetrics ;func (_cbdgae *PdfWriter )hasObject (_edacc _bbe .PdfObject )bool {_ ,_bgfdb :=_cbdgae ._ffebc [_edacc ];return _bgfdb ;};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_ccgde ,_acdgb :=_bfg .NewStdFontByName (HelveticaName );if !_acdgb {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");
};_babfd :=_gdaee (_ccgde );return &PdfFont {_afag :&_babfd };};

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _bbe .PdfObject ;T _bbe .PdfObject ;Operation _bbe .PdfObject ;};func (_ffaa *PdfPattern )getDict ()*_bbe .PdfObjectDictionary {if _aeegf ,_gdbeg :=_ffaa ._agefc .(*_bbe .PdfIndirectObject );_gdbeg {_dcfdd ,_eddea :=_aeegf .PdfObject .(*_bbe .PdfObjectDictionary );
if !_eddea {return nil ;};return _dcfdd ;}else if _fgeg ,_efbac :=_ffaa ._agefc .(*_bbe .PdfObjectStream );_efbac {return _fgeg .PdfObjectDictionary ;}else {_gcf .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_ffaa ._agefc );
return nil ;};};func (_gdeg fontCommon )isCIDFont ()bool {if _gdeg ._cafed ==""{_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_gdeg );
};_abcac :=false ;switch _gdeg ._cafed {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_abcac =true ;};_gcf .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_abcac ,_gdeg );
return _abcac ;};

// AnnotFilterFunc represents a PDF annotation filtering function. If the function
// returns true, the annotation is kept, otherwise it is discarded.
type AnnotFilterFunc func (*PdfAnnotation )bool ;

// AddFont adds a font dictionary to the Font resources.
func (_dced *PdfPage )AddFont (name _bbe .PdfObjectName ,font _bbe .PdfObject )error {if _dced .Resources ==nil {_dced .Resources =NewPdfPageResources ();};if _dced .Resources .Font ==nil {_dced .Resources .Font =_bbe .MakeDict ();};_adcfe ,_ggdae :=_bbe .TraceToDirectObject (_dced .Resources .Font ).(*_bbe .PdfObjectDictionary );
if !_ggdae {_gcf .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_bbe .TraceToDirectObject (_dced .Resources .Font ));
return _cc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_adcfe .Set (name ,font );return nil ;};func _dfbdd (_cgeacf _bbe .PdfObject ,_faeb bool )(*PdfFont ,error ){_cgcbd ,_fegc ,_daebd :=_beca (_cgeacf );
if _cgcbd !=nil {_aedd (_cgcbd );};if _daebd !=nil {if _daebd ==ErrType1CFontNotSupported {_ccee ,_cbgcd :=_fccb (_cgcbd ,_fegc ,nil );if _cbgcd !=nil {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_fegc ,_cbgcd );
return nil ,_daebd ;};return &PdfFont {_afag :_ccee },_daebd ;};return nil ,_daebd ;};_fecfd :=&PdfFont {};switch _fegc ._cafed {case "\u0054\u0079\u0070e\u0030":if !_faeb {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_fegc );
return nil ,_cc .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_acbb ,_bffb :=_cabca (_cgcbd ,_fegc );if _bffb !=nil {_gcf .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_fegc ,_bffb );
return nil ,_bffb ;};_fecfd ._afag =_acbb ;case "\u0054\u0079\u0070e\u0031","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _fdfc *pdfFontSimple ;_fcdc ,_aagdb :=_bfg .NewStdFontByName (_bfg .StdFontName (_fegc ._ffdd ));
if _aagdb {_adfbe :=_gdaee (_fcdc );_fecfd ._afag =&_adfbe ;_gccg :=_bbe .TraceToDirectObject (_adfbe .ToPdfObject ());_decdd ,_gbfgf ,_egef :=_beca (_gccg );if _egef !=nil {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_fegc ,_adfbe );
return nil ,_egef ;};for _ ,_ccec :=range _cgcbd .Keys (){_decdd .Set (_ccec ,_cgcbd .Get (_ccec ));};_fdfc ,_egef =_fccb (_decdd ,_gbfgf ,_adfbe ._bfgf );if _egef !=nil {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_fegc ,_adfbe );
return nil ,_egef ;};_fdfc ._dbba =_adfbe ._dbba ;_fdfc ._gbafb =_adfbe ._gbafb ;if _fdfc ._fgfb ==nil {_fdfc ._fgfb =_adfbe ._fgfb ;};}else {_fdfc ,_daebd =_fccb (_cgcbd ,_fegc ,nil );if _daebd !=nil {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_fegc ,_daebd );
return nil ,_daebd ;};};_daebd =_fdfc .addEncoding ();if _daebd !=nil {return nil ,_daebd ;};if _aagdb {_fdfc .updateStandard14Font ();};if _aagdb &&_fdfc ._adcac ==nil &&_fdfc ._bfgf ==nil {_gcf .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_fdfc );
_gcf .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_fcdc );};if len (_fdfc ._dbba )==0{_gcf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_fdfc );};_fecfd ._afag =_fdfc ;
case "\u0054\u0079\u0070e\u0033":_dbbb ,_acgcb :=_cbdff (_cgcbd ,_fegc );if _acgcb !=nil {_gcf .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020W\u0068\u0069\u006c\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0074y\u0070\u0065\u0033\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076",_acgcb );
return nil ,_acgcb ;};_fecfd ._afag =_dbbb ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_fddbb ,_bdfb :=_cecbe (_cgcbd ,_fegc );if _bdfb !=nil {_gcf .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_bdfb );
return nil ,_bdfb ;};_fecfd ._afag =_fddbb ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_adfbd ,_dbcb :=_ddcfa (_cgcbd ,_fegc );if _dbcb !=nil {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_fegc ,_dbcb );
return nil ,_dbcb ;};_fecfd ._afag =_adfbd ;default:_gcf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_fegc );
return nil ,_g .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_fegc );};return _fecfd ,nil ;};

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;

// AnnotFilterFunc allows filtering the annotations in the flattening
// process. If the filter function returns true, the annotation is flattened,
// otherwise it is skipped.
AnnotFilterFunc AnnotFilterFunc ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_fgbd pdfCIDFontType2 )GetRuneMetrics (r rune )(_bfg .CharMetrics ,bool ){_adee ,_dagb :=_fgbd ._bggb [r ];if !_dagb {_agffd ,_ecdd :=_bbe .GetInt (_fgbd .DW );if !_ecdd {return _bfg .CharMetrics {},false ;};_adee =int (*_agffd );};return _bfg .CharMetrics {Wx :float64 (_adee )},true ;
};const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";
ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";
ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";
ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";
ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);func (_bbdee *PdfWriter )setDocInfo (_dcgdd _bbe .PdfObject ){if _bbdee .hasObject (_bbdee ._befcg ){delete (_bbdee ._ffebc ,_bbdee ._befcg );
delete (_bbdee ._dcddd ,_bbdee ._befcg );for _gcccg ,_dbcfe :=range _bbdee ._ageab {if _dbcfe ==_bbdee ._befcg {copy (_bbdee ._ageab [_gcccg :],_bbdee ._ageab [_gcccg +1:]);_bbdee ._ageab [len (_bbdee ._ageab )-1]=nil ;_bbdee ._ageab =_bbdee ._ageab [:len (_bbdee ._ageab )-1];
break ;};};};_bbdfb :=_bbe .PdfIndirectObject {};_bbdfb .PdfObject =_dcgdd ;_bbdee ._befcg =&_bbdfb ;_bbdee .addObject (&_bbdfb );};

// WriteString outputs the object as it is to be written to file.
func (_fdcfdd *pdfSignDictionary )WriteString ()string {_fdcfdd ._ggae =0;_fdcfdd ._cecd =0;_fdcfdd ._gaba =0;_fdcfdd ._dbaa =0;_ggfgc :=_cf .NewBuffer (nil );_ggfgc .WriteString ("\u003c\u003c");for _ ,_bgbcb :=range _fdcfdd .Keys (){_gagab :=_fdcfdd .Get (_bgbcb );
switch _bgbcb {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_ggfgc .WriteString (_bgbcb .WriteString ());_ggfgc .WriteString ("\u0020");_fdcfdd ._gaba =_ggfgc .Len ();_ggfgc .WriteString (_gagab .WriteString ());_ggfgc .WriteString ("\u0020");_fdcfdd ._dbaa =_ggfgc .Len ()-1;
case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_ggfgc .WriteString (_bgbcb .WriteString ());_ggfgc .WriteString ("\u0020");_fdcfdd ._ggae =_ggfgc .Len ();_ggfgc .WriteString (_gagab .WriteString ());_ggfgc .WriteString ("\u0020");_fdcfdd ._cecd =_ggfgc .Len ()-1;
default:_ggfgc .WriteString (_bgbcb .WriteString ());_ggfgc .WriteString ("\u0020");_ggfgc .WriteString (_gagab .WriteString ());};};_ggfgc .WriteString ("\u003e\u003e");return _ggfgc .String ();};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_cccbdc .Lock ();defer _cccbdc .Unlock ();_cbdba =author };

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };

// GetCharMetrics returns the char metrics for character code `code`.
func (_faef pdfCIDFontType0 )GetCharMetrics (code _ff .CharCode )(_bfg .CharMetrics ,bool ){_adagc :=_faef ._eege ;if _effbe ,_daadg :=_faef ._cedcg [code ];_daadg {_adagc =_effbe ;};return _bfg .CharMetrics {Wx :_adagc },true ;};func _aece (_cgacb _bbe .PdfObject )(*PdfColorspaceLab ,error ){_aaadc :=NewPdfColorspaceLab ();
if _edaaa ,_fgddc :=_cgacb .(*_bbe .PdfIndirectObject );_fgddc {_aaadc ._eff =_edaaa ;};_cgacb =_bbe .TraceToDirectObject (_cgacb );_cabbe ,_ddae :=_cgacb .(*_bbe .PdfObjectArray );if !_ddae {return nil ,_g .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if _cabbe .Len ()!=2{return nil ,_g .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");};_cgacb =_bbe .TraceToDirectObject (_cabbe .Get (0));_bbgg ,_ddae :=_cgacb .(*_bbe .PdfObjectName );
if !_ddae {return nil ,_g .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");};if *_bbgg !="\u004c\u0061\u0062"{return nil ,_g .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");
};_cgacb =_bbe .TraceToDirectObject (_cabbe .Get (1));_gdddb ,_ddae :=_cgacb .(*_bbe .PdfObjectDictionary );if !_ddae {return nil ,_g .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");
};_cgacb =_gdddb .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_cgacb =_bbe .TraceToDirectObject (_cgacb );_eageb ,_ddae :=_cgacb .(*_bbe .PdfObjectArray );if !_ddae {return nil ,_g .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");
};if _eageb .Len ()!=3{return nil ,_g .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_fefgc ,_bcdba :=_eageb .GetAsFloat64Slice ();
if _bcdba !=nil {return nil ,_bcdba ;};_aaadc .WhitePoint =_fefgc ;_cgacb =_gdddb .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _cgacb !=nil {_cgacb =_bbe .TraceToDirectObject (_cgacb );_bgege ,_cgde :=_cgacb .(*_bbe .PdfObjectArray );
if !_cgde {return nil ,_g .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");};if _bgege .Len ()!=3{return nil ,_g .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_agad ,_deba :=_bgege .GetAsFloat64Slice ();if _deba !=nil {return nil ,_deba ;};_aaadc .BlackPoint =_agad ;};_cgacb =_gdddb .Get ("\u0052\u0061\u006eg\u0065");if _cgacb !=nil {_cgacb =_bbe .TraceToDirectObject (_cgacb );_dcaa ,_abge :=_cgacb .(*_bbe .PdfObjectArray );
if !_abge {_gcf .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");return nil ,_g .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _dcaa .Len ()!=4{_gcf .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");
return nil ,_g .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_abgef ,_eegb :=_dcaa .GetAsFloat64Slice ();if _eegb !=nil {return nil ,_eegb ;};_aaadc .Range =_abgef ;};return _aaadc ,nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_dggg *PdfColorspaceDeviceGray )ToPdfObject ()_bbe .PdfObject {return _bbe .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_ccf :=NewPdfAction ();_fe :=&PdfActionHide {};_fe .PdfAction =_ccf ;_ccf .SetContext (_fe );return _fe ;};

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _bbe .PdfObject ;IC _bbe .PdfObject ;BE _bbe .PdfObject ;RD _bbe .PdfObject ;};

// GetSubFilter returns SubFilter value or empty string.
func (_fbafe *pdfSignDictionary )GetSubFilter ()string {_edefb :=_fbafe .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _edefb ==nil {return "";};if _fefgca ,_bagac :=_bbe .GetNameVal (_edefb );_bagac {return _fefgca ;};return "";};func (_cgcc *pdfFontType0 )baseFields ()*fontCommon {return &_cgcc .fontCommon };


// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_dfbg *PdfColorspaceCalRGB )ToPdfObject ()_bbe .PdfObject {_abadb :=&_bbe .PdfObjectArray {};_abadb .Append (_bbe .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_fecd :=_bbe .MakeDict ();if _dfbg .WhitePoint !=nil {_fabb :=_bbe .MakeArray (_bbe .MakeFloat (_dfbg .WhitePoint [0]),_bbe .MakeFloat (_dfbg .WhitePoint [1]),_bbe .MakeFloat (_dfbg .WhitePoint [2]));
_fecd .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_fabb );}else {_gcf .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");
};if _dfbg .BlackPoint !=nil {_gafd :=_bbe .MakeArray (_bbe .MakeFloat (_dfbg .BlackPoint [0]),_bbe .MakeFloat (_dfbg .BlackPoint [1]),_bbe .MakeFloat (_dfbg .BlackPoint [2]));_fecd .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_gafd );
};if _dfbg .Gamma !=nil {_fbcd :=_bbe .MakeArray (_bbe .MakeFloat (_dfbg .Gamma [0]),_bbe .MakeFloat (_dfbg .Gamma [1]),_bbe .MakeFloat (_dfbg .Gamma [2]));_fecd .Set ("\u0047\u0061\u006dm\u0061",_fbcd );};if _dfbg .Matrix !=nil {_bffa :=_bbe .MakeArray (_bbe .MakeFloat (_dfbg .Matrix [0]),_bbe .MakeFloat (_dfbg .Matrix [1]),_bbe .MakeFloat (_dfbg .Matrix [2]),_bbe .MakeFloat (_dfbg .Matrix [3]),_bbe .MakeFloat (_dfbg .Matrix [4]),_bbe .MakeFloat (_dfbg .Matrix [5]),_bbe .MakeFloat (_dfbg .Matrix [6]),_bbe .MakeFloat (_dfbg .Matrix [7]),_bbe .MakeFloat (_dfbg .Matrix [8]));
_fecd .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_bffa );};_abadb .Append (_fecd );if _dfbg ._geaf !=nil {_dfbg ._geaf .PdfObject =_abadb ;return _dfbg ._geaf ;};return _abadb ;};

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_cgaf *PdfOutline )GetContainingPdfObject ()_bbe .PdfObject {return _cgaf ._faabb };

// PdfColorPatternType2 represents a color shading pattern type 2 (Axial).
type PdfColorPatternType2 struct{Color PdfColor ;PatternName _bbe .PdfObjectName ;};

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
/*
	Format: [/DeviceN names alternateSpace tintTransform]
        or: [/DeviceN names alternateSpace tintTransform attributes]
*/
type PdfColorspaceDeviceN struct{ColorantNames *_bbe .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_ggb *_bbe .PdfIndirectObject ;};

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_ffdcg ,_abca :=NewStandard14Font (basefont );if _abca !=nil {panic (_g .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));
};return _ffdcg ;};

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_cafg _bbe .PdfObject ;};

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_agca :=NewPdfAnnotation ();_eaa :=&PdfAnnotationFreeText {};_eaa .PdfAnnotation =_agca ;_eaa .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_agca .SetContext (_eaa );return _eaa ;};

// SetNameDictionary sets the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_edcge *PdfWriter )SetNameDictionary (names _bbe .PdfObject )error {if names ==nil {return nil ;};_gcf .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");
_edcge ._bgdee .Set ("\u004e\u0061\u006de\u0073",names );return _edcge .addObjects (names );};

// NewStandardPdfOutputIntent creates a new standard PdfOutputIntent.
func NewStandardPdfOutputIntent (outputCondition ,outputConditionIdentifier ,registryName string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,RegistryName :registryName ,DestOutputProfile :destOutputProfile ,ColorComponents :colorComponents ,_agbec :_bbe .MakeDict ()};
};func _acgdc (_bbgcb *_bbe .PdfObjectStream )(*PdfFunctionType4 ,error ){_dbgac :=&PdfFunctionType4 {};_dbgac ._aaagc =_bbgcb ;_gbfgfa :=_bbgcb .PdfObjectDictionary ;_geac ,_bgfac :=_bbe .TraceToDirectObject (_gbfgfa .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bbe .PdfObjectArray );
if !_bgfac {_gcf .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_cc .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _geac .Len ()%2!=0{_gcf .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_cc .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_agbff ,_eabge :=_geac .ToFloat64Array ();
if _eabge !=nil {return nil ,_eabge ;};_dbgac .Domain =_agbff ;_geac ,_bgfac =_bbe .TraceToDirectObject (_gbfgfa .Get ("\u0052\u0061\u006eg\u0065")).(*_bbe .PdfObjectArray );if _bgfac {if _geac .Len ()< 0||_geac .Len ()%2!=0{return nil ,_cc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_ebbea ,_bgbcd :=_geac .ToFloat64Array ();if _bgbcd !=nil {return nil ,_bgbcd ;};_dbgac .Range =_ebbea ;};_dgdg ,_eabge :=_bbe .DecodeStream (_bbgcb );if _eabge !=nil {return nil ,_eabge ;};_dbgac ._cefed =_dgdg ;_aceab :=_gfe .NewPSParser (_dgdg );_dddfd ,_eabge :=_aceab .Parse ();
if _eabge !=nil {return nil ,_eabge ;};_dbgac .Program =_dddfd ;return _dbgac ,nil ;};func (_dcc *PdfReader )newPdfActionRenditionFromDict (_ecc *_bbe .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_ecc .Get ("\u0052"),AN :_ecc .Get ("\u0041\u004e"),OP :_ecc .Get ("\u004f\u0050"),JS :_ecc .Get ("\u004a\u0053")},nil ;
};func _cffe (_bgagb *_bbe .PdfObjectDictionary )(*PdfShadingType1 ,error ){_gaed :=PdfShadingType1 {};if _cfbdc :=_bgagb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_cfbdc !=nil {_cfbdc =_bbe .TraceToDirectObject (_cfbdc );_ebbff ,_ageafe :=_cfbdc .(*_bbe .PdfObjectArray );
if !_ageafe {_gcf .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cfbdc );return nil ,_cc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_gaed .Domain =_ebbff ;};if _ccfgf :=_bgagb .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_ccfgf !=nil {_ccfgf =_bbe .TraceToDirectObject (_ccfgf );_bgdc ,_fccd :=_ccfgf .(*_bbe .PdfObjectArray );if !_fccd {_gcf .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ccfgf );
return nil ,_cc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gaed .Matrix =_bgdc ;};_gdcbf :=_bgagb .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _gdcbf ==nil {_gcf .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_gaed .Function =[]PdfFunction {};if _cfedg ,_dfbfd :=_gdcbf .(*_bbe .PdfObjectArray );_dfbfd {for _ ,_ecfgb :=range _cfedg .Elements (){_cedf ,_fbbgd :=_bdce (_ecfgb );if _fbbgd !=nil {_gcf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fbbgd );
return nil ,_fbbgd ;};_gaed .Function =append (_gaed .Function ,_cedf );};}else {_ecegf ,_ggebb :=_bdce (_gdcbf );if _ggebb !=nil {_gcf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ggebb );
return nil ,_ggebb ;};_gaed .Function =append (_gaed .Function ,_ecegf );};return &_gaed ,nil ;};

// GetNumComponents returns the number of color components (3 for Lab).
func (_cebb *PdfColorLab )GetNumComponents ()int {return 3};

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_ecef ,_aefdd :=_cd .Open (filePath );if _aefdd !=nil {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_aefdd );
return nil ,_aefdd ;};defer _ecef .Close ();return NewPdfFontFromTTF (_ecef );};

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _bbe .PdfObject ;NewWindow _bbe .PdfObject ;T _bbe .PdfObject ;};

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_edf :=NewPdfAnnotation ();_faf :=&PdfAnnotationScreen {};_faf .PdfAnnotation =_edf ;_edf .SetContext (_faf );return _faf ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_egdba *PdfShadingPatternType3 )ToPdfObject ()_bbe .PdfObject {_egdba .PdfPattern .ToPdfObject ();_gefg :=_egdba .getDict ();if _egdba .Shading !=nil {_gefg .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_egdba .Shading .ToPdfObject ());};if _egdba .Matrix !=nil {_gefg .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_egdba .Matrix );
};if _egdba .ExtGState !=nil {_gefg .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_egdba .ExtGState );};return _egdba ._agefc ;};

// ToPdfObject implements interface PdfModel.
func (_bdgc *PdfAnnotationLine )ToPdfObject ()_bbe .PdfObject {_bdgc .PdfAnnotation .ToPdfObject ();_abba :=_bdgc ._dbg ;_bcgd :=_abba .PdfObject .(*_bbe .PdfObjectDictionary );_bdgc .PdfAnnotationMarkup .appendToPdfDictionary (_bcgd );_bcgd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbe .MakeName ("\u004c\u0069\u006e\u0065"));
_bcgd .SetIfNotNil ("\u004c",_bdgc .L );_bcgd .SetIfNotNil ("\u0042\u0053",_bdgc .BS );_bcgd .SetIfNotNil ("\u004c\u0045",_bdgc .LE );_bcgd .SetIfNotNil ("\u0049\u0043",_bdgc .IC );_bcgd .SetIfNotNil ("\u004c\u004c",_bdgc .LL );_bcgd .SetIfNotNil ("\u004c\u004c\u0045",_bdgc .LLE );
_bcgd .SetIfNotNil ("\u0043\u0061\u0070",_bdgc .Cap );_bcgd .SetIfNotNil ("\u0049\u0054",_bdgc .IT );_bcgd .SetIfNotNil ("\u004c\u004c\u004f",_bdgc .LLO );_bcgd .SetIfNotNil ("\u0043\u0050",_bdgc .CP );_bcgd .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_bdgc .Measure );
_bcgd .SetIfNotNil ("\u0043\u004f",_bdgc .CO );return _abba ;};func _agcdb (_fddf _bbe .PdfObject )(*PdfFunctionType3 ,error ){_bcgaba :=&PdfFunctionType3 {};var _gcgb *_bbe .PdfObjectDictionary ;if _afcfd ,_eecd :=_fddf .(*_bbe .PdfIndirectObject );_eecd {_ebea ,_gbcdb :=_afcfd .PdfObject .(*_bbe .PdfObjectDictionary );
if !_gbcdb {return nil ,_cc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bcgaba ._bfecg =_afcfd ;_gcgb =_ebea ;}else if _egedg ,_efgbb :=_fddf .(*_bbe .PdfObjectDictionary );_efgbb {_gcgb =_egedg ;}else {return nil ,_cc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_fcccc ,_fbeg :=_bbe .TraceToDirectObject (_gcgb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bbe .PdfObjectArray );if !_fbeg {_gcf .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_cc .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _fcccc .Len ()!=2{_gcf .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_cc .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_cgdb ,_bedeg :=_fcccc .ToFloat64Array ();
if _bedeg !=nil {return nil ,_bedeg ;};_bcgaba .Domain =_cgdb ;_fcccc ,_fbeg =_bbe .TraceToDirectObject (_gcgb .Get ("\u0052\u0061\u006eg\u0065")).(*_bbe .PdfObjectArray );if _fbeg {if _fcccc .Len ()< 0||_fcccc .Len ()%2!=0{return nil ,_cc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_addfa ,_bccb :=_fcccc .ToFloat64Array ();if _bccb !=nil {return nil ,_bccb ;};_bcgaba .Range =_addfa ;};_fcccc ,_fbeg =_bbe .TraceToDirectObject (_gcgb .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_bbe .PdfObjectArray );if !_fbeg {_gcf .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_cc .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_bcgaba .Functions =[]PdfFunction {};
for _ ,_dabba :=range _fcccc .Elements (){_ceacg ,_facce :=_bdce (_dabba );if _facce !=nil {return nil ,_facce ;};_bcgaba .Functions =append (_bcgaba .Functions ,_ceacg );};_fcccc ,_fbeg =_bbe .TraceToDirectObject (_gcgb .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_bbe .PdfObjectArray );
if !_fbeg {_gcf .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_cc .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};_cbee ,_bedeg :=_fcccc .ToFloat64Array ();if _bedeg !=nil {return nil ,_bedeg ;};_bcgaba .Bounds =_cbee ;if len (_bcgaba .Bounds )!=len (_bcgaba .Functions )-1{_gcf .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_bcgaba .Bounds ),len (_bcgaba .Functions ));
return nil ,_cc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fcccc ,_fbeg =_bbe .TraceToDirectObject (_gcgb .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_bbe .PdfObjectArray );if !_fbeg {_gcf .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_cc .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_ceagc ,_bedeg :=_fcccc .ToFloat64Array ();
if _bedeg !=nil {return nil ,_bedeg ;};_bcgaba .Encode =_ceagc ;if len (_bcgaba .Encode )!=2*len (_bcgaba .Functions ){_gcf .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_bcgaba .Encode ),len (_bcgaba .Functions ));
return nil ,_cc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _bcgaba ,nil ;};

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_fedgd *PdfPage )GetContainingPdfObject ()_bbe .PdfObject {return _fedgd ._efggg };

// GetContentStreams returns the content stream as an array of strings.
func (_beebf *PdfPage )GetContentStreams ()([]string ,error ){_bgbdfd :=_beebf .GetContentStreamObjs ();var _fbbgg []string ;for _ ,_ffdeba :=range _bgbdfd {_daggf ,_aagb :=_efgggb (_ffdeba );if _aagb !=nil {return nil ,_aagb ;};_fbbgg =append (_fbbgg ,_daggf );
};return _fbbgg ,nil ;};

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_ggafa *PdfField )FullName ()(string ,error ){var _cggd _cf .Buffer ;_eeea :=[]string {};if _ggafa .T !=nil {_eeea =append (_eeea ,_ggafa .T .Decoded ());};_ebgfca :=map[*PdfField ]bool {};_ebgfca [_ggafa ]=true ;_gefb :=_ggafa .Parent ;for _gefb !=nil {if _ ,_cbfdc :=_ebgfca [_gefb ];
_cbfdc {return _cggd .String (),_cc .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _gefb .T ==nil {return _cggd .String (),_cc .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");
};_eeea =append (_eeea ,_gefb .T .Decoded ());_ebgfca [_gefb ]=true ;_gefb =_gefb .Parent ;};for _cfdc :=len (_eeea )-1;_cfdc >=0;_cfdc --{_cggd .WriteString (_eeea [_cfdc ]);if _cfdc > 0{_cggd .WriteString ("\u002e");};};return _cggd .String (),nil ;};


// Height returns the height of `rect`.
func (_efbg *PdfRectangle )Height ()float64 {return _ab .Abs (_efbg .Ury -_efbg .Lly )};

// ToPdfObject returns the PDF representation of the VRI dictionary.
func (_bfcedd *VRI )ToPdfObject ()*_bbe .PdfObjectDictionary {_bffff :=_bbe .MakeDict ();_bffff .SetIfNotNil (_bbe .PdfObjectName ("\u0043\u0065\u0072\u0074"),_fbffc (_bfcedd .Cert ));_bffff .SetIfNotNil (_bbe .PdfObjectName ("\u004f\u0043\u0053\u0050"),_fbffc (_bfcedd .OCSP ));
_bffff .SetIfNotNil (_bbe .PdfObjectName ("\u0043\u0052\u004c"),_fbffc (_bfcedd .CRL ));_bffff .SetIfNotNil ("\u0054\u0055",_bfcedd .TU );_bffff .SetIfNotNil ("\u0054\u0053",_bfcedd .TS );return _bffff ;};func _ccdd (_fgcg *PdfPage )map[_bbe .PdfObjectName ]_bbe .PdfObject {_fccc :=make (map[_bbe .PdfObjectName ]_bbe .PdfObject );
if _fgcg .Resources ==nil {return _fccc ;};if _fgcg .Resources .Font !=nil {if _ddec ,_cccbb :=_bbe .GetDict (_fgcg .Resources .Font );_cccbb {for _ ,_cdbgb :=range _ddec .Keys (){_fccc [_cdbgb ]=_ddec .Get (_cdbgb );};};};if _fgcg .Resources .ExtGState !=nil {if _ecba ,_fbbg :=_bbe .GetDict (_fgcg .Resources .ExtGState );
_fbbg {for _ ,_degb :=range _ecba .Keys (){_fccc [_degb ]=_ecba .Get (_degb );};};};if _fgcg .Resources .XObject !=nil {if _aeed ,_fdde :=_bbe .GetDict (_fgcg .Resources .XObject );_fdde {for _ ,_eedb :=range _aeed .Keys (){_fccc [_eedb ]=_aeed .Get (_eedb );
};};};if _fgcg .Resources .Pattern !=nil {if _fag ,_bdfd :=_bbe .GetDict (_fgcg .Resources .Pattern );_bdfd {for _ ,_afac :=range _fag .Keys (){_fccc [_afac ]=_fag .Get (_afac );};};};if _fgcg .Resources .Shading !=nil {if _dfbeb ,_dbcc :=_bbe .GetDict (_fgcg .Resources .Shading );
_dbcc {for _ ,_fcebb :=range _dfbeb .Keys (){_fccc [_fcebb ]=_dfbeb .Get (_fcebb );};};};if _fgcg .Resources .ProcSet !=nil {if _cdac ,_dcce :=_bbe .GetDict (_fgcg .Resources .ProcSet );_dcce {for _ ,_dgd :=range _cdac .Keys (){_fccc [_dgd ]=_cdac .Get (_dgd );
};};};if _fgcg .Resources .Properties !=nil {if _agde ,_dfea :=_bbe .GetDict (_fgcg .Resources .Properties );_dfea {for _ ,_aab :=range _agde .Keys (){_fccc [_aab ]=_agde .Get (_aab );};};};return _fccc ;};

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;);

// ToPdfObject returns the PDF representation of the function.
func (_agcca *PdfFunctionType3 )ToPdfObject ()_bbe .PdfObject {_bbfe :=_bbe .MakeDict ();_bbfe .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bbe .MakeInteger (3));_bgdff :=&_bbe .PdfObjectArray {};for _ ,_edfa :=range _agcca .Domain {_bgdff .Append (_bbe .MakeFloat (_edfa ));
};_bbfe .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_bgdff );if _agcca .Range !=nil {_aaacb :=&_bbe .PdfObjectArray {};for _ ,_gefed :=range _agcca .Range {_aaacb .Append (_bbe .MakeFloat (_gefed ));};_bbfe .Set ("\u0052\u0061\u006eg\u0065",_aaacb );};
if _agcca .Functions !=nil {_gbgc :=&_bbe .PdfObjectArray {};for _ ,_dbad :=range _agcca .Functions {_gbgc .Append (_dbad .ToPdfObject ());};_bbfe .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_gbgc );};if _agcca .Bounds !=nil {_bagaf :=&_bbe .PdfObjectArray {};
for _ ,_ddgd :=range _agcca .Bounds {_bagaf .Append (_bbe .MakeFloat (_ddgd ));};_bbfe .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_bagaf );};if _agcca .Encode !=nil {_dgdfc :=&_bbe .PdfObjectArray {};for _ ,_accad :=range _agcca .Encode {_dgdfc .Append (_bbe .MakeFloat (_accad ));
};_bbfe .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_dgdfc );};if _agcca ._bfecg !=nil {_agcca ._bfecg .PdfObject =_bbfe ;return _agcca ._bfecg ;};return _bbfe ;};

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_gfce :=NewPdfAction ();_ccg :=&PdfActionSound {};_ccg .PdfAction =_gfce ;_gfce .SetContext (_ccg );return _ccg ;};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _bbe .PdfObject ;};func _gcdgf (_fcfc ,_aebb string )string {if _df .Contains (_fcfc ,"\u002b"){_egfd :=_df .Split (_fcfc ,"\u002b");if len (_egfd )==2{_fcfc =_egfd [1];};};return _aebb +"\u002b"+_fcfc ;};


// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_geed *PdfFieldButton )IsRadio ()bool {return _geed .GetType ()==ButtonTypeRadio };

// SetContext sets the sub action (context).
func (_db *PdfAction )SetContext (ctx PdfModel ){_db ._gfc =ctx };

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_bbfc *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_bbe .StreamEncoder ,error ){_cecce ,_eegdb :=_bbfc ._agefc .(*_bbe .PdfObjectStream );if !_eegdb {_gcf .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bbfc ._agefc );
return nil ,nil ,_bbe .ErrTypeError ;};_afbbe ,_efefa :=_bbe .DecodeStream (_cecce );if _efefa !=nil {_gcf .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_efefa );
return nil ,nil ,_efefa ;};_dccad ,_efefa :=_bbe .NewEncoderFromStream (_cecce );if _efefa !=nil {_gcf .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_efefa );
return nil ,nil ,_efefa ;};return _afbbe ,_dccad ,nil ;};

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bbe .PdfObject ;};

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _geb .ReadSeeker )(*PdfFont ,error ){_dagc ,_cdge :=_gc .ReadAll (r );if _cdge !=nil {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_cdge );
return nil ,_cdge ;};_bddf ,_cdge :=_bfg .TtfParse (_cf .NewReader (_dagc ));if _cdge !=nil {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_cdge );
return nil ,_cdge ;};_aabgc :=&pdfCIDFontType2 {fontCommon :fontCommon {_cafed :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_bbe .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};if len (_bddf .Widths )<=0{return nil ,_cc .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_egfaa :=1000.0/float64 (_bddf .UnitsPerEm );_adcdd :=_egfaa *float64 (_bddf .Widths [0]);_cebe :=make (map[rune ]int );_ggfc :=make (map[_bfg .GID ]int );_ffgcf :=_bfg .GID (len (_bddf .Widths ));for _dffc ,_dbgdf :=range _bddf .Chars {if _dbgdf > _ffgcf -1{continue ;
};_adeb :=int (_egfaa *float64 (_bddf .Widths [_dbgdf ]));_cebe [_dffc ]=_adeb ;_ggfc [_dbgdf ]=_adeb ;};_aabgc ._bggb =_cebe ;_aabgc .DW =_bbe .MakeInteger (int64 (_adcdd ));_gagb :=_facgg (_ggfc ,uint16 (_ffgcf ));_aabgc .W =_bbe .MakeIndirectObject (_gagb );
_dcbbf :=_bbe .MakeDict ();_dcbbf .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_bbe .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_dcbbf .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_bbe .MakeString ("\u0041\u0064\u006fb\u0065"));
_dcbbf .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_bbe .MakeInteger (0));_aabgc .CIDSystemInfo =_dcbbf ;_fgbc :=&PdfFontDescriptor {FontName :_bbe .MakeName (_bddf .PostScriptName ),Ascent :_bbe .MakeFloat (_egfaa *float64 (_bddf .TypoAscender )),Descent :_bbe .MakeFloat (_egfaa *float64 (_bddf .TypoDescender )),CapHeight :_bbe .MakeFloat (_egfaa *float64 (_bddf .CapHeight )),FontBBox :_bbe .MakeArrayFromFloats ([]float64 {_egfaa *float64 (_bddf .Xmin ),_egfaa *float64 (_bddf .Ymin ),_egfaa *float64 (_bddf .Xmax ),_egfaa *float64 (_bddf .Ymax )}),ItalicAngle :_bbe .MakeFloat (_bddf .ItalicAngle ),MissingWidth :_bbe .MakeFloat (_adcdd )};
_dage ,_cdge :=_bbe .MakeStream (_dagc ,_bbe .NewFlateEncoder ());if _cdge !=nil {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_cdge );
return nil ,_cdge ;};_dage .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_bbe .MakeInteger (int64 (len (_dagc ))));_fgbc .FontFile2 =_dage ;if _bddf .Bold {_fgbc .StemV =_bbe .MakeInteger (120);}else {_fgbc .StemV =_bbe .MakeInteger (70);
};_fdaad :=_bbcge ;if _bddf .IsFixedPitch {_fdaad |=_eafda ;};if _bddf .ItalicAngle !=0{_fdaad |=_gcag ;};_fgbc .Flags =_bbe .MakeInteger (int64 (_fdaad ));_aabgc ._ffdd =_bddf .PostScriptName ;_aabgc ._abdgdb =_fgbc ;_fdfag :=pdfFontType0 {fontCommon :fontCommon {_cafed :"\u0054\u0079\u0070e\u0030",_ffdd :_bddf .PostScriptName },DescendantFont :&PdfFont {_afag :_aabgc },Encoding :_bbe .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_cacge :_bddf .NewEncoder ()};
if len (_bddf .Chars )> 0{_ebbec :=make (map[_fb .CharCode ]rune ,len (_bddf .Chars ));for _efff ,_caef :=range _bddf .Chars {_ecdbb :=_fb .CharCode (_caef );if _geeae ,_adfbdg :=_ebbec [_ecdbb ];!_adfbdg ||(_adfbdg &&_geeae > _efff ){_ebbec [_ecdbb ]=_efff ;
};};_fdfag ._ggdec =_fb .NewToUnicodeCMap (_ebbec );};_efddg :=PdfFont {_afag :&_fdfag };return &_efddg ,nil ;};

// Encoder returns the font's text encoder.
func (_bace pdfFontType0 )Encoder ()_ff .TextEncoder {return _bace ._cacge };

// Duplicate creates a duplicate page based on the current one and returns it.
func (_agdad *PdfPage )Duplicate ()*PdfPage {_aeea :=*_agdad ;_aeea ._gbegc =_bbe .MakeDict ();_aeea ._efggg =_bbe .MakeIndirectObject (_aeea ._gbegc );_aeea ._cagaa =*_aeea ._gbegc ;return &_aeea ;};func (_egce *LTV )getOCSPs (_fdecf []*_gg .Certificate ,_ebbd map[string ]*_gg .Certificate )([][]byte ,error ){_fdacf :=make ([][]byte ,0,len (_fdecf ));
for _ ,_cfbc :=range _fdecf {for _ ,_efcb :=range _cfbc .OCSPServer {if _egce .CertClient .IsCA (_cfbc ){continue ;};_dagge ,_gegdf :=_ebbd [_cfbc .Issuer .CommonName ];if !_gegdf {_gcf .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074\u003a\u0020\u0069\u0073\u0073\u0075e\u0072\u0020\u0063\u0065\u0072t\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
continue ;};_ ,_cdggg ,_afcad :=_egce .OCSPClient .MakeRequest (_efcb ,_cfbc ,_dagge );if _afcad !=nil {_gcf .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075e\u0073t\u0020\u0065\u0072\u0072\u006f\u0072\u003a \u0025\u0076",_afcad );
continue ;};_fdacf =append (_fdacf ,_cdggg );};};return _fdacf ,nil ;};

// GetFontDescriptor returns the font descriptor for `font`.
func (_cdgcd PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _cdgcd ._afag .getFontDescriptor (),nil ;};

// Encoder returns the font's text encoder.
func (_fbfed pdfCIDFontType0 )Encoder ()_ff .TextEncoder {return _fbfed ._afagd };var ErrColorOutOfRange =_cc .New ("\u0063o\u006co\u0072\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;

// Evaluate runs the function on the passed in slice and returns the results.
func (_ebggb *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_gcf .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_cc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};return nil ,_cc .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};func (_bffcc *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_deag *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_cc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_beedb :=vals [0];if _beedb < 0.0||_beedb > 1.0{_gcf .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_beedb );
return nil ,ErrColorOutOfRange ;};_fab :=vals [1];if _fab < 0.0||_fab > 1.0{_gcf .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fab );return nil ,ErrColorOutOfRange ;
};_bgbgd :=vals [2];if _bgbgd < 0.0||_bgbgd > 1.0{_gcf .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_bgbgd );return nil ,ErrColorOutOfRange ;};_eaaf :=vals [3];
if _eaaf < 0.0||_eaaf > 1.0{_gcf .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_eaaf );return nil ,ErrColorOutOfRange ;};_fccg :=NewPdfColorDeviceCMYK (_beedb ,_fab ,_bgbgd ,_eaaf );
return _fccg ,nil ;};

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_bbe .PdfObjectStream )(*XObjectForm ,error ){_dgdaf :=&XObjectForm {};_dgdaf ._abbbg =stream ;_aeddd :=*(stream .PdfObjectDictionary );_edggd ,_eadbc :=_bbe .NewEncoderFromStream (stream );if _eadbc !=nil {return nil ,_eadbc ;
};_dgdaf .Filter =_edggd ;if _adgcd :=_aeddd .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_adgcd !=nil {_ebcfd ,_afabf :=_adgcd .(*_bbe .PdfObjectName );if !_afabf {return nil ,_cc .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if *_ebcfd !="\u0046\u006f\u0072\u006d"{_gcf .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_cc .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");
};};if _afggg :=_aeddd .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_afggg !=nil {_dgdaf .FormType =_afggg ;};if _cfdae :=_aeddd .Get ("\u0042\u0042\u006f\u0078");_cfdae !=nil {_dgdaf .BBox =_cfdae ;};if _bdgac :=_aeddd .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_bdgac !=nil {_dgdaf .Matrix =_bdgac ;};if _acge :=_aeddd .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_acge !=nil {_acge =_bbe .TraceToDirectObject (_acge );_adeg ,_adfdd :=_acge .(*_bbe .PdfObjectDictionary );if !_adfdd {_gcf .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_bbe .ErrTypeError ;};_dagcd ,_becce :=NewPdfPageResourcesFromDict (_adeg );if _becce !=nil {_gcf .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");
return nil ,_becce ;};_dgdaf .Resources =_dagcd ;_gcf .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_dgdaf .Resources );};_dgdaf .Group =_aeddd .Get ("\u0047\u0072\u006fu\u0070");
_dgdaf .Ref =_aeddd .Get ("\u0052\u0065\u0066");_dgdaf .MetaData =_aeddd .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_dgdaf .PieceInfo =_aeddd .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_dgdaf .LastModified =_aeddd .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");
_dgdaf .StructParent =_aeddd .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_dgdaf .StructParents =_aeddd .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_dgdaf .OPI =_aeddd .Get ("\u004f\u0050\u0049");
_dgdaf .OC =_aeddd .Get ("\u004f\u0043");_dgdaf .Name =_aeddd .Get ("\u004e\u0061\u006d\u0065");_dgdaf .Stream =stream .Stream ;return _dgdaf ,nil ;};func (_cgbfe *PdfWriter )setDocumentIDs (_aeeba ,_dbbgc string ){_cgbfe ._gggff =_bbe .MakeArray (_bbe .MakeHexString (_aeeba ),_bbe .MakeHexString (_dbbgc ));
};func (_bgbb *PdfReader )newPdfAnnotationFileAttachmentFromDict (_ead *_bbe .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_gae :=PdfAnnotationFileAttachment {};_eca ,_cfbd :=_bgbb .newPdfAnnotationMarkupFromDict (_ead );if _cfbd !=nil {return nil ,_cfbd ;
};_gae .PdfAnnotationMarkup =_eca ;_gae .FS =_ead .Get ("\u0046\u0053");_gae .Name =_ead .Get ("\u004e\u0061\u006d\u0065");return &_gae ,nil ;};

// ToPdfObject converts rectangle to a PDF object.
func (_ffagg *PdfRectangle )ToPdfObject ()_bbe .PdfObject {return _bbe .MakeArray (_bbe .MakeFloat (_ffagg .Llx ),_bbe .MakeFloat (_ffagg .Lly ),_bbe .MakeFloat (_ffagg .Urx ),_bbe .MakeFloat (_ffagg .Ury ));};

// GenerateHashMaps generates DSS hashmaps for Certificates, OCSPs and CRLs to make sure they are unique.
func (_bgdfe *DSS )GenerateHashMaps ()error {_dbfba ,_abbd :=_bgdfe .generateHashMap (_bgdfe .Certs );if _abbd !=nil {return _abbd ;};_bcea ,_abbd :=_bgdfe .generateHashMap (_bgdfe .OCSPs );if _abbd !=nil {return _abbd ;};_gegc ,_abbd :=_bgdfe .generateHashMap (_bgdfe .CRLs );
if _abbd !=nil {return _abbd ;};_bgdfe ._egdd =_dbfba ;_bgdfe ._fcdf =_bcea ;_bgdfe ._agef =_gegc ;return nil ;};var _cgbdc =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};


// L returns the value of the L component of the color.
func (_bebf *PdfColorLab )L ()float64 {return _bebf [0]};

// ToGoTime returns the date in time.Time format.
func (_adcce PdfDate )ToGoTime ()_ge .Time {_bgdfec :=int (_adcce ._bdfdc *60*60+_adcce ._degcc *60);switch _adcce ._fdgcgf {case '-':_bgdfec =-_bgdfec ;case 'Z':_bgdfec =0;};_dcecd :=_g .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_adcce ._fdgcgf ,_adcce ._bdfdc ,_adcce ._degcc );
_faaadf :=_ge .FixedZone (_dcecd ,_bgdfec );return _ge .Date (int (_adcce ._fbgcd ),_ge .Month (_adcce ._adagcb ),int (_adcce ._ecbec ),int (_adcce ._fcffa ),int (_adcce ._bafbb ),int (_adcce ._gcffe ),0,_faaadf );};

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_edfg *PdfFieldButton )SetType (btype ButtonType ){_agaf :=uint32 (0);if _edfg .Ff !=nil {_agaf =uint32 (*_edfg .Ff );};switch btype {case ButtonTypePush :_agaf |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_agaf |=FieldFlagRadio .Mask ();
};_edfg .Ff =_bbe .MakeInteger (int64 (_agaf ));};type pdfFont interface{_bfg .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_bbe .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};

// ToPdfObject implements interface PdfModel.
func (_bce *PdfActionThread )ToPdfObject ()_bbe .PdfObject {_bce .PdfAction .ToPdfObject ();_bfd :=_bce ._be ;_ddab :=_bfd .PdfObject .(*_bbe .PdfObjectDictionary );_ddab .SetIfNotNil ("\u0053",_bbe .MakeName (string (ActionTypeThread )));if _bce .F !=nil {_ddab .Set ("\u0046",_bce .F .ToPdfObject ());
};_ddab .SetIfNotNil ("\u0044",_bce .D );_ddab .SetIfNotNil ("\u0042",_bce .B );return _bfd ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_ebaf *PdfColorspaceLab )GetNumComponents ()int {return 3};

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_badac *PdfPageResources )GetXObjectImageByName (keyName _bbe .PdfObjectName )(*XObjectImage ,error ){_abcfa ,_acdgf :=_badac .GetXObjectByName (keyName );if _abcfa ==nil {return nil ,nil ;};if _acdgf !=XObjectTypeImage {return nil ,_cc .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");
};_fbaag ,_ddbda :=NewXObjectImageFromStream (_abcfa );if _ddbda !=nil {return nil ,_ddbda ;};return _fbaag ,nil ;};

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_efdg *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_efdg .ToPdfOutline ().PdfOutlineTreeNode ;};

// ToPdfObject implements interface PdfModel.
func (_dbabe *PdfSignatureReference )ToPdfObject ()_bbe .PdfObject {_dgdfd :=_bbe .MakeDict ();_dgdfd .SetIfNotNil ("\u0054\u0079\u0070\u0065",_dbabe .Type );_dgdfd .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064",_dbabe .TransformMethod );
_dgdfd .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073",_dbabe .TransformParams );_dgdfd .SetIfNotNil ("\u0044\u0061\u0074\u0061",_dbabe .Data );_dgdfd .SetIfNotNil ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064",_dbabe .DigestMethod );
return _dgdfd ;};

// PdfInfoTrapped specifies pdf trapped information.
type PdfInfoTrapped string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_faeda *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_cbgb :=_dfc .NewReader (img .getBase ());_fadb :=_gb .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._gagad ,img ._eacbf );
_ffgfa :=_dfc .NewWriter (_fadb );_eaca :=_ab .Pow (2,float64 (img .BitsPerComponent ))-1;_ggfg :=_faeda .GetNumComponents ();_fggd :=make ([]uint32 ,_ggfg );_gdae :=make ([]float64 ,_ggfg );for {_cdec :=_cbgb .ReadSamples (_fggd );if _cdec ==_geb .EOF {break ;
}else if _cdec !=nil {return img ,_cdec ;};for _eceg :=0;_eceg < _ggfg ;_eceg ++{_bfdb :=float64 (_fggd [_eceg ])/_eaca ;_gdae [_eceg ]=_bfdb ;};_dfce ,_cdec :=_faeda .TintTransform .Evaluate (_gdae );if _cdec !=nil {return img ,_cdec ;};for _ ,_fbgg :=range _dfce {_fbgg =_ab .Min (_ab .Max (0,_fbgg ),1.0);
if _cdec =_ffgfa .WriteSample (uint32 (_fbgg *_eaca ));_cdec !=nil {return img ,_cdec ;};};};return _faeda .AlternateSpace .ImageToRGB (_gdbea (&_fadb ));};

// ToPdfObject implements interface PdfModel.
func (_fba *PdfActionGoTo3DView )ToPdfObject ()_bbe .PdfObject {_fba .PdfAction .ToPdfObject ();_gff :=_fba ._be ;_cdbg :=_gff .PdfObject .(*_bbe .PdfObjectDictionary );_cdbg .SetIfNotNil ("\u0053",_bbe .MakeName (string (ActionTypeGoTo3DView )));_cdbg .SetIfNotNil ("\u0054\u0041",_fba .TA );
_cdbg .SetIfNotNil ("\u0056",_fba .V );return _gff ;};

// ToPdfObject implements interface PdfModel.
func (_eecda *PdfSignature )ToPdfObject ()_bbe .PdfObject {_efee :=_eecda ._babd ;var _agbdc *_bbe .PdfObjectDictionary ;if _cedfc ,_cfedc :=_efee .PdfObject .(*pdfSignDictionary );_cfedc {_agbdc =_cedfc .PdfObjectDictionary ;}else {_agbdc =_efee .PdfObject .(*_bbe .PdfObjectDictionary );
};_agbdc .SetIfNotNil ("\u0054\u0079\u0070\u0065",_eecda .Type );_agbdc .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_eecda .Filter );_agbdc .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_eecda .SubFilter );_agbdc .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_eecda .ByteRange );
_agbdc .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_eecda .Contents );_agbdc .SetIfNotNil ("\u0043\u0065\u0072\u0074",_eecda .Cert );_agbdc .SetIfNotNil ("\u004e\u0061\u006d\u0065",_eecda .Name );_agbdc .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_eecda .Reason );
_agbdc .SetIfNotNil ("\u004d",_eecda .M );_agbdc .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_eecda .Reference );_agbdc .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_eecda .Changes );_agbdc .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_eecda .ContactInfo );
return _efee ;};

// GetNumComponents returns the number of color components (3 for RGB).
func (_gebcf *PdfColorDeviceRGB )GetNumComponents ()int {return 3};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_ffa *PdfAppender )Write (w _geb .Writer )error {if _ffa ._fbedc {return _cc .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");
};_fdgd :=NewPdfWriter ();_dceb ,_cfga :=_bbe .GetDict (_fdgd ._fbfea );if !_cfga {return _cc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_eeb ,_cfga :=_dceb .Get ("\u004b\u0069\u0064\u0073").(*_bbe .PdfObjectArray );if !_cfga {return _cc .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_abdcf ,_cfga :=_dceb .Get ("\u0043\u006f\u0075n\u0074").(*_bbe .PdfObjectInteger );if !_cfga {return _cc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};_ddee :=_ffa ._aeaa ._ffgcd ;_cbcg :=_ddee .GetTrailer ();if _cbcg ==nil {return _cc .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_deeea ,_cfga :=_bbe .GetIndirect (_cbcg .Get ("\u0052\u006f\u006f\u0074"));
if !_cfga {return _cc .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_gde ,_cfga :=_bbe .GetDict (_deeea );if !_cfga {_gcf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_deeea ,*_cbcg );
return _cc .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};for _ ,_gebc :=range _gde .Keys (){if _fdgd ._bgdee .Get (_gebc )==nil {_fcff :=_gde .Get (_gebc );_fdgd ._bgdee .Set (_gebc ,_fcff );};};if _ffa ._bggf !=nil {if _ffa ._bggf ._dggd {if _acadb :=_bbe .TraceToDirectObject (_ffa ._bggf .ToPdfObject ());
!_bbe .IsNullObject (_acadb ){_fdgd ._bgdee .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_acadb );_ffa .updateObjectsDeep (_acadb ,nil );}else {_gcf .Log .Debug ("\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020t\u0072\u0061\u0063e\u0020\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u0020o\u0062\u006a\u0065\u0063\u0074, \u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0061\u0064\u0064\u0020\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u002e");
};}else {_fdgd ._bgdee .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_ffa ._bggf .ToPdfObject ());_ffa .updateObjectsDeep (_ffa ._bggf .ToPdfObject (),nil );};};if _ffa ._cagb !=nil {_ffa .updateObjectsDeep (_ffa ._cagb .ToPdfObject (),nil );
_fdgd ._bgdee .Set ("\u0044\u0053\u0053",_ffa ._cagb .GetContainingPdfObject ());};if _ffa ._fgdg !=nil {_fdgd ._bgdee .Set ("\u0050\u0065\u0072m\u0073",_ffa ._fgdg .ToPdfObject ());_ffa .updateObjectsDeep (_ffa ._fgdg .ToPdfObject (),nil );};if _fdgd ._dfadc .Major < 2{_fdgd .AddExtension ("\u0045\u0053\u0049\u0043","\u0031\u002e\u0037",5);
_fdgd .AddExtension ("\u0041\u0044\u0042\u0045","\u0031\u002e\u0037",8);};if _fgf ,_bgdf :=_bbe .GetDict (_cbcg .Get ("\u0049\u006e\u0066\u006f"));_bgdf {if _ffec ,_cgbd :=_bbe .GetDict (_fdgd ._befcg );_cgbd {for _ ,_ecab :=range _fgf .Keys (){if _ffec .Get (_ecab )==nil {_ffec .Set (_ecab ,_fgf .Get (_ecab ));
};};};};if _ffa ._dfgb !=nil {_fdgd ._befcg =_bbe .MakeIndirectObject (_ffa ._dfgb .ToPdfObject ());};_ffa .addNewObject (_fdgd ._befcg );_ffa .addNewObject (_fdgd ._ecdbbf );_fafg :=false ;if len (_ffa ._aeaa .PageList )!=len (_ffa ._gada ){_fafg =true ;
}else {for _bdfe :=range _ffa ._aeaa .PageList {switch {case _ffa ._gada [_bdfe ]==_ffa ._aeaa .PageList [_bdfe ]:case _ffa ._gada [_bdfe ]==_ffa .Reader .PageList [_bdfe ]:default:_fafg =true ;};if _fafg {break ;};};};if _fafg {_ffa .updateObjectsDeep (_fdgd ._fbfea ,nil );
}else {_ffa ._gdg [_fdgd ._fbfea ]=struct{}{};};_fdgd ._fbfea .ObjectNumber =_ffa .Reader ._feddd .ObjectNumber ;_ffa ._aggfg [_fdgd ._fbfea ]=_ffa .Reader ._feddd .ObjectNumber ;_caga :=[]_bbe .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
for _ ,_cgf :=range _ffa ._gada {_abea :=_cgf .ToPdfObject ();*_abdcf =*_abdcf +1;if _adbe ,_eede :=_abea .(*_bbe .PdfIndirectObject );_eede &&_adbe .GetParser ()==_ffa ._aeaa ._ffgcd {_eeb .Append (&_adbe .PdfObjectReference );continue ;};if _bcae ,_eafb :=_bbe .GetDict (_abea );
_eafb {_gceb ,_bcdg :=_bcae .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_bbe .PdfIndirectObject );for _bcdg {_gcf .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_gceb );_bafbd ,_bgbd :=_gceb .PdfObject .(*_bbe .PdfObjectDictionary );
if !_bgbd {return _cc .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};for _ ,_dfca :=range _caga {_gcf .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_dfca );if _eded :=_bcae .Get (_dfca );
_eded !=nil {_gcf .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");if len (_cgf ._cagaa .Keys ())> 0&&!_fafg {_gddg :=_cgf ._cagaa ;if _bfcb :=_gddg .Get (_dfca );_bfcb !=nil {if _eded !=_bfcb {_gcf .Log .Trace ("\u0049\u006e\u0068\u0065\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u006f\u0072\u0069\u0067i\u006ea\u006c\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073\u002c\u0020\u0025\u0054",_dfca ,_bfcb );
_bcae .Set (_dfca ,_bfcb );};};};continue ;};if _cccg :=_bafbd .Get (_dfca );_cccg !=nil {_gcf .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_dfca );_bcae .Set (_dfca ,_cccg );};
};_gceb ,_bcdg =_bafbd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_bbe .PdfIndirectObject );_gcf .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_bafbd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));
};if _fafg {_bcae .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_fdgd ._fbfea );};};_ffa .updateObjectsDeep (_abea ,nil );_eeb .Append (_abea );};if _ ,_dbbe :=_ffa ._facg .Seek (0,_geb .SeekStart );_dbbe !=nil {return _dbbe ;};_fed :=make (map[SignatureHandler ]_geb .Writer );
_dcbed :=_bbe .MakeArray ();for _ ,_bedf :=range _ffa ._cada {if _edgg ,_daa :=_bbe .GetIndirect (_bedf );_daa {if _gcce ,_cfbg :=_edgg .PdfObject .(*pdfSignDictionary );_cfbg {_egcc :=*_gcce ._ddbegb ;var _bafd error ;_fed [_egcc ],_bafd =_egcc .NewDigest (_gcce ._fbbfb );
if _bafd !=nil {return _bafd ;};_dcbed .Append (_bbe .MakeInteger (0xfffff),_bbe .MakeInteger (0xfffff));};};};if _dcbed .Len ()> 0{_dcbed .Append (_bbe .MakeInteger (0xfffff),_bbe .MakeInteger (0xfffff));};for _ ,_cbde :=range _ffa ._cada {if _gcfc ,_dgec :=_bbe .GetIndirect (_cbde );
_dgec {if _bbdg ,_decf :=_gcfc .PdfObject .(*pdfSignDictionary );_decf {_bbdg .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_dcbed );};};};_gbea :=len (_fed )> 0;var _eaga _geb .Reader =_ffa ._facg ;if _gbea {_bbgb :=make ([]_geb .Writer ,0,len (_fed ));
for _ ,_baeb :=range _fed {_bbgb =append (_bbgb ,_baeb );};_eaga =_geb .TeeReader (_ffa ._facg ,_geb .MultiWriter (_bbgb ...));};_fbfb ,_ggdg :=_geb .Copy (w ,_eaga );if _ggdg !=nil {return _ggdg ;};if len (_ffa ._cada )==0{return nil ;};_fdgd ._abcgf =_fbfb ;
_fdgd .ObjNumOffset =_ffa ._acbd ;_fdgd ._degbe =true ;_fdgd ._efbgg =_ffa ._bafb ;_fdgd ._cebbb =_ffa ._decd ;_fdgd ._ageg =_ffa ._egg ;_fdgd ._dfadc =_ffa ._aeaa .PdfVersion ();_fdgd ._febda =_ffa ._aggfg ;_fdgd ._ceba =_ffa ._deff .GetCrypter ();_fdgd ._bgdgf =_ffa ._deff .GetEncryptObj ();
_eabd :=_ffa ._deff .GetXrefType ();if _eabd !=nil {_befa :=*_eabd ==_bbe .XrefTypeObjectStream ;_fdgd ._ebabc =&_befa ;};_fdgd ._ffebc =map[_bbe .PdfObject ]struct{}{};_fdgd ._ageab =[]_bbe .PdfObject {};for _ ,_cacd :=range _ffa ._cada {if _ ,_cceg :=_ffa ._gdg [_cacd ];
_cceg {continue ;};_fdgd .addObject (_cacd );};_eadd :=w ;if _gbea {_eadd =_cf .NewBuffer (nil );};if _ffa ._adbca !=""&&_fdgd ._ceba ==nil {_fdgd .Encrypt ([]byte (_ffa ._adbca ),[]byte (_ffa ._adbca ),_ffa ._beea );};if _afeg :=_cbcg .Get ("\u0049\u0044");
_afeg !=nil {if _facc ,_fcfd :=_bbe .GetArray (_afeg );_fcfd {_fdgd ._gggff =_facc ;};};if _bggc :=_fdgd .Write (_eadd );_bggc !=nil {return _bggc ;};if _gbea {_ebca :=_eadd .(*_cf .Buffer ).Bytes ();_dgab :=_bbe .MakeArray ();var _edaa []*pdfSignDictionary ;
var _cbeb int64 ;for _ ,_dcff :=range _fdgd ._ageab {if _bfbf ,_cee :=_bbe .GetIndirect (_dcff );_cee {if _gede ,_cfdfe :=_bfbf .PdfObject .(*pdfSignDictionary );_cfdfe {_edaa =append (_edaa ,_gede );_faae :=_gede ._fegcb +int64 (_gede ._ggae );_dgab .Append (_bbe .MakeInteger (_cbeb ),_bbe .MakeInteger (_faae -_cbeb ));
_cbeb =_gede ._fegcb +int64 (_gede ._cecd );};};};_dgab .Append (_bbe .MakeInteger (_cbeb ),_bbe .MakeInteger (_fbfb +int64 (len (_ebca ))-_cbeb ));_cbbg :=[]byte (_dgab .WriteString ());for _ ,_cca :=range _edaa {_bedd :=int (_cca ._fegcb -_fbfb );for _cdee :=_cca ._gaba ;
_cdee < _cca ._dbaa ;_cdee ++{_ebca [_bedd +_cdee ]=' ';};_aefg :=_ebca [_bedd +_cca ._gaba :_bedd +_cca ._dbaa ];copy (_aefg ,_cbbg );};var _degd int ;for _ ,_deeef :=range _edaa {_ffeb :=int (_deeef ._fegcb -_fbfb );_eead :=_ebca [_degd :_ffeb +_deeef ._ggae ];
_dfec :=*_deeef ._ddbegb ;_fed [_dfec ].Write (_eead );_degd =_ffeb +_deeef ._cecd ;};for _ ,_gcdd :=range _edaa {_gcbf :=_ebca [_degd :];_edcf :=*_gcdd ._ddbegb ;_fed [_edcf ].Write (_gcbf );};for _ ,_bgga :=range _edaa {_dbgf :=int (_bgga ._fegcb -_fbfb );
_cbfb :=*_bgga ._ddbegb ;_gddf :=_fed [_cbfb ];if _afd :=_cbfb .Sign (_bgga ._fbbfb ,_gddf );_afd !=nil {return _afd ;};_bgga ._fbbfb .ByteRange =_dgab ;_begc :=[]byte (_bgga ._fbbfb .Contents .WriteString ());for _cabg :=_bgga ._gaba ;_cabg < _bgga ._dbaa ;
_cabg ++{_ebca [_dbgf +_cabg ]=' ';};for _gcee :=_bgga ._ggae ;_gcee < _bgga ._cecd ;_gcee ++{_ebca [_dbgf +_gcee ]=' ';};_bgadf :=_ebca [_dbgf +_bgga ._gaba :_dbgf +_bgga ._dbaa ];copy (_bgadf ,_cbbg );_bgadf =_ebca [_dbgf +_bgga ._ggae :_dbgf +_bgga ._cecd ];
copy (_bgadf ,_begc );};_efcd :=_cf .NewBuffer (_ebca );_ ,_ggdg =_geb .Copy (w ,_efcd );if _ggdg !=nil {return _ggdg ;};};_ffa ._fbedc =true ;return nil ;};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_efdfg *PdfOutlineTreeNode )ToPdfObject ()_bbe .PdfObject {return _efdfg .GetContext ().ToPdfObject ();};func _gbgf (_cccbe _bbe .PdfObject )(*PdfColorspaceICCBased ,error ){_abgd :=&PdfColorspaceICCBased {};if _fbfbg ,_afge :=_cccbe .(*_bbe .PdfIndirectObject );
_afge {_abgd ._febg =_fbfbg ;};_cccbe =_bbe .TraceToDirectObject (_cccbe );_eggdd ,_ddffd :=_cccbe .(*_bbe .PdfObjectArray );if !_ddffd {return nil ,_g .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _eggdd .Len ()!=2{return nil ,_g .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");
};_cccbe =_bbe .TraceToDirectObject (_eggdd .Get (0));_abag ,_ddffd :=_cccbe .(*_bbe .PdfObjectName );if !_ddffd {return nil ,_g .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_abag !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_g .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_cccbe =_eggdd .Get (1);
_dgbc ,_ddffd :=_bbe .GetStream (_cccbe );if !_ddffd {_gcf .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_cccbe );
return nil ,_g .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_eddab :=_dgbc .PdfObjectDictionary ;_aeag ,_ddffd :=_eddab .Get ("\u004e").(*_bbe .PdfObjectInteger );
if !_ddffd {return nil ,_g .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_aeag !=1&&*_aeag !=3&&*_aeag !=4{return nil ,_g .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");
};_abgd .N =int (*_aeag );if _fbec :=_eddab .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_fbec !=nil {_dcbd ,_ffgda :=NewPdfColorspaceFromPdfObject (_fbec );if _ffgda !=nil {return nil ,_ffgda ;};_abgd .Alternate =_dcbd ;};if _gcfa :=_eddab .Get ("\u0052\u0061\u006eg\u0065");
_gcfa !=nil {_gcfa =_bbe .TraceToDirectObject (_gcfa );_bcbcc ,_bgadg :=_gcfa .(*_bbe .PdfObjectArray );if !_bgadg {return nil ,_g .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");
};if _bcbcc .Len ()!=2*_abgd .N {return nil ,_g .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");
};_fadg ,_fabdf :=_bcbcc .GetAsFloat64Slice ();if _fabdf !=nil {return nil ,_fabdf ;};_abgd .Range =_fadg ;}else {_abgd .Range =make ([]float64 ,2*_abgd .N );for _cbdf :=0;_cbdf < _abgd .N ;_cbdf ++{_abgd .Range [2*_cbdf ]=0.0;_abgd .Range [2*_cbdf +1]=1.0;
};};if _aacfg :=_eddab .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_aacfg !=nil {_bafba ,_baddbd :=_aacfg .(*_bbe .PdfObjectStream );if !_baddbd {return nil ,_g .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");
};_abgd .Metadata =_bafba ;};_fbff ,_gbdd :=_bbe .DecodeStream (_dgbc );if _gbdd !=nil {return nil ,_gbdd ;};_abgd .Data =_fbff ;_abgd ._dfac =_dgbc ;return _abgd ,nil ;};func (_cbcafde *PdfReader )loadAnnotations (_gegf _bbe .PdfObject )([]*PdfAnnotation ,error ){_ddadd ,_acfbg :=_bbe .GetArray (_gegf );
if !_acfbg {return nil ,_g .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};var _bcggg []*PdfAnnotation ;for _ ,_agcgc :=range _ddadd .Elements (){_agcgc =_bbe .ResolveReference (_agcgc );
if _ ,_bfaec :=_agcgc .(*_bbe .PdfObjectNull );_bfaec {continue ;};_adgd ,_acceef :=_agcgc .(*_bbe .PdfObjectDictionary );_ebda ,_dccfeb :=_agcgc .(*_bbe .PdfIndirectObject );if _acceef {_ebda =&_bbe .PdfIndirectObject {};_ebda .PdfObject =_adgd ;}else {if !_dccfeb {return nil ,_g .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");
};};_dfae ,_fgfg :=_cbcafde .newPdfAnnotationFromIndirectObject (_ebda );if _fgfg !=nil {return nil ,_fgfg ;};switch _dffcd :=_dfae .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_bcgee :=range _cbcafde .AcroForm .AllFields (){if _bcgee ._acga ==_dffcd .Parent {_dffcd ._abdd =_bcgee ;
break ;};};};if _dfae !=nil {_bcggg =append (_bcggg ,_dfae );};};return _bcggg ,nil ;};

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_fbega *PdfPageResourcesColorspaces )Set (key _bbe .PdfObjectName ,val PdfColorspace ){if _ ,_gcga :=_fbega .Colorspaces [string (key )];!_gcga {_fbega .Names =append (_fbega .Names ,string (key ));};_fbega .Colorspaces [string (key )]=val ;};func _cabca (_ecbdb *_bbe .PdfObjectDictionary ,_afcf *fontCommon )(*pdfFontType0 ,error ){_dccd ,_acdd :=_bbe .GetArray (_ecbdb .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));
if !_acdd {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_afcf );
return nil ,_bbe .ErrRangeError ;};if _dccd .Len ()!=1{_gcf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_dccd .Len ());return nil ,_bbe .ErrRangeError ;
};_fadf ,_cegea :=_dfbdd (_dccd .Get (0),false );if _cegea !=nil {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_cegea ,_afcf );
return nil ,_cegea ;};_dccb :=_fggb (_afcf );_dccb .DescendantFont =_fadf ;_bgega ,_acdd :=_bbe .GetNameVal (_ecbdb .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _acdd {if _bgega =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_bgega =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_dccb ._cacge =_ff .NewIdentityTextEncoder (_bgega );
}else if _fb .IsPredefinedCMap (_bgega ){_dccb ._cfeba ,_cegea =_fb .LoadPredefinedCMap (_bgega );if _cegea !=nil {_gcf .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_bgega ,_cegea );
};}else {_gcf .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_bgega );};};if _ebgae :=_fadf .baseFields ()._ggdec ;_ebgae !=nil {if _cadaa :=_ebgae .Name ();_cadaa =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_cadaa =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_cadaa =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_cadaa =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_dccb ._cacge =_ff .NewCMapEncoder (_bgega ,_dccb ._cfeba ,_ebgae );
};};return _dccb ,nil ;};

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_feacc ,_feagf :=_gge .ParsePdfTime (dateStr );if _feagf !=nil {return PdfDate {},_feagf ;};return NewPdfDateFromTime (_feacc );};

// GetNamedDestinations returns the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_bcefe *PdfReader )GetNamedDestinations ()(_bbe .PdfObject ,error ){_fdeeg :=_bbe .ResolveReference (_bcefe ._cagcc .Get ("\u0044\u0065\u0073t\u0073"));if _fdeeg ==nil {return nil ,nil ;};if !_bcefe ._egggg {_baeee :=_bcefe .traverseObjectData (_fdeeg );
if _baeee !=nil {return nil ,_baeee ;};};return _fdeeg ,nil ;};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_bdba *PdfAnnotation )ToPdfObject ()_bbe .PdfObject {_fecf :=_bdba ._dbg ;_cafd :=_fecf .PdfObject .(*_bbe .PdfObjectDictionary );_cafd .Clear ();_cafd .Set ("\u0054\u0079\u0070\u0065",_bbe .MakeName ("\u0041\u006e\u006eo\u0074"));_cafd .SetIfNotNil ("\u0052\u0065\u0063\u0074",_bdba .Rect );
_cafd .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_bdba .Contents );_cafd .SetIfNotNil ("\u0050",_bdba .P );_cafd .SetIfNotNil ("\u004e\u004d",_bdba .NM );_cafd .SetIfNotNil ("\u004d",_bdba .M );_cafd .SetIfNotNil ("\u0046",_bdba .F );
_cafd .SetIfNotNil ("\u0041\u0050",_bdba .AP );_cafd .SetIfNotNil ("\u0041\u0053",_bdba .AS );_cafd .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_bdba .Border );_cafd .SetIfNotNil ("\u0043",_bdba .C );_cafd .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_bdba .StructParent );
_cafd .SetIfNotNil ("\u004f\u0043",_bdba .OC );return _fecf ;};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_fddbg :=PdfPage {};_fddbg ._gbegc =_bbe .MakeDict ();_fddbg .Resources =NewPdfPageResources ();_fcfdd :=_bbe .PdfIndirectObject {};_fcfdd .PdfObject =_fddbg ._gbegc ;_fddbg ._efggg =&_fcfdd ;_fddbg ._cagaa =*_fddbg ._gbegc ;
return &_fddbg ;};

// IsColored specifies if the pattern is colored.
func (_gcaagf *PdfTilingPattern )IsColored ()bool {if _gcaagf .PaintType !=nil &&*_gcaagf .PaintType ==1{return true ;};return false ;};func (_adcb *PdfReader )newPdfAnnotationRedactFromDict (_aac *_bbe .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_ccbb :=PdfAnnotationRedact {};
_cbgd ,_fcaf :=_adcb .newPdfAnnotationMarkupFromDict (_aac );if _fcaf !=nil {return nil ,_fcaf ;};_ccbb .PdfAnnotationMarkup =_cbgd ;_ccbb .QuadPoints =_aac .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_ccbb .IC =_aac .Get ("\u0049\u0043");
_ccbb .RO =_aac .Get ("\u0052\u004f");_ccbb .OverlayText =_aac .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");_ccbb .Repeat =_aac .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_ccbb .DA =_aac .Get ("\u0044\u0041");_ccbb .Q =_aac .Get ("\u0051");
return &_ccbb ,nil ;};

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};

// ToPdfObject returns the PDF representation of the colorspace.
func (_ddadc *PdfPageResourcesColorspaces )ToPdfObject ()_bbe .PdfObject {_gfdea :=_bbe .MakeDict ();for _ ,_gffdg :=range _ddadc .Names {_gfdea .Set (_bbe .PdfObjectName (_gffdg ),_ddadc .Colorspaces [_gffdg ].ToPdfObject ());};if _ddadc ._cbcccb !=nil {_ddadc ._cbcccb .PdfObject =_gfdea ;
return _ddadc ._cbcccb ;};return _gfdea ;};

// ToPdfObject implements interface PdfModel.
func (_fcg *PdfBorderStyle )ToPdfObject ()_bbe .PdfObject {_adea :=_bbe .MakeDict ();if _fcg ._cafg !=nil {if _bcaa ,_cded :=_fcg ._cafg .(*_bbe .PdfIndirectObject );_cded {_bcaa .PdfObject =_adea ;};};_adea .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbe .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));
if _fcg .W !=nil {_adea .Set ("\u0057",_bbe .MakeFloat (*_fcg .W ));};if _fcg .S !=nil {_adea .Set ("\u0053",_bbe .MakeName (_fcg .S .GetPdfName ()));};if _fcg .D !=nil {_adea .Set ("\u0044",_bbe .MakeArrayFromIntegers (*_fcg .D ));};if _fcg ._cafg !=nil {return _fcg ._cafg ;
};return _adea ;};

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_aeefa *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _aeefa .AlternateSpace ==nil {return nil ,_cc .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};return _aeefa .AlternateSpace .ColorToRGB (color );};

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_eac *PdfAction )GetContext ()PdfModel {if _eac ==nil {return nil ;};return _eac ._gfc ;};

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_cfadg DefaultImageHandler )NewGrayImageFromGoImage (goimg _bf .Image )(*Image ,error ){_dgeae :=goimg .Bounds ();_ceda :=&Image {Width :int64 (_dgeae .Dx ()),Height :int64 (_dgeae .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _ggga :=goimg .(type ){case *_bf .Gray :if len (_ggga .Pix )!=_dgeae .Dx ()*_dgeae .Dy (){_cbcde ,_fbccf :=_gb .GrayConverter .Convert (goimg );
if _fbccf !=nil {return nil ,_fbccf ;};_ceda .Data =_cbcde .Pix ();}else {_ceda .Data =_ggga .Pix ;};case *_bf .Gray16 :_ceda .BitsPerComponent =16;if len (_ggga .Pix )!=_dgeae .Dx ()*_dgeae .Dy ()*2{_bbbca ,_eccd :=_gb .Gray16Converter .Convert (goimg );
if _eccd !=nil {return nil ,_eccd ;};_ceda .Data =_bbbca .Pix ();}else {_ceda .Data =_ggga .Pix ;};case _gb .Image :_bcgca :=_ggga .Base ();if _bcgca .ColorComponents ==1{_ceda .BitsPerComponent =int64 (_bcgca .BitsPerComponent );_ceda .Data =_bcgca .Data ;
return _ceda ,nil ;};_cceea ,_fdded :=_gb .GrayConverter .Convert (goimg );if _fdded !=nil {return nil ,_fdded ;};_ceda .Data =_cceea .Pix ();default:_gfaf ,_dbdd :=_gb .GrayConverter .Convert (goimg );if _dbdd !=nil {return nil ,_dbdd ;};_ceda .Data =_gfaf .Pix ();
};return _ceda ,nil ;};func _bfac (_gaa _bbe .PdfObject )(*PdfFilespec ,error ){if _gaa ==nil {return nil ,nil ;};return NewPdfFilespecFromObj (_gaa );};

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bbe .PdfObject ;};

// WriteToFile writes the output PDF to file.
func (_decbf *PdfWriter )WriteToFile (outputFilePath string )error {_febdb ,_acaa :=_cd .Create (outputFilePath );if _acaa !=nil {return _acaa ;};defer _febdb .Close ();return _decbf .Write (_febdb );};

// NewPdfShadingPatternType2 creates an empty shading pattern type 2 object.
func NewPdfShadingPatternType2 ()*PdfShadingPatternType2 {_dedb :=&PdfShadingPatternType2 {};_dedb .Matrix =_bbe .MakeArrayFromIntegers ([]int {1,0,0,1,0,0});_dedb .PdfPattern =&PdfPattern {};_dedb .PdfPattern .PatternType =int64 (*_bbe .MakeInteger (2));
_dedb .PdfPattern ._adcag =_dedb ;_dedb .PdfPattern ._agefc =_bbe .MakeIndirectObject (_bbe .MakeDict ());return _dedb ;};

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _bbe .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _bbe .PdfObject ;Contents _bbe .PdfObject ;
Rotate *int64 ;Group _bbe .PdfObject ;Thumb _bbe .PdfObject ;B _bbe .PdfObject ;Dur _bbe .PdfObject ;Trans _bbe .PdfObject ;AA _bbe .PdfObject ;Metadata _bbe .PdfObject ;PieceInfo _bbe .PdfObject ;StructParents _bbe .PdfObject ;ID _bbe .PdfObject ;PZ _bbe .PdfObject ;
SeparationInfo _bbe .PdfObject ;Tabs _bbe .PdfObject ;TemplateInstantiated _bbe .PdfObject ;PresSteps _bbe .PdfObject ;UserUnit _bbe .PdfObject ;VP _bbe .PdfObject ;Annots _bbe .PdfObject ;_eeeeb []*PdfAnnotation ;_gbegc *_bbe .PdfObjectDictionary ;_efggg *_bbe .PdfIndirectObject ;
_cagaa _bbe .PdfObjectDictionary ;_cbged *PdfReader ;};

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_dgafd :=&PdfColorspaceSpecialSeparation {};return _dgafd ;};

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_aacb *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_bcde :=_dfc .NewReader (img .getBase ());_degdf :=_gb .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_caba :=_dfc .NewWriter (_degdf );
_bbad :=_ab .Pow (2,float64 (img .BitsPerComponent ))-1;_ccca :=make ([]uint32 ,3);var (_adbcb uint32 ;ANorm ,X ,Y ,Z ,_daga ,_cbea ,_dgag float64 ;_gdcd error ;);for {_adbcb ,_gdcd =_bcde .ReadSample ();if _gdcd ==_geb .EOF {break ;}else if _gdcd !=nil {return img ,_gdcd ;
};ANorm =float64 (_adbcb )/_bbad ;X =_aacb .WhitePoint [0]*_ab .Pow (ANorm ,_aacb .Gamma );Y =_aacb .WhitePoint [1]*_ab .Pow (ANorm ,_aacb .Gamma );Z =_aacb .WhitePoint [2]*_ab .Pow (ANorm ,_aacb .Gamma );_daga =3.240479*X +-1.537150*Y +-0.498535*Z ;_cbea =-0.969256*X +1.875992*Y +0.041556*Z ;
_dgag =0.055648*X +-0.204043*Y +1.057311*Z ;_daga =_ab .Min (_ab .Max (_daga ,0),1.0);_cbea =_ab .Min (_ab .Max (_cbea ,0),1.0);_dgag =_ab .Min (_ab .Max (_dgag ,0),1.0);_ccca [0]=uint32 (_daga *_bbad );_ccca [1]=uint32 (_cbea *_bbad );_ccca [2]=uint32 (_dgag *_bbad );
if _gdcd =_caba .WriteSamples (_ccca );_gdcd !=nil {return img ,_gdcd ;};};return _gdbea (&_degdf ),nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_bg *PdfAction )GetContainingPdfObject ()_bbe .PdfObject {return _bg ._be };

// UpdatePage updates the `page` in the new revision if it has changed.
func (_ecg *PdfAppender )UpdatePage (page *PdfPage ){_ecg .updateObjectsDeep (page .ToPdfObject (),nil )};

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_ebgda :=NewPdfOutline ();_ebgda ._ebbdf =&_ebgda ;return _ebgda ;};func (_dfade *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _ffeg []*PdfFieldSignature ;for _ ,_agfda :=range _dfade .AllFields (){switch _dgdd :=_agfda .GetContext ().(type ){case *PdfFieldSignature :_afgeg :=_dgdd ;
_ffeg =append (_ffeg ,_afgeg );};};return _ffeg ;};

// XObjectType represents the type of an XObject.
type XObjectType int ;

// ToPdfObject implements interface PdfModel.
func (_fcac *PdfAnnotationHighlight )ToPdfObject ()_bbe .PdfObject {_fcac .PdfAnnotation .ToPdfObject ();_gcac :=_fcac ._dbg ;_gdfc :=_gcac .PdfObject .(*_bbe .PdfObjectDictionary );_fcac .PdfAnnotationMarkup .appendToPdfDictionary (_gdfc );_gdfc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbe .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));
_gdfc .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_fcac .QuadPoints );return _gcac ;};

// Val returns the value of the color.
func (_cefec *PdfColorCalGray )Val ()float64 {return float64 (*_cefec )};

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_gccc FieldFlag )Has (fl FieldFlag )bool {return (_gccc .Mask ()&fl .Mask ())> 0};

// SetAlpha sets the alpha layer for the image.
func (_fdgg *Image )SetAlpha (alpha []byte ){_fdgg ._gagad =alpha };

// NewPdfShadingPatternType3 creates an empty shading pattern type 3 object.
func NewPdfShadingPatternType3 ()*PdfShadingPatternType3 {_cgaaf :=&PdfShadingPatternType3 {};_cgaaf .Matrix =_bbe .MakeArrayFromIntegers ([]int {1,0,0,1,0,0});_cgaaf .PdfPattern =&PdfPattern {};_cgaaf .PdfPattern .PatternType =int64 (*_bbe .MakeInteger (2));
_cgaaf .PdfPattern ._adcag =_cgaaf ;_cgaaf .PdfPattern ._agefc =_bbe .MakeIndirectObject (_bbe .MakeDict ());return _cgaaf ;};

// GetFillImage get attached model.Image in push button.
func (_eadc *PdfFieldButton )GetFillImage ()*Image {if _eadc .IsPush (){return _eadc ._gfcgd ;};return nil ;};

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _bbe .PdfObject )(*PdfFilespec ,error ){_ceaff :=&PdfFilespec {};var _deefb *_bbe .PdfObjectDictionary ;if _eeaa ,_fadgc :=_bbe .GetIndirect (obj );_fadgc {_ceaff ._ffbgc =_eeaa ;_dadac ,_befbcd :=_bbe .GetDict (_eeaa .PdfObject );
if !_befbcd {_gcf .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_bbe .ErrTypeError ;};_deefb =_dadac ;}else if _becc ,_ecae :=_bbe .GetDict (obj );
_ecae {_ceaff ._ffbgc =_becc ;_deefb =_becc ;}else {_gcf .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_bbe .ErrTypeError ;};if _deefb ==nil {_gcf .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_cc .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _bdag :=_deefb .Get ("\u0054\u0079\u0070\u0065");_bdag !=nil {_gead ,_fcae :=_bdag .(*_bbe .PdfObjectName );if !_fcae {_gcf .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_bdag );
}else {if *_gead !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_gcf .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_gead );
};};};if _febdg :=_deefb .Get ("\u0046\u0053");_febdg !=nil {_ceaff .FS =_febdg ;};if _dccgc :=_deefb .Get ("\u0046");_dccgc !=nil {_ceaff .F =_dccgc ;};if _fdbfb :=_deefb .Get ("\u0055\u0046");_fdbfb !=nil {_ceaff .UF =_fdbfb ;};if _ggacb :=_deefb .Get ("\u0044\u004f\u0053");
_ggacb !=nil {_ceaff .DOS =_ggacb ;};if _ffebg :=_deefb .Get ("\u004d\u0061\u0063");_ffebg !=nil {_ceaff .Mac =_ffebg ;};if _febcf :=_deefb .Get ("\u0055\u006e\u0069\u0078");_febcf !=nil {_ceaff .Unix =_febcf ;};if _gaacg :=_deefb .Get ("\u0049\u0044");
_gaacg !=nil {_ceaff .ID =_gaacg ;};if _cfde :=_deefb .Get ("\u0056");_cfde !=nil {_ceaff .V =_cfde ;};if _deaea :=_deefb .Get ("\u0045\u0046");_deaea !=nil {_ceaff .EF =_deaea ;};if _dgfe :=_deefb .Get ("\u0052\u0046");_dgfe !=nil {_ceaff .RF =_dgfe ;
};if _caea :=_deefb .Get ("\u0044\u0065\u0073\u0063");_caea !=nil {_ceaff .Desc =_caea ;};if _ggecd :=_deefb .Get ("\u0043\u0049");_ggecd !=nil {_ceaff .CI =_ggecd ;};return _ceaff ,nil ;};

// NewPdfReaderWithOpts creates a new PdfReader for an input io.ReadSeeker interface
// with a ReaderOpts.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderWithOpts (rs _geb .ReadSeeker ,opts *ReaderOpts )(*PdfReader ,error ){const _cbebf ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0057\u0069\u0074\u0068O\u0070\u0074\u0073";return _cbab (rs ,opts ,true ,_cbebf );
};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_gdcdf *PdfFieldButton )GetType ()ButtonType {_cfdg :=ButtonTypeCheckbox ;if _gdcdf .Ff !=nil {if (uint32 (*_gdcdf .Ff )&FieldFlagPushbutton .Mask ())> 0{_cfdg =ButtonTypePush ;}else if (uint32 (*_gdcdf .Ff )&FieldFlagRadio .Mask ())> 0{_cfdg =ButtonTypeRadio ;
};};return _cfdg ;};

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_bgab FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_bgab .Mask ()|fl .Mask ())};

// SetFontByName sets the font specified by keyName to the given object.
func (_gbfe *PdfPageResources )SetFontByName (keyName _bbe .PdfObjectName ,obj _bbe .PdfObject )error {if _gbfe .Font ==nil {_gbfe .Font =_bbe .MakeDict ();};_gfcb ,_bfeca :=_bbe .TraceToDirectObject (_gbfe .Font ).(*_bbe .PdfObjectDictionary );if !_bfeca {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_bbe .TraceToDirectObject (_gbfe .Font ));
return _bbe .ErrTypeError ;};_gfcb .Set (keyName ,obj );return nil ;};

// ToInteger convert to an integer format.
func (_edcg *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_cbbf :=_ab .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_cbbf *_edcg .C ()),uint32 (_cbbf *_edcg .M ()),uint32 (_cbbf *_edcg .Y ()),uint32 (_cbbf *_edcg .K ())};};

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_cdb :=NewPdfAction ();_efb :=&PdfActionTrans {};_efb .PdfAction =_cdb ;_cdb .SetContext (_efb );return _efb ;};const (TrappedUnknown PdfInfoTrapped ="\u0055n\u006b\u006e\u006f\u0077\u006e";TrappedTrue PdfInfoTrapped ="\u0054\u0072\u0075\u0065";
TrappedFalse PdfInfoTrapped ="\u0046\u0061\u006cs\u0065";);

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_eff *_bbe .PdfIndirectObject ;};

// ToPdfObject implements interface PdfModel.
func (_ggg *PdfActionImportData )ToPdfObject ()_bbe .PdfObject {_ggg .PdfAction .ToPdfObject ();_bcc :=_ggg ._be ;_aec :=_bcc .PdfObject .(*_bbe .PdfObjectDictionary );_aec .SetIfNotNil ("\u0053",_bbe .MakeName (string (ActionTypeImportData )));if _ggg .F !=nil {_aec .Set ("\u0046",_ggg .F .ToPdfObject ());
};return _bcc ;};func _dcgdf (_ceeb *_bbe .PdfObjectDictionary )(*PdfShadingType7 ,error ){_cadcgg :=PdfShadingType7 {};_agbd :=_ceeb .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _agbd ==nil {_gcf .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_dcgfd ,_defdg :=_agbd .(*_bbe .PdfObjectInteger );if !_defdg {_gcf .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_agbd );
return nil ,_bbe .ErrTypeError ;};_cadcgg .BitsPerCoordinate =_dcgfd ;_agbd =_ceeb .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _agbd ==nil {_gcf .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_dcgfd ,_defdg =_agbd .(*_bbe .PdfObjectInteger );if !_defdg {_gcf .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_agbd );
return nil ,_bbe .ErrTypeError ;};_cadcgg .BitsPerComponent =_dcgfd ;_agbd =_ceeb .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _agbd ==nil {_gcf .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_dcgfd ,_defdg =_agbd .(*_bbe .PdfObjectInteger );if !_defdg {_gcf .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_agbd );
return nil ,_bbe .ErrTypeError ;};_cadcgg .BitsPerComponent =_dcgfd ;_agbd =_ceeb .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _agbd ==nil {_gcf .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_dfecc ,_defdg :=_agbd .(*_bbe .PdfObjectArray );if !_defdg {_gcf .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_agbd );
return nil ,_bbe .ErrTypeError ;};_cadcgg .Decode =_dfecc ;if _eggb :=_ceeb .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_eggb !=nil {_cadcgg .Function =[]PdfFunction {};if _cfbgc ,_gfgdf :=_eggb .(*_bbe .PdfObjectArray );_gfgdf {for _ ,_afcbg :=range _cfbgc .Elements (){_fdaba ,_fbba :=_bdce (_afcbg );
if _fbba !=nil {_gcf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fbba );return nil ,_fbba ;};_cadcgg .Function =append (_cadcgg .Function ,_fdaba );
};}else {_bbaebe ,_ebgac :=_bdce (_eggb );if _ebgac !=nil {_gcf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ebgac );return nil ,_ebgac ;
};_cadcgg .Function =append (_cadcgg .Function ,_bbaebe );};};return &_cadcgg ,nil ;};

// SetContext set the sub annotation (context).
func (_baeba *PdfShading )SetContext (ctx PdfModel ){_baeba ._cgge =ctx };

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _bbe .PdfObject ;RichMediaContent _bbe .PdfObject ;};func _cged ()string {_cccbdc .Lock ();defer _cccbdc .Unlock ();return _cbdba };

// ToPdfObject implements interface PdfModel.
func (_cbc *PdfActionURI )ToPdfObject ()_bbe .PdfObject {_cbc .PdfAction .ToPdfObject ();_dad :=_cbc ._be ;_fac :=_dad .PdfObject .(*_bbe .PdfObjectDictionary );_fac .SetIfNotNil ("\u0053",_bbe .MakeName (string (ActionTypeURI )));_fac .SetIfNotNil ("\u0055\u0052\u0049",_cbc .URI );
_fac .SetIfNotNil ("\u0049\u0073\u004da\u0070",_cbc .IsMap );return _dad ;};func (_fbf *PdfReader )newPdfActionMovieFromDict (_cggb *_bbe .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_cggb .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_cggb .Get ("\u0054"),Operation :_cggb .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;
};

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_gcdb *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_gcf .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_gcf .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );
_gcf .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_gcf .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );
_eabda ,_gfa :=_gb .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._gagad ,img ._eacbf );if _gfa !=nil {return Image {},_gfa ;};_dag ,_gfa :=_gb .NRGBAConverter .Convert (_eabda );if _gfa !=nil {return Image {},_gfa ;
};return _gdbea (_dag .Base ()),nil ;};

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_cccbdc .Lock ();defer _cccbdc .Unlock ();_dbagb =subject };

// AddCustomInfo adds a custom info into document info dictionary.
func (_dcdd *PdfInfo )AddCustomInfo (name string ,value string )error {if _dcdd ._fecbf ==nil {_dcdd ._fecbf =_bbe .MakeDict ();};if _ ,_cadg :=_ddaf [name ];_cadg {return _g .Errorf ("\u0063\u0061\u006e\u006e\u006ft\u0020\u0075\u0073\u0065\u0020\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064 \u0069\u006e\u0066\u006f\u0020\u006b\u0065\u0079\u0020\u0025\u0073\u0020\u0061\u0073\u0020\u0063\u0075\u0073\u0074\u006f\u006d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u006b\u0065y",name );
};_dcdd ._fecbf .SetIfNotNil (*_bbe .MakeName (name ),_bbe .MakeString (value ));return nil ;};

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_eegcba []byte )(_bfeacb int ,_eedbe error );};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_bfdgg *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_cc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dca :=vals [0];if _dca < 0.0||_dca > 1.0{_gcf .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_dca );
return nil ,ErrColorOutOfRange ;};_aeda :=NewPdfColorCalGray (_dca );return _aeda ,nil ;};

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_fcaaa :=&PdfOutline {_faabb :_bbe .MakeIndirectObject (_bbe .MakeDict ())};_fcaaa ._ebbdf =_fcaaa ;return _fcaaa ;};var (_cccbdc _f .Mutex ;_cbdba ="";_cebbd _ge .Time ;_bccba ="";_fcfgd ="";_abdac _ge .Time ;_aabd ="";
_dbagb ="";_geafc ="";);

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_cgeegg []byte ;_caedf []uint32 ;_ecfcf *_bbe .PdfObjectStream ;};

// StdFontName represents name of a standard font.
type StdFontName =_bfg .StdFontName ;

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_becg *PdfAcroForm )GetContainingPdfObject ()_bbe .PdfObject {return _becg ._agbef };

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_afag pdfFont };

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_eb :=NewPdfAction ();_bd :=&PdfActionRendition {};_bd .PdfAction =_eb ;_eb .SetContext (_bd );return _bd ;};var (ErrRequiredAttributeMissing =_cc .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
ErrInvalidAttribute =_cc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");ErrTypeCheck =_cc .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_gagc =_cc .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");
ErrEncrypted =_cc .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");ErrNoFont =_cc .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
ErrFontNotSupported =_cfc .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_bbe .ErrNotSupported );ErrType1CFontNotSupported =_cfc .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_bbe .ErrNotSupported );
ErrType3FontNotSupported =_cfc .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_bbe .ErrNotSupported );
ErrTTCmapNotSupported =_cfc .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_bbe .ErrNotSupported );
ErrSignNotEnoughSpace =_cfc .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
ErrSignNoCertificates =_cfc .Errorf ("\u0063\u006ful\u0064\u0020\u006eo\u0074\u0020\u0072\u0065tri\u0065ve\u0020\u0063\u0065\u0072\u0074\u0069\u0066ic\u0061\u0074\u0065\u0020\u0063\u0068\u0061i\u006e"););

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_fdb :=NewPdfAction ();_cfe :=&PdfActionGoToE {};_cfe .PdfAction =_fdb ;_fdb .SetContext (_cfe );return _cfe ;};

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_fg :=NewPdfAnnotation ();_fdbf :=&PdfAnnotationText {};_fdbf .PdfAnnotation =_fg ;_fdbf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fg .SetContext (_fdbf );return _fdbf ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_gfbb *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_bbe .PdfObject )(PdfColor ,error ){if _gfbb .Alternate ==nil {if _gfbb .N ==1{_acfa :=NewPdfColorspaceDeviceGray ();return _acfa .ColorFromPdfObjects (objects );}else if _gfbb .N ==3{_becbc :=NewPdfColorspaceDeviceRGB ();
return _becbc .ColorFromPdfObjects (objects );}else if _gfbb .N ==4{_fdaf :=NewPdfColorspaceDeviceCMYK ();return _fdaf .ColorFromPdfObjects (objects );}else {return nil ,_cc .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _gfbb .Alternate .ColorFromPdfObjects (objects );};

// PdfShadingPatternType3 is shading patterns that will use a Type 3 shading pattern (Radial).
type PdfShadingPatternType3 struct{*PdfPattern ;Shading *PdfShadingType3 ;Matrix *_bbe .PdfObjectArray ;ExtGState _bbe .PdfObject ;};

// NewPdfShadingType2 creates an empty shading type 2 dictionary.
func NewPdfShadingType2 ()*PdfShadingType2 {_ccfcg :=&PdfShadingType2 {};_ccfcg .PdfShading =&PdfShading {};_ccfcg .PdfShading ._eecbb =_bbe .MakeIndirectObject (_bbe .MakeDict ());_ccfcg .PdfShading ._cgge =_ccfcg ;return _ccfcg ;};

// PdfOutputIntent provides a means for matching the color characteristics of a PDF document with
// those of a target output device.
// Multiple PdfOutputIntents allows the production process to be customized to the expected workflow and the specific
// tools available.
type PdfOutputIntent struct{

// Type is an optional PDF object that this dictionary describes.
// If present, must be OutputIntent for an output intent dictionary.
Type string ;

// S defines the OutputIntent subtype which should match the standard used in given document i.e:
// for PDF/X use PdfOutputIntentTypeX.
S PdfOutputIntentType ;

// OutputCondition is an optional field that is identifying the intended output device or production condition in
// human-readable form. This is preferred method of defining such a string for presentation to the user.
OutputCondition string ;

// OutputConditionIdentifier is a required field identifying the intended output device or production condition in
// human or machine-readable form. If human-readable, this string may be used
// in lieu of an OutputCondition for presentation to the user.
// A typical value for this entry would be the name of a production condition  maintained
// in  an  industry-standard registry such  as the ICC Characterization Data Registry
// If the intended production condition is not a recognized standard, the value Custom is recommended for this entry.
// the DestOutputProfile entry defines the ICC profile, and the Info entry is used for further
// human-readable identification.
OutputConditionIdentifier string ;

// RegistryName is an optional string field (conventionally URI) identifying the registry in which the condition
// designated by OutputConditionIdentifier is defined.
RegistryName string ;

// Info is a required field if OutputConditionIdentifier does not specify a standard production condition.
// A human-readable text string containing additional information  or comments about intended
// target device or production condition.
Info string ;

// DestOutputProfile is required if OutputConditionIdentifier does not specify a standard production condition.
// It is an ICC profile stream defining the transformation from the PDF document's source colors to output device colorants.
DestOutputProfile []byte ;

// ColorComponents is the number of color components supported by given output profile.
ColorComponents int ;_agbec *_bbe .PdfObjectDictionary ;};

// String returns a string representation of PdfTransformParamsDocMDP.
func (_cagbf *PdfTransformParamsDocMDP )String ()string {return _g .Sprintf ("\u0025\u0073\u0020\u0050\u003a\u0020\u0025\u0073\u0020V\u003a\u0020\u0025\u0073",_cagbf .Type ,_cagbf .P ,_cagbf .V );};

// Register registers (caches) a model to primitive object relationship.
func (_ggcee *modelManager )Register (primitive _bbe .PdfObject ,model PdfModel ){_ggcee ._gbfdg [model ]=primitive ;_ggcee ._dccbf [primitive ]=model ;};

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_babd *_bbe .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_bbe .PdfObjectName ;Filter *_bbe .PdfObjectName ;SubFilter *_bbe .PdfObjectName ;Contents *_bbe .PdfObjectString ;Cert _bbe .PdfObject ;ByteRange *_bbe .PdfObjectArray ;Reference *_bbe .PdfObjectArray ;Changes *_bbe .PdfObjectArray ;Name *_bbe .PdfObjectString ;
M *_bbe .PdfObjectString ;Location *_bbe .PdfObjectString ;Reason *_bbe .PdfObjectString ;ContactInfo *_bbe .PdfObjectString ;R *_bbe .PdfObjectInteger ;V *_bbe .PdfObjectInteger ;PropBuild *_bbe .PdfObjectDictionary ;PropAuthTime *_bbe .PdfObjectInteger ;
PropAuthType *_bbe .PdfObjectName ;};const (FieldFlagClear FieldFlag =0;FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);FieldFlagNoExport FieldFlag =(2<<1);FieldFlagNoToggleToOff FieldFlag =(1<<14);FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);
FieldFlagRadiosInUnision FieldFlag =(1<<25);FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);FieldFlagFileSelect FieldFlag =(1<<20);FieldFlagDoNotScroll FieldFlag =(1<<23);FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<26);
FieldFlagDoNotSpellCheck FieldFlag =(1<<22);FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);FieldFlagSort FieldFlag =(1<<19);FieldFlagMultiSelect FieldFlag =(1<<21);FieldFlagCommitOnSelChange FieldFlag =(1<<27););

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_ecce *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _bbe .PdfObject ;NewWindow _bbe .PdfObject ;};

// String returns a string representation of the field.
func (_eecbc *PdfField )String ()string {if _dffdb ,_cggde :=_eecbc .ToPdfObject ().(*_bbe .PdfIndirectObject );_cggde {return _g .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_eecbc ._dabg ,_dffdb .PdfObject .String ());};return "";};

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_ff .SimpleEncoder ,error ){_babcf ,_acea :=_dfcc (basefont );if _acea !=nil {return nil ,nil ,_acea ;};_debbc ,_efed :=_babcf .Encoder ().(_ff .SimpleEncoder );
if !_efed {return nil ,nil ,_g .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_babcf .Encoder ());
};_beag :=make (map[rune ]_ff .GlyphName );for _afgea :=range alphabet {if _ ,_feec :=_debbc .RuneToCharcode (_afgea );!_feec {_ ,_cdbab :=_babcf ._gbafb .Read (_afgea );if !_cdbab {_gcf .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_afgea ,_afgea );
continue ;};_abccc ,_cdbab :=_ff .RuneToGlyph (_afgea );if !_cdbab {_gcf .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_afgea ,_afgea );continue ;};
if len (_beag )>=255{return nil ,nil ,_cc .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");
};_beag [_afgea ]=_abccc ;};};var (_bcaefb []_ff .CharCode ;_fdfac []_ff .CharCode ;);for _bgcc :=_ff .CharCode (1);_bgcc <=0xff;_bgcc ++{_eeee ,_agbge :=_debbc .CharcodeToRune (_bgcc );if !_agbge {_bcaefb =append (_bcaefb ,_bgcc );continue ;};if _ ,_agbge =alphabet [_eeee ];
!_agbge {_fdfac =append (_fdfac ,_bgcc );};};_bfbb :=append (_bcaefb ,_fdfac ...);if len (_bfbb )< len (_beag ){return nil ,nil ,_g .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_beag ),len (_bfbb ));
};_cffa :=make ([]rune ,0,len (_beag ));for _bbedb :=range _beag {_cffa =append (_cffa ,_bbedb );};_cg .Slice (_cffa ,func (_cadaf ,_caeaf int )bool {return _cffa [_cadaf ]< _cffa [_caeaf ]});_gaec :=make (map[_ff .CharCode ]_ff .GlyphName ,len (_cffa ));
for _ ,_fbbga :=range _cffa {_gafc :=_bfbb [0];_bfbb =_bfbb [1:];_gaec [_gafc ]=_beag [_fbbga ];};_debbc =_ff .ApplyDifferences (_debbc ,_gaec );_babcf .SetEncoder (_debbc );return &PdfFont {_afag :&_babcf },_debbc ,nil ;};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_dgacd *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {_cggfa :=_dgacd .fill (provider ,appGen );if _cggfa !=nil {return _cggfa ;};if _ ,_cebd :=provider .(FieldImageProvider );_cebd {_cggfa =_dgacd .fillImageWithAppearance (provider .(FieldImageProvider ),appGen );
};return _cggfa ;};

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_cccbdc .Lock ();defer _cccbdc .Unlock ();_aabd =producer };

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_eddc *PdfPageResources )SetXObjectByName (keyName _bbe .PdfObjectName ,stream *_bbe .PdfObjectStream )error {if _eddc .XObject ==nil {_eddc .XObject =_bbe .MakeDict ();};_fcace :=_bbe .TraceToDirectObject (_eddc .XObject );_ggbac ,_gecfa :=_fcace .(*_bbe .PdfObjectDictionary );
if !_gecfa {_gcf .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_eddc .XObject ,_fcace );return _cc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_ggbac .Set (keyName ,stream );return nil ;};func _adfbb (_geggb _bbe .PdfObject )(*fontFile ,error ){_gcf .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_geggb );
_dfdaa :=&fontFile {};_geggb =_bbe .TraceToDirectObject (_geggb );_fcegg ,_affa :=_geggb .(*_bbe .PdfObjectStream );if !_affa {_gcf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_geggb );
return nil ,_bbe .ErrTypeError ;};_cafaf :=_fcegg .PdfObjectDictionary ;_bdgdc ,_adfbc :=_bbe .DecodeStream (_fcegg );if _adfbc !=nil {return nil ,_adfbc ;};_fbbc ,_affa :=_bbe .GetNameVal (_cafaf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_affa {_dfdaa ._edfgg =_fbbc ;
if _fbbc =="\u0054\u0079\u0070\u0065\u0031\u0043"{_gcf .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");
return nil ,ErrType1CFontNotSupported ;};};_bbcb ,_ :=_bbe .GetIntVal (_cafaf .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_eeeg ,_ :=_bbe .GetIntVal (_cafaf .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _bbcb > len (_bdgdc ){_bbcb =len (_bdgdc );
};if _bbcb +_eeeg > len (_bdgdc ){_eeeg =len (_bdgdc )-_bbcb ;};_dafcd :=_bdgdc [:_bbcb ];var _egabf []byte ;if _eeeg > 0{_egabf =_bdgdc [_bbcb :_bbcb +_eeeg ];};if _bbcb > 0&&_eeeg > 0{_bfecb :=_dfdaa .loadFromSegments (_dafcd ,_egabf );if _bfecb !=nil {return nil ,_bfecb ;
};};return _dfdaa ,nil ;};

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_gebd :=NewPdfAnnotation ();_gcab :=&PdfAnnotationFileAttachment {};_gcab .PdfAnnotation =_gebd ;_gcab .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gebd .SetContext (_gcab );return _gcab ;
};var ImageHandling ImageHandler =DefaultImageHandler {};

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _ge .Time )(PdfDate ,error ){_egcef :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_cgbdg ,_ :=_fc .ParseInt (_egcef [1:3],10,32);_abdef ,_ :=_fc .ParseInt (_egcef [4:6],10,32);return PdfDate {_fbgcd :int64 (timeObj .Year ()),_adagcb :int64 (timeObj .Month ()),_ecbec :int64 (timeObj .Day ()),_fcffa :int64 (timeObj .Hour ()),_bafbb :int64 (timeObj .Minute ()),_gcffe :int64 (timeObj .Second ()),_fdgcgf :_egcef [0],_bdfdc :_cgbdg ,_degcc :_abdef },nil ;
};

// GetDocMDPPermission returns the DocMDP level of the restrictions
func (_cdbeg *PdfSignature )GetDocMDPPermission ()(_gfg .DocMDPPermission ,bool ){for _ ,_gbfdd :=range _cdbeg .Reference .Elements (){if _ffgaee ,_ffceb :=_bbe .GetDict (_gbfdd );_ffceb {if _beecg ,_baecb :=_bbe .GetNameVal (_ffgaee .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
_baecb &&_beecg =="\u0044\u006f\u0063\u004d\u0044\u0050"{if _aeedab ,_gebbd :=_bbe .GetDict (_ffgaee .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_gebbd {if P ,_dbfg :=_bbe .GetIntVal (_aeedab .Get ("\u0050"));
_dbfg {return _gfg .DocMDPPermission (P ),true ;};};};};};return 0,false ;};

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_acg :=NewPdfAnnotation ();_aad :=&PdfAnnotationCircle {};_aad .PdfAnnotation =_acg ;_aad .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_acg .SetContext (_aad );return _aad ;};func _agfgg (_gfea *_bbe .PdfIndirectObject ,_acdbc *_bbe .PdfObjectDictionary )(*DSS ,error ){if _gfea ==nil {_gfea =_bbe .MakeIndirectObject (nil );
};_gfea .PdfObject =_bbe .MakeDict ();_fffe :=map[string ]*VRI {};if _bega ,_fbcc :=_bbe .GetDict (_acdbc .Get ("\u0056\u0052\u0049"));_fbcc {for _ ,_cecc :=range _bega .Keys (){if _afda ,_fdef :=_bbe .GetDict (_bega .Get (_cecc ));_fdef {_fffe [_df .ToUpper (_cecc .String ())]=_gaee (_afda );
};};};return &DSS {Certs :_bddcg (_acdbc .Get ("\u0043\u0065\u0072t\u0073")),OCSPs :_bddcg (_acdbc .Get ("\u004f\u0043\u0053P\u0073")),CRLs :_bddcg (_acdbc .Get ("\u0043\u0052\u004c\u0073")),VRI :_fffe ,_gcba :_gfea },nil ;};

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_ddaa :=NewPdfAction ();_abg :=&PdfActionURI {};_abg .PdfAction =_ddaa ;_ddaa .SetContext (_abg );return _abg ;};

// ToPdfObject implements interface PdfModel.
func (_acdg *PdfAnnotationCaret )ToPdfObject ()_bbe .PdfObject {_acdg .PdfAnnotation .ToPdfObject ();_adcc :=_acdg ._dbg ;_cegf :=_adcc .PdfObject .(*_bbe .PdfObjectDictionary );_acdg .PdfAnnotationMarkup .appendToPdfDictionary (_cegf );_cegf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbe .MakeName ("\u0043\u0061\u0072e\u0074"));
_cegf .SetIfNotNil ("\u0052\u0044",_acdg .RD );_cegf .SetIfNotNil ("\u0053\u0079",_acdg .Sy );return _adcc ;};func (_cab *PdfAppender )addNewObject (_ccda _bbe .PdfObject ){if _ ,_gbeg :=_cab ._ggee [_ccda ];!_gbeg {_cab ._cada =append (_cab ._cada ,_ccda );
_cab ._ggee [_ccda ]=struct{}{};};};

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _bbe .PdfObject ;};

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_fcead *PdfField )GetContext ()PdfModel {return _fcead ._dabg };

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_bbe .PdfObjectInteger ;BitsPerComponent *_bbe .PdfObjectInteger ;BitsPerFlag *_bbe .PdfObjectInteger ;Decode *_bbe .PdfObjectArray ;Function []PdfFunction ;};var _ pdfFont =(*pdfCIDFontType2 )(nil );
var _dafffd =false ;func (_fcdcb *PdfWriter )setHashIDs (_cfcgca _da .Hash )error {_cdcec :=_cfcgca .Sum (nil );if _fcdcb ._agbeb ==""{_fcdcb ._agbeb =_gf .EncodeToString (_cdcec [:8]);};_fcdcb .setDocumentIDs (_fcdcb ._agbeb ,_gf .EncodeToString (_cdcec [8:]));
return nil ;};

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_dfefa PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_bbe .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_aacf []_bbe .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_ccag []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};func (_fbgf *pdfFontSimple )baseFields ()*fontCommon {return &_fbgf .fontCommon };

// NewReaderOpts generates a default `ReaderOpts` instance.
func NewReaderOpts ()*ReaderOpts {return &ReaderOpts {Password :"",LazyLoad :true }};

// ToPdfObject implements interface PdfModel.
func (_gaeb *PdfAnnotationLink )ToPdfObject ()_bbe .PdfObject {_gaeb .PdfAnnotation .ToPdfObject ();_edc :=_gaeb ._dbg ;_dfdf :=_edc .PdfObject .(*_bbe .PdfObjectDictionary );_dfdf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbe .MakeName ("\u004c\u0069\u006e\u006b"));
if _gaeb ._ecb !=nil &&_gaeb ._ecb ._gfc !=nil {_dfdf .Set ("\u0041",_gaeb ._ecb ._gfc .ToPdfObject ());}else if _gaeb .A !=nil {_dfdf .Set ("\u0041",_gaeb .A );};_dfdf .SetIfNotNil ("\u0044\u0065\u0073\u0074",_gaeb .Dest );_dfdf .SetIfNotNil ("\u0048",_gaeb .H );
_dfdf .SetIfNotNil ("\u0050\u0041",_gaeb .PA );_dfdf .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_gaeb .QuadPoints );_dfdf .SetIfNotNil ("\u0042\u0053",_gaeb .BS );return _edc ;};

// PageProcessCallback callback function used in page loading
// that could be used to modify the page content.
//
// If an error is returned, the `ToWriter` process would fail.
//
// This callback, if defined, will take precedence over `PageCallback` callback.
type PageProcessCallback func (_fgddb int ,_cdcab *PdfPage )error ;func _gdbea (_adfbbf *_gb .ImageBase )(_gaced Image ){_gaced .Width =int64 (_adfbbf .Width );_gaced .Height =int64 (_adfbbf .Height );_gaced .BitsPerComponent =int64 (_adfbbf .BitsPerComponent );
_gaced .ColorComponents =_adfbbf .ColorComponents ;_gaced .Data =_adfbbf .Data ;_gaced ._eacbf =_adfbbf .Decode ;_gaced ._gagad =_adfbbf .Alpha ;return _gaced ;};

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _bbe .PdfObject ;BS _bbe .PdfObject ;};

// IsShading specifies if the pattern is a shading pattern.
func (_ccfc *PdfPattern )IsShading ()bool {return _ccfc .PatternType ==2};func (_dfbe *PdfReader )newPdfAnnotationUnderlineFromDict (_gcdg *_bbe .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_bfb :=PdfAnnotationUnderline {};_gac ,_gbg :=_dfbe .newPdfAnnotationMarkupFromDict (_gcdg );
if _gbg !=nil {return nil ,_gbg ;};_bfb .PdfAnnotationMarkup =_gac ;_bfb .QuadPoints =_gcdg .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_bfb ,nil ;};func (_ddfega *DSS )add (_ffef *[]*_bbe .PdfObjectStream ,_afbfc map[string ]*_bbe .PdfObjectStream ,_edagb [][]byte )([]*_bbe .PdfObjectStream ,error ){_dabcb :=make ([]*_bbe .PdfObjectStream ,0,len (_edagb ));
for _ ,_debg :=range _edagb {_faffd ,_dgbg :=_gaegbd (_debg );if _dgbg !=nil {return nil ,_dgbg ;};_afgc ,_gaae :=_afbfc [string (_faffd )];if !_gaae {_afgc ,_dgbg =_bbe .MakeStream (_debg ,_bbe .NewRawEncoder ());if _dgbg !=nil {return nil ,_dgbg ;};_afbfc [string (_faffd )]=_afgc ;
*_ffef =append (*_ffef ,_afgc );};_dabcb =append (_dabcb ,_afgc );};return _dabcb ,nil ;};

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_bbe .PdfObjectInteger ;BitsPerComponent *_bbe .PdfObjectInteger ;BitsPerFlag *_bbe .PdfObjectInteger ;Decode *_bbe .PdfObjectArray ;Function []PdfFunction ;};

// Items returns all children outline items.
func (_cbegdf *Outline )Items ()[]*OutlineItem {return _cbegdf .Entries };var (CourierName =_bfg .CourierName ;CourierBoldName =_bfg .CourierBoldName ;CourierObliqueName =_bfg .CourierObliqueName ;CourierBoldObliqueName =_bfg .CourierBoldObliqueName ;HelveticaName =_bfg .HelveticaName ;
HelveticaBoldName =_bfg .HelveticaBoldName ;HelveticaObliqueName =_bfg .HelveticaObliqueName ;HelveticaBoldObliqueName =_bfg .HelveticaBoldObliqueName ;SymbolName =_bfg .SymbolName ;ZapfDingbatsName =_bfg .ZapfDingbatsName ;TimesRomanName =_bfg .TimesRomanName ;
TimesBoldName =_bfg .TimesBoldName ;TimesItalicName =_bfg .TimesItalicName ;TimesBoldItalicName =_bfg .TimesBoldItalicName ;);

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_faabb *_bbe .PdfIndirectObject ;};

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_bbe .PdfObject ,error );};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_ccdf *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_bbe .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_cc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_abfe ,_fcacg :=_bbe .GetNumbersAsFloat (objects );
if _fcacg !=nil {return nil ,_fcacg ;};return _ccdf .ColorFromFloats (_abfe );};

// BaseFont returns the font's "BaseFont" field.
func (_fcegd *PdfFont )BaseFont ()string {return _fcegd .baseFields ()._ffdd };func _cecbe (_babca *_bbe .PdfObjectDictionary ,_fbgb *fontCommon )(*pdfCIDFontType0 ,error ){if _fbgb ._cafed !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_gcf .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_fbgb );
return nil ,_bbe .ErrRangeError ;};_aaagg :=_gfdd (_fbgb );_accc ,_fdbdg :=_bbe .GetDict (_babca .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_fdbdg {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_fbgb );
return nil ,ErrRequiredAttributeMissing ;};_aaagg .CIDSystemInfo =_accc ;_aaagg .DW =_babca .Get ("\u0044\u0057");_aaagg .W =_babca .Get ("\u0057");_aaagg .DW2 =_babca .Get ("\u0044\u0057\u0032");_aaagg .W2 =_babca .Get ("\u0057\u0032");_aaagg ._eege =1000.0;
if _ceace ,_eeaeb :=_bbe .GetNumberAsFloat (_aaagg .DW );_eeaeb ==nil {_aaagg ._eege =_ceace ;};_gefc ,_bbega :=_gfgfe (_aaagg .W );if _bbega !=nil {return nil ,_bbega ;};if _gefc ==nil {_gefc =map[_ff .CharCode ]float64 {};};_aaagg ._cedcg =_gefc ;return _aaagg ,nil ;
};

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_ffea *_bbe .PdfIndirectObject ;};func (_afbd *PdfWriter )writeDocumentVersion (){if _afbd ._degbe {_afbd .writeString ("\u000a");}else {_afbd .writeString (_g .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_afbd ._dfadc .Major ,_afbd ._dfadc .Minor ));
_afbd .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");};};

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//      f(x) = y_0, ..., y_(n-1)
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_aabe *_bbe .PdfIndirectObject ;};

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_deec *Image )GetParamsDict ()*_bbe .PdfObjectDictionary {_dbagd :=_bbe .MakeDict ();_dbagd .Set ("\u0057\u0069\u0064t\u0068",_bbe .MakeInteger (_deec .Width ));_dbagd .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_bbe .MakeInteger (_deec .Height ));
_dbagd .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_bbe .MakeInteger (int64 (_deec .ColorComponents )));_dbagd .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bbe .MakeInteger (_deec .BitsPerComponent ));
return _dbagd ;};func (_ebcf *PdfAcroForm )filteredFields (_bebb FieldFilterFunc ,_ddce bool )[]*PdfField {if _ebcf ==nil {return nil ;};return _effga (_ebcf .Fields ,_bebb ,_ddce );};

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _ge .Time ){_cccbdc .Lock ();defer _cccbdc .Unlock ();_cebbd =creationDate ;};

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_adec *PdfPage )AddContentStreamByString (contentStr string )error {_dgge ,_dcaef :=_bbe .MakeStream ([]byte (contentStr ),_bbe .NewFlateEncoder ());if _dcaef !=nil {return _dcaef ;};if _adec .Contents ==nil {_adec .Contents =_dgge ;}else {_ffadb :=_bbe .TraceToDirectObject (_adec .Contents );
_bbdbf ,_gfga :=_ffadb .(*_bbe .PdfObjectArray );if !_gfga {_bbdbf =_bbe .MakeArray (_ffadb );};_bbdbf .Append (_dgge );_adec .Contents =_bbdbf ;};return nil ;};

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_cac :=NewPdfAnnotation ();_gggdd :=&PdfAnnotationPolygon {};_gggdd .PdfAnnotation =_cac ;_gggdd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cac .SetContext (_gggdd );return _gggdd ;};

// NewDSS returns a new DSS dictionary.
func NewDSS ()*DSS {return &DSS {_gcba :_bbe .MakeIndirectObject (_bbe .MakeDict ()),VRI :map[string ]*VRI {}};};

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_afee *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_dgaf ,_ceed :=color .(*PdfColorDeviceCMYK );if !_ceed {_gcf .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");
return nil ,_cc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_efcc :=_dgaf .C ();_gdcf :=_dgaf .M ();_dfcb :=_dgaf .Y ();_ccac :=_dgaf .K ();_efcc =_efcc *(1-_ccac )+_ccac ;_gdcf =_gdcf *(1-_ccac )+_ccac ;
_dfcb =_dfcb *(1-_ccac )+_ccac ;_bgbgg :=1-_efcc ;_fefd :=1-_gdcf ;_gbegb :=1-_dfcb ;return NewPdfColorDeviceRGB (_bgbgg ,_fefd ,_gbegb ),nil ;};func (_eggbe *PdfWriter )writeObject (_bbeca int ,_aagbe _bbe .PdfObject ){_gcf .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_bbeca );
if _acec ,_afcadf :=_aagbe .(*_bbe .PdfIndirectObject );_afcadf {_eggbe ._cffgb [_bbeca ]=crossReference {Type :1,Offset :_eggbe ._dccgd ,Generation :_acec .GenerationNumber };_bcgaa :=_g .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_bbeca );
if _dcbbe ,_gdaa :=_acec .PdfObject .(*pdfSignDictionary );_gdaa {_dcbbe ._fegcb =_eggbe ._dccgd +int64 (len (_bcgaa ));};if _acec .PdfObject ==nil {_gcf .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");
_acec .PdfObject =_bbe .MakeNull ();};_bcgaa +=_acec .PdfObject .WriteString ();_bcgaa +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_eggbe .writeString (_bcgaa );return ;};if _bbcd ,_gbage :=_aagbe .(*_bbe .PdfObjectStream );_gbage {_eggbe ._cffgb [_bbeca ]=crossReference {Type :1,Offset :_eggbe ._dccgd ,Generation :_bbcd .GenerationNumber };
_aeced :=_g .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_bbeca );_aeced +=_bbcd .PdfObjectDictionary .WriteString ();_aeced +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_eggbe .writeString (_aeced );_eggbe .writeBytes (_bbcd .Stream );
_eggbe .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _eeba ,_abaff :=_aagbe .(*_bbe .PdfObjectStreams );_abaff {_eggbe ._cffgb [_bbeca ]=crossReference {Type :1,Offset :_eggbe ._dccgd ,Generation :_eeba .GenerationNumber };
_dbagg :=_g .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_bbeca );var _afbcd []string ;var _ceceb string ;var _cdebg int64 ;for _fada ,_dgdag :=range _eeba .Elements (){_bdfdcc ,_eaafgf :=_dgdag .(*_bbe .PdfIndirectObject );if !_eaafgf {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_bbeca ,_dgdag );
continue ;};_dbfef :=_bdfdcc .PdfObject .WriteString ()+"\u0020";_ceceb =_ceceb +_dbfef ;_afbcd =append (_afbcd ,_g .Sprintf ("\u0025\u0064\u0020%\u0064",_bdfdcc .ObjectNumber ,_cdebg ));_eggbe ._cffgb [int (_bdfdcc .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_bbeca ,Index :_fada };
_cdebg =_cdebg +int64 (len ([]byte (_dbfef )));};_cbgdd :=_df .Join (_afbcd ,"\u0020")+"\u0020";_bebff :=_bbe .NewFlateEncoder ();_bbdbg :=_bebff .MakeStreamDict ();_bbdbg .Set (_bbe .PdfObjectName ("\u0054\u0079\u0070\u0065"),_bbe .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));
_ceebb :=int64 (_eeba .Len ());_bbdbg .Set (_bbe .PdfObjectName ("\u004e"),_bbe .MakeInteger (_ceebb ));_cgdbd :=int64 (len (_cbgdd ));_bbdbg .Set (_bbe .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_bbe .MakeInteger (_cgdbd ));_gfdcb ,_ :=_bebff .EncodeBytes ([]byte (_cbgdd +_ceceb ));
_cebae :=int64 (len (_gfdcb ));_bbdbg .Set (_bbe .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_bbe .MakeInteger (_cebae ));_dbagg +=_bbdbg .WriteString ();_dbagg +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_eggbe .writeString (_dbagg );
_eggbe .writeBytes (_gfdcb );_eggbe .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_eggbe .writeString (_aagbe .WriteString ());};

// NewPermissions returns a new permissions object.
func NewPermissions (docMdp *PdfSignature )*Permissions {_cfcgcc :=Permissions {};_cfcgcc .DocMDP =docMdp ;_ecfgbg :=_bbe .MakeDict ();_ecfgbg .Set ("\u0044\u006f\u0063\u004d\u0044\u0050",docMdp .ToPdfObject ());_cfcgcc ._bddcd =_ecfgbg ;return &_cfcgcc ;
};

// GetBorderWidth returns the border style's width.
func (_fge *PdfBorderStyle )GetBorderWidth ()float64 {if _fge .W ==nil {return 1;};return *_fge .W ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_feedf pdfFontType0 )GetRuneMetrics (r rune )(_bfg .CharMetrics ,bool ){if _feedf .DescendantFont ==nil {_gcf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_feedf );
return _bfg .CharMetrics {},false ;};return _feedf .DescendantFont .GetRuneMetrics (r );};

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_ffgcd *_bbe .PdfParser ;_effc _bbe .PdfObject ;_feddd *_bbe .PdfIndirectObject ;_bgded *_bbe .PdfObjectDictionary ;_cfgf []*_bbe .PdfIndirectObject ;PageList []*PdfPage ;_defad int ;_cagcc *_bbe .PdfObjectDictionary ;_adeab *PdfOutlineTreeNode ;
AcroForm *PdfAcroForm ;DSS *DSS ;Rotate *int64 ;_fabc *Permissions ;_eebfa map[*PdfReader ]*PdfReader ;_dccdf []*PdfReader ;_ffgae *modelManager ;_egggg bool ;_beaad map[_bbe .PdfObject ]struct{};_bdfdg _geb .ReadSeeker ;_egaee string ;_dbae bool ;_cacaab *ReaderOpts ;
_aded bool ;};

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_cfad *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _cfad .flattenFieldsWithOpts (allannots ,appgen ,nil );};

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _bbe .StreamEncoder )(*XObjectImage ,error ){_bfbcg :=NewXObjectImage ();return UpdateXObjectImageFromImage (_bfbcg ,img ,cs ,encoder );};func _bedbc ()string {return _gcf .Version };
func (_agac *pdfFontType0 )bytesToCharcodes (_abcf []byte )([]_ff .CharCode ,bool ){if _agac ._cfeba ==nil {return nil ,false ;};_bged ,_cffaa :=_agac ._cfeba .BytesToCharcodes (_abcf );if !_cffaa {return nil ,false ;};_gfgf :=make ([]_ff .CharCode ,len (_bged ));
for _cage ,_dbda :=range _bged {_gfgf [_cage ]=_ff .CharCode (_dbda );};return _gfgf ,true ;};func (_ecffc *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";};

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_gcdc *PdfColorspaceSpecialIndexed )ToPdfObject ()_bbe .PdfObject {_cbef :=_bbe .MakeArray (_bbe .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_cbef .Append (_gcdc .Base .ToPdfObject ());_cbef .Append (_bbe .MakeInteger (int64 (_gcdc .HiVal )));
_cbef .Append (_gcdc .Lookup );if _gcdc ._feaa !=nil {_gcdc ._feaa .PdfObject =_cbef ;return _gcdc ._feaa ;};return _cbef ;};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_cccbdc .Lock ();defer _cccbdc .Unlock ();_geafc =title };

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_gbdf *PdfPageResources )GetExtGState (keyName _bbe .PdfObjectName )(_bbe .PdfObject ,bool ){if _gbdf .ExtGState ==nil {return nil ,false ;};_abeec ,_gadc :=_bbe .TraceToDirectObject (_gbdf .ExtGState ).(*_bbe .PdfObjectDictionary );if !_gadc {_gcf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gbdf .ExtGState );
return nil ,false ;};if _decdea :=_abeec .Get (keyName );_decdea !=nil {return _decdea ,true ;};return nil ,false ;};

// PdfColorPatternType3 represents a color shading pattern type 3 (Radial).
type PdfColorPatternType3 struct{Color PdfColor ;PatternName _bbe .PdfObjectName ;};func (_dcec *PdfReader )newPdfActionSetOCGStateFromDict (_bagf *_bbe .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_bagf .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_bagf .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;
};

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_bcba *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _cbegf []*PdfField ;_bddfe :=map[*_bbe .PdfIndirectObject ]struct{}{};for _ ,_fbacg :=range _bcba .PageList {_egegf ,_ccacg :=_fbacg .GetAnnotations ();if _ccacg !=nil {return _ccacg ;
};for _ ,_fafgf :=range _egegf {var _affgb *PdfField ;switch _adcgb :=_fafgf .GetContext ().(type ){case *PdfAnnotationWidget :if _adcgb ._abdd !=nil {_affgb =_adcgb ._abdd ;break ;};if _dfccf ,_adcaa :=_bbe .GetIndirect (_adcgb .Parent );_adcaa {_affgb ,_ccacg =_bcba .newPdfFieldFromIndirectObject (_dfccf ,nil );
if _ccacg ==nil {break ;};_gcf .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_dfccf ,_ccacg );
};if _adcgb ._dbg !=nil {_affgb ,_ccacg =_bcba .newPdfFieldFromIndirectObject (_adcgb ._dbg ,nil );if _ccacg ==nil {break ;};_gcf .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_adcgb ._dbg ,_ccacg );
};};if _affgb ==nil {continue ;};if _ ,_bcfd :=_bddfe [_affgb ._acga ];_bcfd {continue ;};_bddfe [_affgb ._acga ]=struct{}{};_cbegf =append (_cbegf ,_affgb );};};if len (_cbegf )==0{return nil ;};if _bcba .AcroForm ==nil {_bcba .AcroForm =NewPdfAcroForm ();
};_bcba .AcroForm .Fields =&_cbegf ;return nil ;};

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_bgcd :=NewPdfAnnotation ();_ddc :=&PdfAnnotationProjection {};_ddc .PdfAnnotation =_bgcd ;_ddc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bgcd .SetContext (_ddc );return _ddc ;};

// NewPdfTransformParamsDocMDP create a PdfTransformParamsDocMDP with the specific permissions.
func NewPdfTransformParamsDocMDP (permission _gfg .DocMDPPermission )*PdfTransformParamsDocMDP {return &PdfTransformParamsDocMDP {Type :_bbe .MakeName ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"),P :_bbe .MakeInteger (int64 (permission )),V :_bbe .MakeName ("\u0031\u002e\u0032")};
};

// ToPdfObject returns a PDF object representation of the outline item.
func (_bdfc *OutlineItem )ToPdfObject ()_bbe .PdfObject {_gbbcf ,_ :=_bdfc .ToPdfOutlineItem ();return _gbbcf .ToPdfObject ();};

// GetNumComponents returns the number of color components (1 for CalGray).
func (_dddbg *PdfColorCalGray )GetNumComponents ()int {return 1};

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1. Return a value the /Widths array (charWidths) if there is one.
//  2. If the font has the same name as a standard 14 font then return width=250.
//  3. Otherwise return no match and let the caller substitute a default.
func (_bbffe pdfFontSimple )GetCharMetrics (code _ff .CharCode )(_bfg .CharMetrics ,bool ){if _fdgdd ,_dedf :=_bbffe ._dbba [code ];_dedf {return _bfg .CharMetrics {Wx :_fdgdd },true ;};if _bfg .IsStdFont (_bfg .StdFontName (_bbffe ._ffdd )){return _bfg .CharMetrics {Wx :250},true ;
};return _bfg .CharMetrics {},false ;};func _fggb (_dgecg *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_dgecg }};

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_agfc *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _agfc .Alternate ==nil {_gcf .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _agfc .N ==1{_gcf .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_deae :=NewPdfColorspaceDeviceGray ();return _deae .ImageToRGB (img );}else if _agfc .N ==3{_gcf .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return img ,nil ;}else if _agfc .N ==4{_gcf .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_dfff :=NewPdfColorspaceDeviceCMYK ();return _dfff .ImageToRGB (img );}else {return img ,_cc .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_gcf .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_agfc );
_dbfb ,_dfdea :=_agfc .Alternate .ImageToRGB (img );_gcf .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_gcf .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_dbfb );
return _dbfb ,_dfdea ;};

// SetBorderWidth sets the style's border width.
func (_edgc *PdfBorderStyle )SetBorderWidth (width float64 ){_edgc .W =&width };

// GetNumComponents returns the number of color components (1 for grayscale).
func (_bbbe *PdfColorDeviceGray )GetNumComponents ()int {return 1};

// DSS represents a Document Security Store dictionary.
// The DSS dictionary contains both global and signature specific validation
// information. The certificates and revocation data in the `Certs`, `OCSPs`,
// and `CRLs` fields can be used to validate any signature in the document.
// Additionally, the VRI entry contains validation data per signature.
// The keys in the VRI entry are calculated as upper(hex(sha1(sig.Contents))).
// The values are VRI dictionaries containing certificates and revocation
// information used for validating a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type DSS struct{_gcba *_bbe .PdfIndirectObject ;Certs []*_bbe .PdfObjectStream ;OCSPs []*_bbe .PdfObjectStream ;CRLs []*_bbe .PdfObjectStream ;VRI map[string ]*VRI ;_egdd map[string ]*_bbe .PdfObjectStream ;_fcdf map[string ]*_bbe .PdfObjectStream ;_agef map[string ]*_bbe .PdfObjectStream ;
};func (_acbg *pdfFontType3 )getFontDescriptor ()*PdfFontDescriptor {return _acbg ._abdgdb };

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_cadedf []_bbe .PdfObject )([]_bbe .PdfObject ,error );};

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_babea *_bbe .PdfIndirectObject ;};func (_fgae *PdfFont )baseFields ()*fontCommon {if _fgae ._afag ==nil {_gcf .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");
return nil ;};return _fgae ._afag .baseFields ();};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _bbe .PdfObject ;MK _bbe .PdfObject ;A _bbe .PdfObject ;AA _bbe .PdfObject ;};

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_bbe .PdfObjectArray ;Domain *_bbe .PdfObjectArray ;Function []PdfFunction ;Extend *_bbe .PdfObjectArray ;};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_efddd *Image )GetSamples ()[]uint32 {_cacgb :=_dfc .ResampleBytes (_efddd .Data ,int (_efddd .BitsPerComponent ));if _efddd .BitsPerComponent < 8{_cacgb =_efddd .samplesTrimPadding (_cacgb );};_beaa :=int (_efddd .Width )*int (_efddd .Height )*_efddd .ColorComponents ;
if len (_cacgb )< _beaa {_gcf .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_cacgb ),_beaa );
return _cacgb ;}else if len (_cacgb )> _beaa {_gcf .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_cacgb ),_beaa );
_cacgb =_cacgb [:_beaa ];};return _cacgb ;};func (_cdaa *PdfReader )newPdfAnnotationCircleFromDict (_fdf *_bbe .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_cbag :=PdfAnnotationCircle {};_ggaa ,_gcd :=_cdaa .newPdfAnnotationMarkupFromDict (_fdf );
if _gcd !=nil {return nil ,_gcd ;};_cbag .PdfAnnotationMarkup =_ggaa ;_cbag .BS =_fdf .Get ("\u0042\u0053");_cbag .IC =_fdf .Get ("\u0049\u0043");_cbag .BE =_fdf .Get ("\u0042\u0045");_cbag .RD =_fdf .Get ("\u0052\u0044");return &_cbag ,nil ;};

// ToPdfObject returns the PDF representation of the function.
func (_abbfc *PdfFunctionType4 )ToPdfObject ()_bbe .PdfObject {_gfced :=_abbfc ._aaagc ;if _gfced ==nil {_abbfc ._aaagc =&_bbe .PdfObjectStream {};_gfced =_abbfc ._aaagc ;};_gbgfg :=_bbe .MakeDict ();_gbgfg .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bbe .MakeInteger (4));
_fegbg :=&_bbe .PdfObjectArray {};for _ ,_bbce :=range _abbfc .Domain {_fegbg .Append (_bbe .MakeFloat (_bbce ));};_gbgfg .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fegbg );_dgagc :=&_bbe .PdfObjectArray {};for _ ,_gefa :=range _abbfc .Range {_dgagc .Append (_bbe .MakeFloat (_gefa ));
};_gbgfg .Set ("\u0052\u0061\u006eg\u0065",_dgagc );if _abbfc ._cefed ==nil &&_abbfc .Program !=nil {_abbfc ._cefed =[]byte (_abbfc .Program .String ());};_gbgfg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bbe .MakeInteger (int64 (len (_abbfc ._cefed ))));
_gfced .Stream =_abbfc ._cefed ;_gfced .PdfObjectDictionary =_gbgfg ;return _gfced ;};func (_geccf *DSS )generateHashMap (_bbfdc []*_bbe .PdfObjectStream )(map[string ]*_bbe .PdfObjectStream ,error ){_ggdfc :=map[string ]*_bbe .PdfObjectStream {};for _ ,_gdgd :=range _bbfdc {_bage ,_bebd :=_bbe .DecodeStream (_gdgd );
if _bebd !=nil {return nil ,_bebd ;};_eccf ,_bebd :=_gaegbd (_bage );if _bebd !=nil {return nil ,_bebd ;};_ggdfc [string (_eccf )]=_gdgd ;};return _ggdfc ,nil ;};func (_cadac *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _cadac ._abdgdb ==nil &&_cadac .DescendantFont !=nil {return _cadac .DescendantFont .FontDescriptor ();
};return _cadac ._abdgdb ;};

// ToPdfObject implements interface PdfModel.
func (_gdaf *PdfActionMovie )ToPdfObject ()_bbe .PdfObject {_gdaf .PdfAction .ToPdfObject ();_ddf :=_gdaf ._be ;_bgc :=_ddf .PdfObject .(*_bbe .PdfObjectDictionary );_bgc .SetIfNotNil ("\u0053",_bbe .MakeName (string (ActionTypeMovie )));_bgc .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_gdaf .Annotation );
_bgc .SetIfNotNil ("\u0054",_gdaf .T );_bgc .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_gdaf .Operation );return _ddf ;};

// ToPdfObject convert PdfInfo to pdf object.
func (_fcdg *PdfInfo )ToPdfObject ()_bbe .PdfObject {_acfc :=_bbe .MakeDict ();_acfc .SetIfNotNil ("\u0054\u0069\u0074l\u0065",_fcdg .Title );_acfc .SetIfNotNil ("\u0041\u0075\u0074\u0068\u006f\u0072",_fcdg .Author );_acfc .SetIfNotNil ("\u0053u\u0062\u006a\u0065\u0063\u0074",_fcdg .Subject );
_acfc .SetIfNotNil ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_fcdg .Keywords );_acfc .SetIfNotNil ("\u0043r\u0065\u0061\u0074\u006f\u0072",_fcdg .Creator );_acfc .SetIfNotNil ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_fcdg .Producer );
_acfc .SetIfNotNil ("\u0054r\u0061\u0070\u0070\u0065\u0064",_fcdg .Trapped );if _fcdg .CreationDate !=nil {_acfc .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_fcdg .CreationDate .ToPdfObject ());};if _fcdg .ModifiedDate !=nil {_acfc .SetIfNotNil ("\u004do\u0064\u0044\u0061\u0074\u0065",_fcdg .ModifiedDate .ToPdfObject ());
};for _ ,_cgefc :=range _fcdg ._fecbf .Keys (){_acfc .SetIfNotNil (_cgefc ,_fcdg ._fecbf .Get (_cgefc ));};return _acfc ;};

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_agefb pdfFontSimple )GetRuneMetrics (r rune )(_bfg .CharMetrics ,bool ){if _agefb ._gbafb !=nil {_fbaf ,_aefde :=_agefb ._gbafb .Read (r );if _aefde {return _fbaf ,true ;};};_abab :=_agefb .Encoder ();if _abab ==nil {_gcf .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_agefb );
return _bfg .CharMetrics {},false ;};_dffb ,_fefdf :=_abab .RuneToCharcode (r );if !_fefdf {if r !=' '{_gcf .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_agefb );
};return _bfg .CharMetrics {},false ;};_abbcb ,_gbdad :=_agefb .GetCharMetrics (_dffb );return _abbcb ,_gbdad ;};

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_gccd *PdfOutlineTreeNode )GetContext ()PdfModel {if _eccc ,_adbce :=_gccd ._ebbdf .(*PdfOutline );_adbce {return _eccc ;};if _cdca ,_cafdb :=_gccd ._ebbdf .(*PdfOutlineItem );_cafdb {return _cdca ;};_gcf .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");
return nil ;};

// HasExtGState checks whether a font is defined by the specified keyName.
func (_gddeg *PdfPageResources )HasExtGState (keyName _bbe .PdfObjectName )bool {_ ,_dgafde :=_gddeg .GetFontByName (keyName );return _dgafde ;};

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_eea :=NewPdfAnnotation ();_bcge :=&PdfAnnotationStrikeOut {};_bcge .PdfAnnotation =_eea ;_bcge .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eea .SetContext (_bcge );return _bcge ;};

// ParserMetadata gets the parser  metadata.
func (_edfe *CompliancePdfReader )ParserMetadata ()_bbe .ParserMetadata {if _edfe ._beedba ==(_bbe .ParserMetadata {}){_edfe ._beedba ,_ =_edfe ._ffgcd .ParserMetadata ();};return _edfe ._beedba ;};func (_fcfa *PdfReader )newPdfAnnotationWidgetFromDict (_becd *_bbe .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_daff :=PdfAnnotationWidget {};
_daff .H =_becd .Get ("\u0048");_daff .MK =_becd .Get ("\u004d\u004b");_daff .A =_becd .Get ("\u0041");_daff .AA =_becd .Get ("\u0041\u0041");_daff .BS =_becd .Get ("\u0042\u0053");_daff .Parent =_becd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_daff ,nil ;
};

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_ebcfc :=&PdfPageResources {};_ebcfc ._bgaca =_bbe .MakeDict ();return _ebcfc ;};

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_dgbbce *PdfField )IsTerminal ()bool {return len (_dgbbce .Kids )==0};

// AddWatermarkImage adds a watermark to the page.
func (_gddb *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_affec ,_cbfg :=_gddb .GetMediaBox ();if _cbfg !=nil {return _cbfg ;};_ebegf :=_affec .Urx -_affec .Llx ;_gcded :=_affec .Ury -_affec .Lly ;_eaddeg :=float64 (*ximg .Width );
_caefe :=(_ebegf -_eaddeg )/2;if opt .FitToWidth {_eaddeg =_ebegf ;_caefe =0;};_gdgbd :=_gcded ;_eccea :=float64 (0);if opt .PreserveAspectRatio {_gdgbd =_eaddeg *float64 (*ximg .Height )/float64 (*ximg .Width );_eccea =(_gcded -_gdgbd )/2;};if _gddb .Resources ==nil {_gddb .Resources =NewPdfPageResources ();
};_ggcfe :=0;_acbbgd :=_bbe .PdfObjectName (_g .Sprintf ("\u0049\u006d\u0077%\u0064",_ggcfe ));for _gddb .Resources .HasXObjectByName (_acbbgd ){_ggcfe ++;_acbbgd =_bbe .PdfObjectName (_g .Sprintf ("\u0049\u006d\u0077%\u0064",_ggcfe ));};_cbfg =_gddb .AddImageResource (_acbbgd ,ximg );
if _cbfg !=nil {return _cbfg ;};_ggcfe =0;_dcde :=_bbe .PdfObjectName (_g .Sprintf ("\u0047\u0053\u0025\u0064",_ggcfe ));for _gddb .HasExtGState (_dcde ){_ggcfe ++;_dcde =_bbe .PdfObjectName (_g .Sprintf ("\u0047\u0053\u0025\u0064",_ggcfe ));};_bcggb :=_bbe .MakeDict ();
_bcggb .Set ("\u0042\u004d",_bbe .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_bcggb .Set ("\u0043\u0041",_bbe .MakeFloat (opt .Alpha ));_bcggb .Set ("\u0063\u0061",_bbe .MakeFloat (opt .Alpha ));_cbfg =_gddb .AddExtGState (_dcde ,_bcggb );if _cbfg !=nil {return _cbfg ;
};_cadga :=_g .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_dcde ,_eaddeg ,_gdgbd ,_caefe ,_eccea ,_acbbgd );
_gddb .AddContentStreamByString (_cadga );return nil ;};func (_eabe *PdfReader )buildPageList (_bedcg *_bbe .PdfIndirectObject ,_gega *_bbe .PdfIndirectObject ,_egbda map[_bbe .PdfObject ]struct{})error {if _bedcg ==nil {return nil ;};if _ ,_dgbga :=_egbda [_bedcg ];
_dgbga {_gcf .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_bedcg .ObjectNumber );return nil ;};_egbda [_bedcg ]=struct{}{};
_afgeb ,_dfcbg :=_bedcg .PdfObject .(*_bbe .PdfObjectDictionary );if !_dfcbg {return _cc .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_gdebf ,_dfcbg :=(*_afgeb ).Get ("\u0054\u0079\u0070\u0065").(*_bbe .PdfObjectName );
if !_dfcbg {if _afgeb .Get ("\u004b\u0069\u0064\u0073")==nil {return _cc .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_gcf .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");
_gdebf =_bbe .MakeName ("\u0050\u0061\u0067e\u0073");_afgeb .Set ("\u0054\u0079\u0070\u0065",_gdebf );};_gcf .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_gdebf ,_bedcg );
if *_gdebf =="\u0050\u0061\u0067\u0065"{_baca ,_bgea :=_eabe .newPdfPageFromDict (_afgeb );if _bgea !=nil {return _bgea ;};_baca .setContainer (_bedcg );if _gega !=nil {_afgeb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gega );};_eabe ._cfgf =append (_eabe ._cfgf ,_bedcg );
_eabe .PageList =append (_eabe .PageList ,_baca );return nil ;};if *_gdebf !="\u0050\u0061\u0067e\u0073"{_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_gdebf );
return _cc .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");
};if _gega !=nil {_afgeb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gega );};if !_eabe ._egggg {_gddgda :=_eabe .traverseObjectData (_bedcg );if _gddgda !=nil {return _gddgda ;};};_bgbad ,_cacbc :=_eabe ._ffgcd .Resolve (_afgeb .Get ("\u004b\u0069\u0064\u0073"));
if _cacbc !=nil {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _cacbc ;};var _ccgfc *_bbe .PdfObjectArray ;
_ccgfc ,_dfcbg =_bgbad .(*_bbe .PdfObjectArray );if !_dfcbg {_bagaa ,_eebfc :=_bgbad .(*_bbe .PdfIndirectObject );if !_eebfc {return _cc .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};
_ccgfc ,_dfcbg =_bagaa .PdfObject .(*_bbe .PdfObjectArray );if !_dfcbg {return _cc .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_gcf .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_ccgfc );
for _dgfgb ,_agaga :=range _ccgfc .Elements (){_fdab ,_cgacd :=_bbe .GetIndirect (_agaga );if !_cgacd {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_fdab );
return _cc .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_ccgfc .Set (_dgfgb ,_fdab );_cacbc =_eabe .buildPageList (_fdab ,_bedcg ,_egbda );if _cacbc !=nil {return _cacbc ;
};};return nil ;};

// G returns the value of the green component of the color.
func (_geca *PdfColorDeviceRGB )G ()float64 {return _geca [1]};

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _bbe .PdfObject ;PreserveRB _bbe .PdfObject ;};const (_eafda =0x00001;_eggddd =0x00002;_bbcge =0x00004;_gaabb =0x00008;_efbf =0x00020;_gcag =0x00040;_gdgc =0x10000;_gadege =0x20000;_eedg =0x40000;);

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_efeae *PdfReader )CheckAccessRights (password []byte )(bool ,_bad .Permissions ,error ){return _efeae ._ffgcd .CheckAccessRights (password );};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_efdc *PdfField )ToPdfObject ()_bbe .PdfObject {_cgeef :=_efdc ._acga ;_edfb :=_cgeef .PdfObject .(*_bbe .PdfObjectDictionary );_ggab :=_bbe .MakeArray ();for _ ,_fgcb :=range _efdc .Kids {_ggab .Append (_fgcb .ToPdfObject ());};for _ ,_acgd :=range _efdc .Annotations {if _acgd ._dbg !=_efdc ._acga {_ggab .Append (_acgd .GetContext ().ToPdfObject ());
};};if _efdc .Parent !=nil {_edfb .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_efdc .Parent .GetContainingPdfObject ());};if _ggab .Len ()> 0{_edfb .Set ("\u004b\u0069\u0064\u0073",_ggab );};_edfb .SetIfNotNil ("\u0046\u0054",_efdc .FT );_edfb .SetIfNotNil ("\u0054",_efdc .T );
_edfb .SetIfNotNil ("\u0054\u0055",_efdc .TU );_edfb .SetIfNotNil ("\u0054\u004d",_efdc .TM );_edfb .SetIfNotNil ("\u0046\u0066",_efdc .Ff );_edfb .SetIfNotNil ("\u0056",_efdc .V );_edfb .SetIfNotNil ("\u0044\u0056",_efdc .DV );_edfb .SetIfNotNil ("\u0041\u0041",_efdc .AA );
if _efdc .VariableText !=nil {_edfb .SetIfNotNil ("\u0044\u0041",_efdc .VariableText .DA );_edfb .SetIfNotNil ("\u0051",_efdc .VariableText .Q );_edfb .SetIfNotNil ("\u0044\u0053",_efdc .VariableText .DS );_edfb .SetIfNotNil ("\u0052\u0056",_efdc .VariableText .RV );
};return _cgeef ;};

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _bbe .PdfObject ;Flags _bbe .PdfObject ;};const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;BorderStyleBeveled BorderStyle =iota ;BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;
);

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;

// ToPdfObject implements interface PdfModel.
func (_bdb *PdfActionSound )ToPdfObject ()_bbe .PdfObject {_bdb .PdfAction .ToPdfObject ();_egd :=_bdb ._be ;_cbf :=_egd .PdfObject .(*_bbe .PdfObjectDictionary );_cbf .SetIfNotNil ("\u0053",_bbe .MakeName (string (ActionTypeSound )));_cbf .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_bdb .Sound );
_cbf .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_bdb .Volume );_cbf .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_bdb .Synchronous );_cbf .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_bdb .Repeat );_cbf .SetIfNotNil ("\u004d\u0069\u0078",_bdb .Mix );
return _egd ;};

// SetImage updates XObject Image with new image data.
func (_befd *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_befd .Filter .UpdateParams (img .GetParamsDict ());_abcae ,_bgbacd :=_befd .Filter .EncodeBytes (img .Data );if _bgbacd !=nil {return _bgbacd ;};_befd .Stream =_abcae ;_afcbb :=img .Width ;
_befd .Width =&_afcbb ;_fdbfe :=img .Height ;_befd .Height =&_fdbfe ;_bccffd :=img .BitsPerComponent ;_befd .BitsPerComponent =&_bccffd ;if cs ==nil {if img .ColorComponents ==1{_befd .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_befd .ColorSpace =NewPdfColorspaceDeviceRGB ();
}else if img .ColorComponents ==4{_befd .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _cc .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_befd .ColorSpace =cs ;};return nil ;
};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_defa *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_cc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_geec :=vals [0];if _geec < 0.0||_geec > 1.0{_gcf .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");
};if _geec < 0.0{_geec =0.0;}else if _geec > 1.0{_geec =1.0;};return NewPdfColorDeviceGray (_geec ),nil ;};var _ pdfFont =(*pdfFontType3 )(nil );func _gfbg (_fcdad _bbe .PdfObject ){_gcf .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_fcdad ,_fcdad .String ());
if _bgfe ,_fggag :=_fcdad .(*_bbe .PdfObjectStream );_fggag {_dgdc ,_gbad :=_bbe .DecodeStream (_bgfe );if _gbad !=nil {_gcf .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_gbad );return ;};_gcf .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_dgdc );
}else if _fefec ,_cfbedb :=_fcdad .(*_bbe .PdfIndirectObject );_cfbedb {_gcf .Log .Debug ("\u0025\u0054\u0020%\u0076",_fefec .PdfObject ,_fefec .PdfObject );_gcf .Log .Debug ("\u0025\u0073",_fefec .PdfObject .String ());};};func _dfcc (_geffd StdFontName )(pdfFontSimple ,error ){_aaba ,_eefg :=_bfg .NewStdFontByName (_geffd );
if !_eefg {return pdfFontSimple {},ErrFontNotSupported ;};_bbgfe :=_gdaee (_aaba );return _bbgfe ,nil ;};

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_fcca *PdfReader )Inspect ()(map[string ]int ,error ){return _fcca ._ffgcd .Inspect ()};func (_dcf *PdfReader )newPdfActionGotoEFromDict (_egdcd *_bbe .PdfObjectDictionary )(*PdfActionGoToE ,error ){_bgde ,_dfd :=_bfac (_egdcd .Get ("\u0046"));if _dfd !=nil {return nil ,_dfd ;
};return &PdfActionGoToE {D :_egdcd .Get ("\u0044"),NewWindow :_egdcd .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_egdcd .Get ("\u0054"),F :_bgde },nil ;};func (_dgbd *fontFile )parseASCIIPart (_acac []byte )error {if len (_acac )< 2||string (_acac [:2])!="\u0025\u0021"{return _cc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");
};_fcba ,_ggfcc ,_eaafd :=_ffce (_acac );if _eaafd !=nil {return _eaafd ;};_aadg :=_acbgc (_fcba );_dgbd ._fcggd =_aadg ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _dgbd ._fcggd ==""{_gcf .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");
};if _ggfcc !=""{_gcadg ,_egbf :=_dgfd (_ggfcc );if _egbf !=nil {return _egbf ;};_abee ,_egbf :=_ff .NewCustomSimpleTextEncoder (_gcadg ,nil );if _egbf !=nil {_gcf .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_egbf );
return nil ;};_dgbd ._edaf =_abee ;};return nil ;};

// SetFillImage attach a model.Image to push button.
func (_agada *PdfFieldButton )SetFillImage (image *Image ){if _agada .IsPush (){_agada ._gfcgd =image ;};};type modelManager struct{_gbfdg map[PdfModel ]_bbe .PdfObject ;_dccbf map[_bbe .PdfObject ]PdfModel ;};

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_ga :=&PdfAction {};_ga ._be =_bbe .MakeIndirectObject (_bbe .MakeDict ());return _ga ;};

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_bbcg :=NewPdfAnnotation ();_gcaf :=&PdfAnnotationSound {};_gcaf .PdfAnnotation =_bbcg ;_gcaf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bbcg .SetContext (_gcaf );return _gcaf ;};

// EnableChain adds the specified certificate chain and validation data (OCSP
// and CRL information) for it to the global scope of the document DSS. The
// added data is used for validating any of the signatures present in the
// document. The LTV client attempts to build the certificate chain up to a
// trusted root by downloading any missing certificates.
func (_dedfd *LTV )EnableChain (chain []*_gg .Certificate )error {return _dedfd .enable (nil ,chain ,"")};func (_dfde *PdfReader )newPdfAnnotationStrikeOut (_beec *_bbe .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_edae :=PdfAnnotationStrikeOut {};
_bagfe ,_adb :=_dfde .newPdfAnnotationMarkupFromDict (_beec );if _adb !=nil {return nil ,_adb ;};_edae .PdfAnnotationMarkup =_bagfe ;_edae .QuadPoints =_beec .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_edae ,nil ;};

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_ecdbbf *_bbe .PdfIndirectObject ;_fbfea *_bbe .PdfIndirectObject ;_edfgb map[_bbe .PdfObject ]struct{};_ageab []_bbe .PdfObject ;_ffebc map[_bbe .PdfObject ]struct{};_gagd []*_bbe .PdfIndirectObject ;_fbbde *PdfOutlineTreeNode ;_bgdee *_bbe .PdfObjectDictionary ;
_gcgeb []_bbe .PdfObject ;_befcg *_bbe .PdfIndirectObject ;_gcceb *_de .Writer ;_dccgd int64 ;_fgadg error ;_ceba *_bbe .PdfCrypt ;_efece *_bbe .PdfObjectDictionary ;_bgdgf *_bbe .PdfIndirectObject ;_gggff *_bbe .PdfObjectArray ;_dfadc _bbe .Version ;_ebabc *bool ;
_ceeea map[_bbe .PdfObject ][]*_bbe .PdfObjectDictionary ;_aadb *PdfAcroForm ;_aacdbg Optimizer ;_faee StandardApplier ;_cffgb map[int ]crossReference ;_abcgf int64 ;ObjNumOffset int ;_degbe bool ;_efbgg _bbe .XrefTable ;_cebbb int64 ;_ageg int64 ;_febda map[_bbe .PdfObject ]int64 ;
_dcddd map[_bbe .PdfObject ]struct{};_adcddd string ;_agfab []*PdfOutputIntent ;_fcgfg bool ;_agbeb ,_dfaef string ;};

// GetContainingPdfObject implements interface PdfModel.
func (_bfff *PdfAnnotation )GetContainingPdfObject ()_bbe .PdfObject {return _bfff ._dbg };func (_ffde *PdfReader )newPdfAnnotation3DFromDict (_fcda *_bbe .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_fcea :=PdfAnnotation3D {};_fcea .T3DD =_fcda .Get ("\u0033\u0044\u0044");
_fcea .T3DV =_fcda .Get ("\u0033\u0044\u0056");_fcea .T3DA =_fcda .Get ("\u0033\u0044\u0041");_fcea .T3DI =_fcda .Get ("\u0033\u0044\u0049");_fcea .T3DB =_fcda .Get ("\u0033\u0044\u0042");return &_fcea ,nil ;};func _adcbc (_abacd []byte )[]byte {const _deaf =52845;
const _gfag =22719;_daae :=55665;for _ ,_ccefa :=range _abacd [:4]{_daae =(int (_ccefa )+_daae )*_deaf +_gfag ;};_acedc :=make ([]byte ,len (_abacd )-4);for _abda ,_dece :=range _abacd [4:]{_acedc [_abda ]=byte (int (_dece )^_daae >>8);_daae =(int (_dece )+_daae )*_deaf +_gfag ;
};return _acedc ;};

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_cadccg *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _cadccg ._adcag .(*PdfShadingPattern );};

// HasPatternByName checks whether a pattern object is defined by the specified keyName.
func (_gdfe *PdfPageResources )HasPatternByName (keyName _bbe .PdfObjectName )bool {_ ,_cgccb :=_gdfe .GetPatternByName (keyName );return _cgccb ;};func (_eeac *PdfPage )flattenFieldsWithOpts (_aebga FieldAppearanceGenerator ,_aegde *FieldFlattenOpts ,_ccaf map[*PdfAnnotation ]bool )error {var _aeede []*PdfAnnotation ;
if _aebga !=nil {if _decb :=_aebga .WrapContentStream (_eeac );_decb !=nil {return _decb ;};};_gcad ,_agga :=_eeac .GetAnnotations ();if _agga !=nil {return _agga ;};for _ ,_babf :=range _gcad {_afcaf ,_ccab :=_ccaf [_babf ];if !_ccab &&_aegde .AnnotFilterFunc !=nil {if _ ,_aefdg :=_babf .GetContext ().(*PdfAnnotationWidget );
!_aefdg {_ccab =_aegde .AnnotFilterFunc (_babf );};};if !_ccab {_aeede =append (_aeede ,_babf );continue ;};switch _babf .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;
};_ffacb ,_adcf ,_cdgf :=_gfec (_babf );if _cdgf !=nil {if !_afcaf {_gcf .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");
continue ;};_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_cdgf );
continue ;};if _ffacb ==nil {continue ;};_fdfa :=_eeac .Resources .GenerateXObjectName ();_eeac .Resources .SetXObjectFormByName (_fdfa ,_ffacb );_cbggb ,_ccff ,_cdgf :=_ffbee (_ffacb );if _cdgf !=nil {_gcf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0061\u0070p\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u004d\u0061\u0074\u0072\u0069\u0078\u002c\u0020s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0078\u0066\u006f\u0072\u006d\u0020\u0062\u0062\u006f\u0078\u0020\u0061\u0064\u006a\u0075\u0073t\u006d\u0065\u006e\u0074\u003a \u0025\u0076",_cdgf );
}else {_gadeg :=_ggeb .IdentityMatrix ();_gadeg =_gadeg .Translate (-_cbggb .Llx ,-_cbggb .Lly );if _ccff {_gaeec :=0.0;if _cbggb .Width ()> 0{_gaeec =_adcf .Width ()/_cbggb .Width ();};_bfdggd :=0.0;if _cbggb .Height ()> 0{_bfdggd =_adcf .Height ()/_cbggb .Height ();
};_gadeg =_gadeg .Scale (_gaeec ,_bfdggd );};_adcf .Transform (_gadeg );};_gecb :=_ab .Min (_adcf .Llx ,_adcf .Urx );_ffdad :=_ab .Min (_adcf .Lly ,_adcf .Ury );var _eefe []string ;_eefe =append (_eefe ,"\u0071");_eefe =append (_eefe ,_g .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_gecb ,_ffdad ));
_eefe =append (_eefe ,_g .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_fdfa .String ()));_eefe =append (_eefe ,"\u0051");_defae :=_df .Join (_eefe ,"\u000a");_cdgf =_eeac .AppendContentStream (_defae );if _cdgf !=nil {return _cdgf ;};if _ffacb .Resources !=nil {_ceag ,_dabf :=_bbe .GetDict (_ffacb .Resources .Font );
if _dabf {for _ ,_begf :=range _ceag .Keys (){if !_eeac .Resources .HasFontByName (_begf ){_eeac .Resources .SetFontByName (_begf ,_ceag .Get (_begf ));};};};};};if len (_aeede )> 0{_eeac ._eeeeb =_aeede ;}else {_eeac ._eeeeb =[]*PdfAnnotation {};};return nil ;
};func (_fbb *PdfAnnotation )String ()string {_fae :="";_cag ,_debb :=_fbb .ToPdfObject ().(*_bbe .PdfIndirectObject );if _debb {_fae =_g .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_fbb ._ccfb ,_cag .PdfObject .String ());};return _fae ;};

// SetDSS sets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_deef *PdfAppender )SetDSS (dss *DSS ){if dss !=nil {_deef .updateObjectsDeep (dss .ToPdfObject (),nil );};_deef ._cagb =dss ;};

// ToPdfObject implements interface PdfModel.
func (_aeba *PdfAnnotationPopup )ToPdfObject ()_bbe .PdfObject {_aeba .PdfAnnotation .ToPdfObject ();_fdbe :=_aeba ._dbg ;_cbcaf :=_fdbe .PdfObject .(*_bbe .PdfObjectDictionary );_cbcaf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbe .MakeName ("\u0050\u006f\u0070u\u0070"));
_cbcaf .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_aeba .Parent );_cbcaf .SetIfNotNil ("\u004f\u0070\u0065\u006e",_aeba .Open );return _fdbe ;};

// HasXObjectByName checks if has XObject resource by name.
func (_aebad *PdfPage )HasXObjectByName (name _bbe .PdfObjectName )bool {_fcgagf ,_ccecg :=_aebad .Resources .XObject .(*_bbe .PdfObjectDictionary );if !_ccecg {return false ;};if _gdggc :=_fcgagf .Get (name );_gdggc !=nil {return true ;};return false ;
};

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_ceabg *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _gcbfe []*PdfField ;if _ceabg .AcroForm !=nil {_gcbfe =_ceabg .AcroForm .AllFields ();};_dfge :=make (map[*PdfField ]struct{},len (_gcbfe ));for _ ,_eeeebd :=range _gcbfe {_dfge [_eeeebd ]=struct{}{};
};for _ ,_baac :=range _ceabg .PageList {_dccdb ,_eafe :=_baac .GetAnnotations ();if _eafe !=nil {return false ,_eafe ;};for _ ,_abfgg :=range _dccdb {_geafg ,_dacbd :=_abfgg .GetContext ().(*PdfAnnotationWidget );if !_dacbd {continue ;};_cafaa :=_geafg .Field ();
if _cafaa ==nil {return true ,nil ;};if _ ,_cdbf :=_dfge [_cafaa ];!_cdbf {return true ,nil ;};};};return false ,nil ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_bccec *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_gcf .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_cc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_gcbag :=[]float64 {0.0};if _bccec .C0 !=nil {_gcbag =_bccec .C0 ;};_feedg :=[]float64 {1.0};if _bccec .C1 !=nil {_feedg =_bccec .C1 ;};var _bgceg []float64 ;for _fcacb :=0;_fcacb < len (_gcbag );_fcacb ++{_abcg :=_gcbag [_fcacb ]+_ab .Pow (x [0],_bccec .N )*(_feedg [_fcacb ]-_gcbag [_fcacb ]);
_bgceg =append (_bgceg ,_abcg );};return _bgceg ,nil ;};

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_bbee *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _bbee .MediaBox !=nil {return _bbee .MediaBox ,nil ;};_ccaff :=_bbee .Parent ;for _ccaff !=nil {_bfbec ,_efga :=_bbe .GetDict (_ccaff );if !_efga {return nil ,_cc .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _ffee :=_bfbec .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_ffee !=nil {_aecd ,_cgddbg :=_bbe .GetArray (_ffee );if !_cgddbg {return nil ,_cc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");
};_ffgcc ,_ececc :=NewPdfRectangle (*_aecd );if _ececc !=nil {return nil ,_ececc ;};return _ffgcc ,nil ;};_ccaff =_bfbec .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_cc .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");
};

// GetPdfInfo returns the PDF info dictionary.
func (_eecfe *PdfReader )GetPdfInfo ()(*PdfInfo ,error ){_afaebf ,_bgafdf :=_eecfe .GetTrailer ();if _bgafdf !=nil {return nil ,_bgafdf ;};var _cfdga *_bbe .PdfObjectDictionary ;_eecag :=_afaebf .Get ("\u0049\u006e\u0066\u006f");switch _daggb :=_eecag .(type ){case *_bbe .PdfObjectReference :_fgggf :=_daggb ;
_eecag ,_bgafdf =_eecfe .GetIndirectObjectByNumber (int (_fgggf .ObjectNumber ));_eecag =_bbe .TraceToDirectObject (_eecag );if _bgafdf !=nil {return nil ,_bgafdf ;};_cfdga ,_ =_eecag .(*_bbe .PdfObjectDictionary );case *_bbe .PdfObjectDictionary :_cfdga =_daggb ;
};if _cfdga ==nil {return nil ,_cc .New ("I\u006e\u0066\u006f\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006eo\u0074\u0020\u0070r\u0065s\u0065\u006e\u0074");};_aadca ,_bgafdf :=NewPdfInfoFromObject (_cfdga );if _bgafdf !=nil {return nil ,_bgafdf ;
};return _aadca ,nil ;};

// GetDescent returns the Descent of the font `descriptor`.
func (_adbbe *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _bbe .GetNumberAsFloat (_adbbe .Descent );};

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_gdeb *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_ddfc :=_dfc .NewReader (img .getBase ());_agcaf :=_gb .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_eafc :=_dfc .NewWriter (_agcaf );
_ebba :=_ab .Pow (2,float64 (img .BitsPerComponent ))-1;_faccf :=make ([]uint32 ,3);var (_fefe error ;_adba ,_bcfee ,_caae ,_efac ,_eefb ,_egaa float64 ;);for {_fefe =_ddfc .ReadSamples (_faccf );if _fefe ==_geb .EOF {break ;}else if _fefe !=nil {return img ,_fefe ;
};_adba =float64 (_faccf [0])/_ebba ;_bcfee =float64 (_faccf [1])/_ebba ;_caae =float64 (_faccf [2])/_ebba ;_efac =_gdeb .Matrix [0]*_ab .Pow (_adba ,_gdeb .Gamma [0])+_gdeb .Matrix [3]*_ab .Pow (_bcfee ,_gdeb .Gamma [1])+_gdeb .Matrix [6]*_ab .Pow (_caae ,_gdeb .Gamma [2]);
_eefb =_gdeb .Matrix [1]*_ab .Pow (_adba ,_gdeb .Gamma [0])+_gdeb .Matrix [4]*_ab .Pow (_bcfee ,_gdeb .Gamma [1])+_gdeb .Matrix [7]*_ab .Pow (_caae ,_gdeb .Gamma [2]);_egaa =_gdeb .Matrix [2]*_ab .Pow (_adba ,_gdeb .Gamma [0])+_gdeb .Matrix [5]*_ab .Pow (_bcfee ,_gdeb .Gamma [1])+_gdeb .Matrix [8]*_ab .Pow (_caae ,_gdeb .Gamma [2]);
_adba =3.240479*_efac +-1.537150*_eefb +-0.498535*_egaa ;_bcfee =-0.969256*_efac +1.875992*_eefb +0.041556*_egaa ;_caae =0.055648*_efac +-0.204043*_eefb +1.057311*_egaa ;_adba =_ab .Min (_ab .Max (_adba ,0),1.0);_bcfee =_ab .Min (_ab .Max (_bcfee ,0),1.0);
_caae =_ab .Min (_ab .Max (_caae ,0),1.0);_faccf [0]=uint32 (_adba *_ebba );_faccf [1]=uint32 (_bcfee *_ebba );_faccf [2]=uint32 (_caae *_ebba );if _fefe =_eafc .WriteSamples (_faccf );_fefe !=nil {return img ,_fefe ;};};return _gdbea (&_agcaf ),nil ;};


// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_age :=NewPdfAction ();_dgb :=&PdfActionGoTo3DView {};_dgb .PdfAction =_age ;_age .SetContext (_dgb );return _dgb ;};const (_ PdfOutputIntentType =iota ;PdfOutputIntentTypeA1 ;PdfOutputIntentTypeA2 ;PdfOutputIntentTypeA3 ;
PdfOutputIntentTypeA4 ;PdfOutputIntentTypeX ;);type pdfFontSimple struct{fontCommon ;_faga *_bbe .PdfIndirectObject ;_dbba map[_ff .CharCode ]float64 ;_adcac _ff .TextEncoder ;_bfgf _ff .TextEncoder ;_fgfb *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _bbe .PdfObject ;LastChar _bbe .PdfObject ;Widths _bbe .PdfObject ;Encoding _bbe .PdfObject ;_gbafb *_bfg .RuneCharSafeMap ;};

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_ggeca :=&PdfColorspaceDeviceN {};return _ggeca ;};

// NewPdfAppenderWithOpts creates a new Pdf appender from a Pdf reader with options.
func NewPdfAppenderWithOpts (reader *PdfReader ,opts *ReaderOpts ,encryptOptions *EncryptOptions )(*PdfAppender ,error ){_bda :=&PdfAppender {_facg :reader ._bdfdg ,Reader :reader ,_deff :reader ._ffgcd ,_adbcd :reader ._beaad };_faabc ,_abfb :=_bda ._facg .Seek (0,_geb .SeekEnd );
if _abfb !=nil {return nil ,_abfb ;};_bda ._egg =_faabc ;if _ ,_abfb =_bda ._facg .Seek (0,_geb .SeekStart );_abfb !=nil {return nil ,_abfb ;};_bda ._aeaa ,_abfb =NewPdfReaderWithOpts (_bda ._facg ,opts );if _abfb !=nil {return nil ,_abfb ;};for _ ,_cgbf :=range _bda .Reader .GetObjectNums (){if _bda ._acbd < _cgbf {_bda ._acbd =_cgbf ;
};};_bda ._bafb =_bda ._deff .GetXrefTable ();_bda ._decd =_bda ._deff .GetXrefOffset ();_bda ._gada =append (_bda ._gada ,_bda ._aeaa .PageList ...);_bda ._ggee =make (map[_bbe .PdfObject ]struct{});_bda ._aggfg =make (map[_bbe .PdfObject ]int64 );_bda ._gdg =make (map[_bbe .PdfObject ]struct{});
_bda ._bggf =_bda ._aeaa .AcroForm ;_bda ._cagb =_bda ._aeaa .DSS ;if opts !=nil {_bda ._adbca =opts .Password ;};if encryptOptions !=nil {_bda ._beea =encryptOptions ;};return _bda ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_cafdg *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_bbe .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_cc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ggef ,_fgda :=_bbe .GetNumbersAsFloat (objects );
if _fgda !=nil {return nil ,_fgda ;};return _cafdg .ColorFromFloats (_ggef );};func (_aebd *PdfReader )newPdfAnnotationSquareFromDict (_dfef *_bbe .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_bfaf :=PdfAnnotationSquare {};_dfb ,_cfce :=_aebd .newPdfAnnotationMarkupFromDict (_dfef );
if _cfce !=nil {return nil ,_cfce ;};_bfaf .PdfAnnotationMarkup =_dfb ;_bfaf .BS =_dfef .Get ("\u0042\u0053");_bfaf .IC =_dfef .Get ("\u0049\u0043");_bfaf .BE =_dfef .Get ("\u0042\u0045");_bfaf .RD =_dfef .Get ("\u0052\u0044");return &_bfaf ,nil ;};

// A returns the value of the A component of the color.
func (_afff *PdfColorCalRGB )A ()float64 {return _afff [0]};

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_ccdff :=&PdfPageResourcesColorspaces {};_ccdff .Names =[]string {};_ccdff .Colorspaces =map[string ]PdfColorspace {};_ccdff ._cbcccb =&_bbe .PdfIndirectObject {};return _ccdff ;};

// StandardValidator is the interface that is used for the PDF StandardImplementer validation for the PDF document.
// It is using a CompliancePdfReader which is expected to give more Metadata during reading process.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardValidator interface{

// ValidateStandard checks if the input reader
ValidateStandard (_debbe *CompliancePdfReader )error ;};

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_fbgcd int64 ;_adagcb int64 ;_ecbec int64 ;_fcffa int64 ;_bafbb int64 ;_gcffe int64 ;_fdgcgf byte ;_bdfdc int64 ;_degcc int64 ;};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_fdcg ,_agbea :=_cd .Open (filePath );if _agbea !=nil {_gcf .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_agbea );
return nil ,_agbea ;};defer _fdcg .Close ();return NewCompositePdfFontFromTTF (_fdcg );};func _facgg (_egdbcf map[_bfg .GID ]int ,_bgdd uint16 )*_bbe .PdfObjectArray {_gcdgb :=&_bbe .PdfObjectArray {};_bagae :=_bfg .GID (_bgdd );for _fabab :=_bfg .GID (0);
_fabab < _bagae ;{_dcef ,_dbab :=_egdbcf [_fabab ];if !_dbab {_fabab ++;continue ;};_aefcb :=_fabab ;for _ebac :=_aefcb +1;_ebac < _bagae ;_ebac ++{if _bggfbe ,_gaeff :=_egdbcf [_ebac ];!_gaeff ||_dcef !=_bggfbe {break ;};_aefcb =_ebac ;};_gcdgb .Append (_bbe .MakeInteger (int64 (_fabab )));
_gcdgb .Append (_bbe .MakeInteger (int64 (_aefcb )));_gcdgb .Append (_bbe .MakeInteger (int64 (_dcef )));_fabab =_aefcb +1;};return _gcdgb ;};

// Clear clears flag fl from the flag and returns the resulting flag.
func (_fcaa FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_fcaa .Mask ()&^fl .Mask ())};

// ToPdfObject implements interface PdfModel.
func (_bcgdf *PdfAnnotationSquiggly )ToPdfObject ()_bbe .PdfObject {_bcgdf .PdfAnnotation .ToPdfObject ();_dbeg :=_bcgdf ._dbg ;_geff :=_dbeg .PdfObject .(*_bbe .PdfObjectDictionary );_bcgdf .PdfAnnotationMarkup .appendToPdfDictionary (_geff );_geff .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbe .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));
_geff .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_bcgdf .QuadPoints );return _dbeg ;};

// StandardImplementer is an interface that defines specified PDF standards like PDF/A-1A (pdfa.Profile1A)
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardImplementer interface{StandardValidator ;StandardApplier ;

// StandardName gets the human-readable name of the standard.
StandardName ()string ;};

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_ddeag *PdfColorCalRGB )GetNumComponents ()int {return 3};

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_addfb *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};func (_gcbc *fontFile )loadFromSegments (_abcce ,_fcgag []byte )error {_gcf .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_abcce ),len (_fcgag ));
_cbagb :=_gcbc .parseASCIIPart (_abcce );if _cbagb !=nil {return _cbagb ;};_gcf .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_gcbc );if len (_fcgag )==0{return nil ;};_gcf .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_gcbc );
return nil ;};

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_bffccc *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _deefe []float64 ;for _gfad :=0;_gfad < _bffccc .GetNumComponents ();_gfad ++{_deefe =append (_deefe ,0.0,1.0);};return _deefe ;};func (_bgbac *PdfWriter )addObjects (_bcdc _bbe .PdfObject )error {_gcf .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");
if _dadde ,_ddacc :=_bcdc .(*_bbe .PdfIndirectObject );_ddacc {_gcf .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");_gcf .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_bcdc ,_dadde );_gcf .Log .Trace ("\u002d\u0020\u0025\u0073",_dadde .PdfObject );
if _bgbac .addObject (_dadde ){_ddbde :=_bgbac .addObjects (_dadde .PdfObject );if _ddbde !=nil {return _ddbde ;};};return nil ;};if _ffacfa ,_aafea :=_bcdc .(*_bbe .PdfObjectStream );_aafea {_gcf .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");_gcf .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_bcdc ,_bcdc );
if _bgbac .addObject (_ffacfa ){_dbdgb :=_bgbac .addObjects (_ffacfa .PdfObjectDictionary );if _dbdgb !=nil {return _dbdgb ;};};return nil ;};if _gcdgc ,_fcbd :=_bcdc .(*_bbe .PdfObjectDictionary );_fcbd {_gcf .Log .Trace ("\u0044\u0069\u0063\u0074");_gcf .Log .Trace ("\u002d\u0020\u0025\u0073",_bcdc );
for _ ,_bfecaf :=range _gcdgc .Keys (){_efedd :=_gcdgc .Get (_bfecaf );if _edbc ,_dbfd :=_efedd .(*_bbe .PdfObjectReference );_dbfd {_efedd =_edbc .Resolve ();_gcdgc .Set (_bfecaf ,_efedd );};if _bfecaf !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _gcaagg :=_bgbac .addObjects (_efedd );
_gcaagg !=nil {return _gcaagg ;};}else {if _ ,_bafcfd :=_efedd .(*_bbe .PdfObjectNull );_bafcfd {continue ;};if _gggdf :=_bgbac .hasObject (_efedd );!_gggdf {_gcf .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_efedd ,_efedd ,_efedd );
_bgbac ._ceeea [_efedd ]=append (_bgbac ._ceeea [_efedd ],_gcdgc );};};};return nil ;};if _eeaaab ,_dbfce :=_bcdc .(*_bbe .PdfObjectArray );_dbfce {_gcf .Log .Trace ("\u0041\u0072\u0072a\u0079");_gcf .Log .Trace ("\u002d\u0020\u0025\u0073",_bcdc );if _eeaaab ==nil {return _cc .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
};for _aafcg ,_beadb :=range _eeaaab .Elements (){if _ccege ,_aegbb :=_beadb .(*_bbe .PdfObjectReference );_aegbb {_beadb =_ccege .Resolve ();_eeaaab .Set (_aafcg ,_beadb );};if _cfabg :=_bgbac .addObjects (_beadb );_cfabg !=nil {return _cfabg ;};};return nil ;
};if _ ,_agbaga :=_bcdc .(*_bbe .PdfObjectReference );_agbaga {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_bcdc );
return _cc .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};

// GetRevisionNumber returns the version of the current Pdf document
func (_acagg *PdfReader )GetRevisionNumber ()int {return _acagg ._ffgcd .GetRevisionNumber ()};func (_adagcg *Image )samplesAddPadding (_eabgf []uint32 )[]uint32 {_ffgee :=_gb .BytesPerLine (int (_adagcg .Width ),int (_adagcg .BitsPerComponent ),_adagcg .ColorComponents )*(8/int (_adagcg .BitsPerComponent ));
_fbbb :=_ffgee *int (_adagcg .Height );if len (_eabgf )==_fbbb {return _eabgf ;};_egea :=make ([]uint32 ,_fbbb );_afddd :=int (_adagcg .Width )*_adagcg .ColorComponents ;for _dggfe :=0;_dggfe < int (_adagcg .Height );_dggfe ++{_acbba :=_dggfe *int (_adagcg .Width );
_cedae :=_dggfe *_ffgee ;for _bbagf :=0;_bbagf < _afddd ;_bbagf ++{_egea [_cedae +_bbagf ]=_eabgf [_acbba +_bbagf ];};};return _egea ;};

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_bbe .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_daab *_bbe .PdfIndirectObject ;};

// IsCID returns true if the underlying font is CID.
func (_bggfb *PdfFont )IsCID ()bool {return _bggfb .baseFields ().isCIDFont ()};func _cedaa ()string {_cccbdc .Lock ();defer _cccbdc .Unlock ();if len (_bccba )> 0{return _bccba ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";
};

// NewCustomPdfOutputIntent creates a new custom PdfOutputIntent.
func NewCustomPdfOutputIntent (outputCondition ,outputConditionIdentifier ,info string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,Info :info ,DestOutputProfile :destOutputProfile ,_agbec :_bbe .MakeDict (),ColorComponents :colorComponents };
};func (_bcca fontCommon )asPdfObjectDictionary (_eceb string )*_bbe .PdfObjectDictionary {if _eceb !=""&&_bcca ._cafed !=""&&_eceb !=_bcca ._cafed {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_eceb ,_bcca );
}else if _eceb ==""&&_bcca ._cafed ==""{_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_bcca );
}else if _bcca ._cafed ==""{_bcca ._cafed =_eceb ;};_cdeea :=_bbe .MakeDict ();_cdeea .Set ("\u0054\u0079\u0070\u0065",_bbe .MakeName ("\u0046\u006f\u006e\u0074"));_cdeea .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_bbe .MakeName (_bcca ._ffdd ));
_cdeea .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbe .MakeName (_bcca ._cafed ));if _bcca ._abdgdb !=nil {_cdeea .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_bcca ._abdgdb .ToPdfObject ());};if _bcca ._adbd !=nil {_cdeea .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_bcca ._adbd );
}else if _bcca ._ggdec !=nil {_eeadb ,_dccfe :=_bcca ._ggdec .Stream ();if _dccfe !=nil {_gcf .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_dccfe );
}else {_cdeea .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_eeadb );};};return _cdeea ;};

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_efafb *PdfWriter )SetPageLabels (pageLabels _bbe .PdfObject )error {if pageLabels ==nil {return nil ;};_gcf .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");
_efafb ._bgdee .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _efafb .addObjects (pageLabels );};func (_ddbf *PdfReader )newPdfActionLaunchFromDict (_gbc *_bbe .PdfObjectDictionary )(*PdfActionLaunch ,error ){_cfa ,_edge :=_bfac (_gbc .Get ("\u0046"));
if _edge !=nil {return nil ,_edge ;};return &PdfActionLaunch {Win :_gbc .Get ("\u0057\u0069\u006e"),Mac :_gbc .Get ("\u004d\u0061\u0063"),Unix :_gbc .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_gbc .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_cfa },nil ;
};

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_efbbc *XObjectForm )GetContainingPdfObject ()_bbe .PdfObject {return _efbbc ._abbbg };var _aefec =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};


// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _bbe .PdfObject ;FS _bbe .PdfObject ;F _bbe .PdfObject ;UF _bbe .PdfObject ;DOS _bbe .PdfObject ;Mac _bbe .PdfObject ;Unix _bbe .PdfObject ;ID _bbe .PdfObject ;V _bbe .PdfObject ;EF _bbe .PdfObject ;RF _bbe .PdfObject ;Desc _bbe .PdfObject ;
CI _bbe .PdfObject ;_ffbgc _bbe .PdfObject ;};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_efea *PdfAnnotationWidget )Field ()*PdfField {return _efea ._abdd };

// ReaderOpts defines options for creating PdfReader instances.
type ReaderOpts struct{

// Password password of the PDF file encryption.
// Default: empty ("").
Password string ;

// LazyLoad set if the PDF file would be loaded using lazy-loading mode.
// Default: true.
LazyLoad bool ;

// ComplianceMode set if parsed PDF file should contain meta information for the verifiers of the compliance standards like PDF/A.
ComplianceMode bool ;};

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_bcf :=NewPdfAnnotation ();_bbdf :=&PdfAnnotationSquare {};_bbdf .PdfAnnotation =_bcf ;_bbdf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bcf .SetContext (_bbdf );return _bbdf ;};

// ToPdfObject implements interface PdfModel.
func (_dc *PdfActionNamed )ToPdfObject ()_bbe .PdfObject {_dc .PdfAction .ToPdfObject ();_dffa :=_dc ._be ;_fff :=_dffa .PdfObject .(*_bbe .PdfObjectDictionary );_fff .SetIfNotNil ("\u0053",_bbe .MakeName (string (ActionTypeNamed )));_fff .SetIfNotNil ("\u004e",_dc .N );
return _dffa ;};

// AddExtension adds the specified extension to the Extensions dictionary.
// See section 7.1.2 "Extensions Dictionary" (pp. 108-109 PDF32000_2008).
func (_ecebe *PdfWriter )AddExtension (extName ,baseVersion string ,extLevel int ){_abbcag ,_dgdca :=_bbe .GetDict (_ecebe ._bgdee .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073"));if !_dgdca {_abbcag =_bbe .MakeDict ();_ecebe ._bgdee .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073",_abbcag );
};_dcdgf ,_dgdca :=_bbe .GetDict (_abbcag .Get (_bbe .PdfObjectName (extName )));if !_dgdca {_dcdgf =_bbe .MakeDict ();_abbcag .Set (_bbe .PdfObjectName (extName ),_dcdgf );};if _fbddf ,_ :=_bbe .GetNameVal (_dcdgf .Get ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"));
_fbddf !=baseVersion {_dcdgf .Set ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e",_bbe .MakeName (baseVersion ));};if _cbccd ,_ :=_bbe .GetIntVal (_dcdgf .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c"));
_cbccd !=extLevel {_dcdgf .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c",_bbe .MakeInteger (int64 (extLevel )));};};

// Items returns all children outline items.
func (_bdcea *OutlineItem )Items ()[]*OutlineItem {return _bdcea .Entries };

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};func _deabe (_ggcede *_bbe .PdfObjectDictionary )(*PdfShadingType3 ,error ){_dgagb :=PdfShadingType3 {};_gacg :=_ggcede .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _gacg ==nil {_gcf .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");
return nil ,ErrRequiredAttributeMissing ;};_beffa ,_ebebfe :=_gacg .(*_bbe .PdfObjectArray );if !_ebebfe {_gcf .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gacg );
return nil ,_bbe .ErrTypeError ;};if _beffa .Len ()!=6{_gcf .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_beffa .Len ());return nil ,ErrInvalidAttribute ;
};_dgagb .Coords =_beffa ;if _dgdbf :=_ggcede .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_dgdbf !=nil {_dgdbf =_bbe .TraceToDirectObject (_dgdbf );_dgdbe ,_gaeab :=_dgdbf .(*_bbe .PdfObjectArray );if !_gaeab {_gcf .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dgdbf );
return nil ,_bbe .ErrTypeError ;};_dgagb .Domain =_dgdbe ;};_gacg =_ggcede .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _gacg ==nil {_gcf .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_dgagb .Function =[]PdfFunction {};if _ccdg ,_dgggg :=_gacg .(*_bbe .PdfObjectArray );_dgggg {for _ ,_badaa :=range _ccdg .Elements (){_eadef ,_fface :=_bdce (_badaa );if _fface !=nil {_gcf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fface );
return nil ,_fface ;};_dgagb .Function =append (_dgagb .Function ,_eadef );};}else {_febab ,_bgfgb :=_bdce (_gacg );if _bgfgb !=nil {_gcf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bgfgb );
return nil ,_bgfgb ;};_dgagb .Function =append (_dgagb .Function ,_febab );};if _cggca :=_ggcede .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_cggca !=nil {_cggca =_bbe .TraceToDirectObject (_cggca );_dceab ,_efadd :=_cggca .(*_bbe .PdfObjectArray );if !_efadd {_gcf .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cggca );
return nil ,_bbe .ErrTypeError ;};if _dceab .Len ()!=2{_gcf .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_dceab .Len ());return nil ,ErrInvalidAttribute ;
};_dgagb .Extend =_dceab ;};return &_dgagb ,nil ;};

// ToPdfObject returns a stream object.
func (_gfgga *XObjectImage )ToPdfObject ()_bbe .PdfObject {_dcgbde :=_gfgga ._cggga ;_bcebd :=_dcgbde .PdfObjectDictionary ;if _gfgga .Filter !=nil {_bcebd =_gfgga .Filter .MakeStreamDict ();_dcgbde .PdfObjectDictionary =_bcebd ;};_bcebd .Set ("\u0054\u0079\u0070\u0065",_bbe .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_bcebd .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbe .MakeName ("\u0049\u006d\u0061g\u0065"));_bcebd .Set ("\u0057\u0069\u0064t\u0068",_bbe .MakeInteger (*(_gfgga .Width )));_bcebd .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_bbe .MakeInteger (*(_gfgga .Height )));
if _gfgga .BitsPerComponent !=nil {_bcebd .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bbe .MakeInteger (*(_gfgga .BitsPerComponent )));};if _gfgga .ColorSpace !=nil {_bcebd .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_gfgga .ColorSpace .ToPdfObject ());
};_bcebd .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_gfgga .Intent );_bcebd .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_gfgga .ImageMask );_bcebd .SetIfNotNil ("\u004d\u0061\u0073\u006b",_gfgga .Mask );_cfccc :=_bcebd .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")!=nil ;
if _gfgga .Decode ==nil &&_cfccc {_bcebd .Remove ("\u0044\u0065\u0063\u006f\u0064\u0065");}else if _gfgga .Decode !=nil {_bcebd .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_gfgga .Decode );};_bcebd .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_gfgga .Interpolate );
_bcebd .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_gfgga .Alternatives );_bcebd .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_gfgga .SMask );_bcebd .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_gfgga .SMaskInData );
_bcebd .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_gfgga .Matte );_bcebd .SetIfNotNil ("\u004e\u0061\u006d\u0065",_gfgga .Name );_bcebd .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_gfgga .StructParent );_bcebd .SetIfNotNil ("\u0049\u0044",_gfgga .ID );
_bcebd .SetIfNotNil ("\u004f\u0050\u0049",_gfgga .OPI );_bcebd .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_gfgga .Metadata );_bcebd .SetIfNotNil ("\u004f\u0043",_gfgga .OC );_bcebd .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bbe .MakeInteger (int64 (len (_gfgga .Stream ))));
_dcgbde .Stream =_gfgga .Stream ;return _dcgbde ;};func (_abaabe SignatureValidationResult )String ()string {var _abfbgb _cf .Buffer ;_abfbgb .WriteString (_g .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_abaabe .Name ));if _abaabe .Date ._fbgcd > 0{_abfbgb .WriteString (_g .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_abaabe .Date .ToGoTime ().String ()));
}else {_abfbgb .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_abaabe .Reason )> 0{_abfbgb .WriteString (_g .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_abaabe .Reason ));
}else {_abfbgb .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");};if len (_abaabe .Location )> 0{_abfbgb .WriteString (_g .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_abaabe .Location ));
}else {_abfbgb .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_abaabe .ContactInfo )> 0{_abfbgb .WriteString (_g .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_abaabe .ContactInfo ));
}else {_abfbgb .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");};_abfbgb .WriteString (_g .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_abaabe .Fields )));
if _abaabe .IsSigned {_abfbgb .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");}else {_abfbgb .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");
};if _abaabe .IsVerified {_abfbgb .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");}else {_abfbgb .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");
};if _abaabe .IsTrusted {_abfbgb .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");}else {_abfbgb .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");
};if !_abaabe .GeneralizedTime .IsZero (){_abfbgb .WriteString (_g .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_abaabe .GeneralizedTime .String ()));};if _abaabe .DiffResults !=nil {_abfbgb .WriteString (_g .Sprintf ("\u0064\u0069\u0066\u0066 i\u0073\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074\u0065\u0064\u003a\u0020\u0025v\u000a",_abaabe .DiffResults .IsPermitted ()));
if len (_abaabe .DiffResults .Warnings )> 0{_abfbgb .WriteString ("\u004d\u0044\u0050\u0020\u0077\u0061\u0072\u006e\u0069n\u0067\u0073\u003a\u000a");for _ ,_fcafe :=range _abaabe .DiffResults .Warnings {_abfbgb .WriteString (_g .Sprintf ("\u0009\u0025\u0073\u000a",_fcafe ));
};};if len (_abaabe .DiffResults .Errors )> 0{_abfbgb .WriteString ("\u004d\u0044\u0050 \u0065\u0072\u0072\u006f\u0072\u0073\u003a\u000a");for _ ,_gbbcc :=range _abaabe .DiffResults .Errors {_abfbgb .WriteString (_g .Sprintf ("\u0009\u0025\u0073\u000a",_gbbcc ));
};};};if _abaabe .IsCrlFound {_abfbgb .WriteString ("R\u0065\u0076\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u0064\u0061\u0074\u0061\u003a\u0020C\u0052\u004c\u0020f\u006fu\u006e\u0064\u000a");}else {_abfbgb .WriteString ("\u0052\u0065\u0076o\u0063\u0061\u0074\u0069o\u006e\u0020\u0064\u0061\u0074\u0061\u003a \u0043\u0052\u004c\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u000a");
};if _abaabe .IsOcspFound {_abfbgb .WriteString ("\u0052\u0065\u0076\u006fc\u0061\u0074\u0069\u006f\u006e\u0020\u0064\u0061\u0074\u0061:\u0020O\u0043\u0053\u0050\u0020\u0066\u006f\u0075n\u0064\u000a");}else {_abfbgb .WriteString ("\u0052\u0065\u0076\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0064\u0061\u0074\u0061:\u0020O\u0043\u0053\u0050\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u000a");
};return _abfbgb .String ();};

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bbe .PdfObject ;IC _bbe .PdfObject ;RO _bbe .PdfObject ;OverlayText _bbe .PdfObject ;Repeat _bbe .PdfObject ;DA _bbe .PdfObject ;Q _bbe .PdfObject ;};func (_fgbg *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";
};func _dfgdc ()string {_eged :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";var _efbb _cf .Buffer ;for _abfa :=0;_abfa < 6;_abfa ++{_efbb .WriteRune (rune (_eged [_e .Intn (len (_eged ))]));
};return _efbb .String ();};

// ColorToRGB converts a CalRGB color to an RGB color.
func (_bbag *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_gedc ,_affc :=color .(*PdfColorCalRGB );if !_affc {_gcf .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");
return nil ,_cc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_eggd :=_gedc .A ();_aage :=_gedc .B ();_dab :=_gedc .C ();X :=_bbag .Matrix [0]*_ab .Pow (_eggd ,_bbag .Gamma [0])+_bbag .Matrix [3]*_ab .Pow (_aage ,_bbag .Gamma [1])+_bbag .Matrix [6]*_ab .Pow (_dab ,_bbag .Gamma [2]);
Y :=_bbag .Matrix [1]*_ab .Pow (_eggd ,_bbag .Gamma [0])+_bbag .Matrix [4]*_ab .Pow (_aage ,_bbag .Gamma [1])+_bbag .Matrix [7]*_ab .Pow (_dab ,_bbag .Gamma [2]);Z :=_bbag .Matrix [2]*_ab .Pow (_eggd ,_bbag .Gamma [0])+_bbag .Matrix [5]*_ab .Pow (_aage ,_bbag .Gamma [1])+_bbag .Matrix [8]*_ab .Pow (_dab ,_bbag .Gamma [2]);
_affcg :=3.240479*X +-1.537150*Y +-0.498535*Z ;_eefd :=-0.969256*X +1.875992*Y +0.041556*Z ;_bcdb :=0.055648*X +-0.204043*Y +1.057311*Z ;_affcg =_ab .Min (_ab .Max (_affcg ,0),1.0);_eefd =_ab .Min (_ab .Max (_eefd ,0),1.0);_bcdb =_ab .Min (_ab .Max (_bcdb ,0),1.0);
return NewPdfColorDeviceRGB (_affcg ,_eefd ,_bcdb ),nil ;};

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_bfgg *PdfOutlineTreeNode )GetContainingPdfObject ()_bbe .PdfObject {return _bfgg .GetContext ().GetContainingPdfObject ();};func _cecdd (_degbb string )(string ,error ){var _adce _cf .Buffer ;_adce .WriteString (_degbb );_cgae :=make ([]byte ,8+16);
_egbbd :=_ge .Now ().UTC ().UnixNano ();_b .BigEndian .PutUint64 (_cgae ,uint64 (_egbbd ));_ ,_ggcaf :=_bb .Read (_cgae [8:]);if _ggcaf !=nil {return "",_ggcaf ;};_adce .WriteString (_gf .EncodeToString (_cgae ));return _adce .String (),nil ;};

// HasFontByName checks whether a font is defined by the specified keyName.
func (_ebecf *PdfPageResources )HasFontByName (keyName _bbe .PdfObjectName )bool {_ ,_agfdf :=_ebecf .GetFontByName (keyName );return _agfdf ;};

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _bbe .PdfObject ;T3DV _bbe .PdfObject ;T3DA _bbe .PdfObject ;T3DI _bbe .PdfObject ;T3DB _bbe .PdfObject ;};

// ToWriter creates a new writer from the current reader, based on the specified options.
// If no options are provided, all reader properties are copied to the writer.
func (_fcagf *PdfReader )ToWriter (opts *ReaderToWriterOpts )(*PdfWriter ,error ){_ageb :=NewPdfWriter ();if opts ==nil {opts =&ReaderToWriterOpts {};};_fcgfb ,_fdgeb :=_fcagf .GetNumPages ();if _fdgeb !=nil {_gcf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fdgeb );
return nil ,_fdgeb ;};for _cedg :=1;_cedg <=_fcgfb ;_cedg ++{_bafcc ,_bgaaac :=_fcagf .GetPage (_cedg );if _bgaaac !=nil {_gcf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bgaaac );return nil ,_bgaaac ;};if opts .PageProcessCallback !=nil {_bgaaac =opts .PageProcessCallback (_cedg ,_bafcc );
if _bgaaac !=nil {_gcf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bgaaac );return nil ,_bgaaac ;};}else if opts .PageCallback !=nil {opts .PageCallback (_cedg ,_bafcc );};_bgaaac =_ageb .AddPage (_bafcc );if _bgaaac !=nil {_gcf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bgaaac );
return nil ,_bgaaac ;};};_ageb ._dfadc =_fcagf .PdfVersion ();if !opts .SkipInfo {_aaff ,_eecga :=_fcagf .GetPdfInfo ();if _eecga !=nil {_gcf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eecga );}else {_ageb ._befcg .PdfObject =_aaff .ToPdfObject ();
};};if !opts .SkipMetadata {if _eegfg :=_fcagf ._cagcc .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_eegfg !=nil {if _agcde :=_ageb .SetCatalogMetadata (_eegfg );_agcde !=nil {return nil ,_agcde ;};};};if !opts .SkipAcroForm {_dfacb :=_ageb .SetForms (_fcagf .AcroForm );
if _dfacb !=nil {_gcf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dfacb );return nil ,_dfacb ;};};if !opts .SkipOutlines {_ageb .AddOutlineTree (_fcagf .GetOutlineTree ());};if !opts .SkipOCProperties {_daebc ,_dbeec :=_fcagf .GetOCProperties ();
if _dbeec !=nil {_gcf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dbeec );}else {_dbeec =_ageb .SetOCProperties (_daebc );if _dbeec !=nil {_gcf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dbeec );};};};if !opts .SkipPageLabels {_afdge ,_dace :=_fcagf .GetPageLabels ();
if _dace !=nil {_gcf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dace );}else {_dace =_ageb .SetPageLabels (_afdge );if _dace !=nil {_gcf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dace );};};};if !opts .SkipNamedDests {_agae ,_fbddg :=_fcagf .GetNamedDestinations ();
if _fbddg !=nil {_gcf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fbddg );}else {_fbddg =_ageb .SetNamedDestinations (_agae );if _fbddg !=nil {_gcf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fbddg );};};};if !opts .SkipNameDictionary {_bebgg ,_ecbgb :=_fcagf .GetNameDictionary ();
if _ecbgb !=nil {_gcf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ecbgb );}else {_ecbgb =_ageb .SetNameDictionary (_bebgg );if _ecbgb !=nil {_gcf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ecbgb );};};};if !opts .SkipRotation &&_fcagf .Rotate !=nil {if _bfbbb :=_ageb .SetRotation (*_fcagf .Rotate );
_bfbbb !=nil {_gcf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bfbbb );};};return &_ageb ,nil ;};

// GetCatalogMetadata gets the catalog defined XMP Metadata.
func (_dgbac *PdfReader )GetCatalogMetadata ()(_bbe .PdfObject ,bool ){if _dgbac ._cagcc ==nil {return nil ,false ;};_dgcef :=_dgbac ._cagcc .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return _dgcef ,_dgcef !=nil ;};func (_ceee *LTV )generateVRIKey (_cccde *PdfSignature )(string ,error ){_fgec ,_gbbf :=_gaegbd (_cccde .Contents .Bytes ());
if _gbbf !=nil {return "",_gbbf ;};return _df .ToUpper (_gf .EncodeToString (_fgec )),nil ;};

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _bbe .PdfObject ;H _bbe .PdfObject ;};

// ColorToRGB converts a Lab color to an RGB color.
func (_dccf *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_bbfac :=func (_fdaa float64 )float64 {if _fdaa >=6.0/29{return _fdaa *_fdaa *_fdaa ;};return 108.0/841*(_fdaa -4.0/29.0);};_ccef ,_feed :=color .(*PdfColorLab );if !_feed {_gcf .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");
return nil ,_cc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_ccef .L ();AStar :=_ccef .A ();BStar :=_ccef .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;
X :=_dccf .WhitePoint [0]*_bbfac (L );Y :=_dccf .WhitePoint [1]*_bbfac (M );Z :=_dccf .WhitePoint [2]*_bbfac (N );_fgg :=3.240479*X +-1.537150*Y +-0.498535*Z ;_cabc :=-0.969256*X +1.875992*Y +0.041556*Z ;_fded :=0.055648*X +-0.204043*Y +1.057311*Z ;_fgg =_ab .Min (_ab .Max (_fgg ,0),1.0);
_cabc =_ab .Min (_ab .Max (_cabc ,0),1.0);_fded =_ab .Min (_ab .Max (_fded ,0),1.0);return NewPdfColorDeviceRGB (_fgg ,_cabc ,_fded ),nil ;};func (_gegb *PdfReader )newPdfActionGoTo3DViewFromDict (_fdc *_bbe .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_fdc .Get ("\u0054\u0041"),V :_fdc .Get ("\u0056")},nil ;
};func (_dgadg *pdfFontType3 )baseFields ()*fontCommon {return &_dgadg .fontCommon };type pdfCIDFontType0 struct{fontCommon ;_dgdfa *_bbe .PdfIndirectObject ;_afagd _ff .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_bbe .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _bbe .PdfObject ;W _bbe .PdfObject ;DW2 _bbe .PdfObject ;W2 _bbe .PdfObject ;_cedcg map[_ff .CharCode ]float64 ;_eege float64 ;};

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_ecee *pdfCIDFontType2 )ToPdfObject ()_bbe .PdfObject {if _ecee ._cbcca ==nil {_ecee ._cbcca =&_bbe .PdfIndirectObject {};};_fdgdf :=_ecee .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");
_ecee ._cbcca .PdfObject =_fdgdf ;if _ecee .CIDSystemInfo !=nil {_fdgdf .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_ecee .CIDSystemInfo );};if _ecee .DW !=nil {_fdgdf .Set ("\u0044\u0057",_ecee .DW );};if _ecee .DW2 !=nil {_fdgdf .Set ("\u0044\u0057\u0032",_ecee .DW2 );
};if _ecee .W !=nil {_fdgdf .Set ("\u0057",_ecee .W );};if _ecee .W2 !=nil {_fdgdf .Set ("\u0057\u0032",_ecee .W2 );};if _ecee .CIDToGIDMap !=nil {_fdgdf .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_ecee .CIDToGIDMap );};return _ecee ._cbcca ;
};

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_cacfd *PdfPageResources )GenerateXObjectName ()_bbe .PdfObjectName {_agcgf :=1;for {_gccef :=_bbe .MakeName (_g .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_agcgf ));if !_cacfd .HasXObjectByName (*_gccef ){return *_gccef ;};_agcgf ++;};};

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_gefea *PdfFont )BytesToCharcodes (data []byte )[]_ff .CharCode {_gcf .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );
if _baef ,_cddc :=_gefea ._afag .(*pdfFontType0 );_cddc &&_baef ._cfeba !=nil {if _degfb ,_agffb :=_baef .bytesToCharcodes (data );_agffb {return _degfb ;};};var (_fggg =make ([]_ff .CharCode ,0,len (data )+len (data )%2);_egga =_gefea .baseFields (););
if _egga ._ggdec !=nil {if _dgea ,_ffcb :=_egga ._ggdec .BytesToCharcodes (data );_ffcb {for _ ,_bcce :=range _dgea {_fggg =append (_fggg ,_ff .CharCode (_bcce ));};return _fggg ;};};if _egga .isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};};
if len (data )%2!=0{_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );
data =append (data ,0);};for _bcfc :=0;_bcfc < len (data );_bcfc +=2{_adca :=uint16 (data [_bcfc ])<<8|uint16 (data [_bcfc +1]);_fggg =append (_fggg ,_ff .CharCode (_adca ));};}else {for _ ,_ddeg :=range data {_fggg =append (_fggg ,_ff .CharCode (_ddeg ));
};};return _fggg ;};func _gbbb (_ffbadd *_bbe .PdfIndirectObject )(*PdfOutline ,error ){_afedg ,_fdda :=_ffbadd .PdfObject .(*_bbe .PdfObjectDictionary );if !_fdda {return nil ,_g .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_ggdcc :=NewPdfOutline ();if _effbb :=_afedg .Get ("\u0054\u0079\u0070\u0065");_effbb !=nil {_eedeb ,_cabga :=_effbb .(*_bbe .PdfObjectName );if _cabga {if *_eedeb !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_gcf .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_eedeb );
};};};if _gebce :=_afedg .Get ("\u0043\u006f\u0075n\u0074");_gebce !=nil {_aafdg ,_bfeac :=_bbe .GetNumberAsInt64 (_gebce );if _bfeac !=nil {return nil ,_bfeac ;};_ggdcc .Count =&_aafdg ;};return _ggdcc ,nil ;};

// Enable LTV enables the specified signature. The signing certificate
// chain is extracted from the signature dictionary. Optionally, additional
// certificates can be specified through the `extraCerts` parameter.
// The LTV client attempts to build the certificate chain up to a trusted root
// by downloading any missing certificates.
func (_egcb *LTV )Enable (sig *PdfSignature ,extraCerts []*_gg .Certificate )error {if _bgeea :=_egcb .validateSig (sig );_bgeea !=nil {return _bgeea ;};_beaaa ,_cdeg :=_egcb .generateVRIKey (sig );if _cdeg !=nil {return _cdeg ;};if _ ,_gdef :=_egcb ._afgee .VRI [_beaaa ];
_gdef &&_egcb .SkipExisting {return nil ;};_gebdb ,_cdeg :=sig .GetCerts ();if _cdeg !=nil {return _cdeg ;};return _egcb .enable (_gebdb ,extraCerts ,_beaaa );};

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_gcbbf *Image )ConvertToBinary ()error {if _gcbbf .ColorComponents ==1&&_gcbbf .BitsPerComponent ==1{return nil ;};_adgbef ,_cfff :=_gcbbf .ToGoImage ();if _cfff !=nil {return _cfff ;};_adfdg ,_cfff :=_gb .MonochromeConverter .Convert (_adgbef );
if _cfff !=nil {return _cfff ;};_gcbbf .Data =_adfdg .Base ().Data ;_gcbbf ._gagad ,_cfff =_gb .ScaleAlphaToMonochrome (_gcbbf ._gagad ,int (_gcbbf .Width ),int (_gcbbf .Height ));if _cfff !=nil {return _cfff ;};_gcbbf .BitsPerComponent =1;_gcbbf .ColorComponents =1;
_gcbbf ._eacbf =nil ;return nil ;};

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_bbe .PdfObject ;};

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};

// ImageToRGB convert an indexed image to RGB.
func (_eagg *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_eagg .Base .GetNumComponents ();if N < 1{return Image {},_g .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );
};_edff :=_gb .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._gagad ,img ._eacbf );_fafd :=_dfc .NewReader (img .getBase ());_affea :=_dfc .NewWriter (_edff );var (_dagdf uint32 ;_dfbeg int ;_agba error ;);for {_dagdf ,_agba =_fafd .ReadSample ();
if _agba ==_geb .EOF {break ;}else if _agba !=nil {return img ,_agba ;};_dfbeg =int (_dagdf );_gcf .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_dfbeg ,N ,len (_eagg ._gbcdg ));
if (_dfbeg +1)*N > len (_eagg ._gbcdg ){_dfbeg =len (_eagg ._gbcdg )/N -1;_gcf .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_dfbeg );if _dfbeg < 0{_gcf .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");
break ;};};for _ffgc :=_dfbeg *N ;_ffgc < (_dfbeg +1)*N ;_ffgc ++{if _agba =_affea .WriteSample (uint32 (_eagg ._gbcdg [_ffgc ]));_agba !=nil {return img ,_agba ;};};};return _eagg .Base .ImageToRGB (_gdbea (&_edff ));};var _ pdfFont =(*pdfFontType0 )(nil );


// GetContainingPdfObject implements interface PdfModel.
func (_gagcc *Permissions )GetContainingPdfObject ()_bbe .PdfObject {return _gagcc ._bddcd };

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_bbe .PdfObjectStream ;Data []byte ;_febg *_bbe .PdfIndirectObject ;_dfac *_bbe .PdfObjectStream ;};func (_cggcb PdfFont )actualFont ()pdfFont {if _cggcb ._afag ==nil {_gcf .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_cggcb );
};return _cggcb ._afag ;};

// ValidateSignatures validates digital signatures in the document.
func (_agbefd *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _agbefd .AcroForm ==nil {return nil ,nil ;};if _agbefd .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_gdfgd *PdfSignature ;
_gfddgg *PdfField ;_ccgeb SignatureHandler ;};var _gfggc []*sigFieldPair ;for _ ,_dagca :=range _agbefd .AcroForm .AllFields (){if _dagca .V ==nil {continue ;};if _dbdb ,_bbcgc :=_bbe .GetDict (_dagca .V );_bbcgc {if _fedfcd ,_fdae :=_bbe .GetNameVal (_dbdb .Get ("\u0054\u0079\u0070\u0065"));
_fdae &&(_fedfcd =="\u0053\u0069\u0067"||_fedfcd =="\u0044\u006f\u0063T\u0069\u006d\u0065\u0053\u0074\u0061\u006d\u0070"){_dfabg ,_badcc :=_bbe .GetIndirect (_dagca .V );if !_badcc {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");
return nil ,ErrTypeCheck ;};_feaee ,_bdfcg :=_agbefd .newPdfSignatureFromIndirect (_dfabg );if _bdfcg !=nil {return nil ,_bdfcg ;};var _dbdgf SignatureHandler ;for _ ,_fgad :=range handlers {if _fgad .IsApplicable (_feaee ){_dbdgf =_fgad ;break ;};};_gfggc =append (_gfggc ,&sigFieldPair {_gdfgd :_feaee ,_gfddgg :_dagca ,_ccgeb :_dbdgf });
};};};var _adeea []SignatureValidationResult ;for _ ,_ccbea :=range _gfggc {_agcafa :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_ccbea ._gfddgg }};if _ccbea ._ccgeb ==nil {_agcafa .Errors =append (_agcafa .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
_adeea =append (_adeea ,_agcafa );continue ;};_afcdef ,_bcabf :=_ccbea ._ccgeb .NewDigest (_ccbea ._gdfgd );if _bcabf !=nil {_agcafa .Errors =append (_agcafa .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_bcabf .Error ());
_adeea =append (_adeea ,_agcafa );continue ;};_bgcb :=_ccbea ._gdfgd .ByteRange ;if _bgcb ==nil {_agcafa .Errors =append (_agcafa .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");_adeea =append (_adeea ,_agcafa );
continue ;};for _dfbfg :=0;_dfbfg < _bgcb .Len ();_dfbfg =_dfbfg +2{_dccfb ,_ :=_bbe .GetNumberAsInt64 (_bgcb .Get (_dfbfg ));_bebedg ,_ :=_bbe .GetIntVal (_bgcb .Get (_dfbfg +1));if _ ,_aaadg :=_agbefd ._bdfdg .Seek (_dccfb ,_geb .SeekStart );_aaadg !=nil {return nil ,_aaadg ;
};_cfcf :=make ([]byte ,_bebedg );if _ ,_acgdb :=_agbefd ._bdfdg .Read (_cfcf );_acgdb !=nil {return nil ,_acgdb ;};_afcdef .Write (_cfcf );};var _adgcf SignatureValidationResult ;if _dbceb ,_faefe :=_ccbea ._ccgeb .(SignatureHandlerDocMDP );_faefe {_adgcf ,_bcabf =_dbceb .ValidateWithOpts (_ccbea ._gdfgd ,_afcdef ,SignatureHandlerDocMDPParams {Parser :_agbefd ._ffgcd });
}else {_adgcf ,_bcabf =_ccbea ._ccgeb .Validate (_ccbea ._gdfgd ,_afcdef );};if _bcabf !=nil {_gcf .Log .Debug ("E\u0052\u0052\u004f\u0052: \u0025v\u0020\u0028\u0025\u0054\u0029 \u002d\u0020\u0073\u006b\u0069\u0070",_bcabf ,_ccbea ._ccgeb );_adgcf .Errors =append (_adgcf .Errors ,_bcabf .Error ());
};_adgcf .Name =_ccbea ._gdfgd .Name .Decoded ();_adgcf .Reason =_ccbea ._gdfgd .Reason .Decoded ();if _ccbea ._gdfgd .M !=nil {_ddffda ,_efggcc :=NewPdfDate (_ccbea ._gdfgd .M .String ());if _efggcc !=nil {_gcf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_efggcc );
_adgcf .Errors =append (_adgcf .Errors ,_efggcc .Error ());continue ;};_adgcf .Date =_ddffda ;};_adgcf .ContactInfo =_ccbea ._gdfgd .ContactInfo .Decoded ();_adgcf .Location =_ccbea ._gdfgd .Location .Decoded ();_adgcf .Fields =_agcafa .Fields ;_adeea =append (_adeea ,_adgcf );
};return _adeea ,nil ;};

// K returns the value of the key component of the color.
func (_cdbae *PdfColorDeviceCMYK )K ()float64 {return _cdbae [3]};func (_ffbad *PdfAcroForm )fill (_fced FieldValueProvider ,_gadfe FieldAppearanceGenerator )error {if _ffbad ==nil {return nil ;};_eaebc ,_adgbe :=_fced .FieldValues ();if _adgbe !=nil {return _adgbe ;
};for _ ,_eedbc :=range _ffbad .AllFields (){_acfeg :=_eedbc .PartialName ();_gedff ,_agbaf :=_eaebc [_acfeg ];if !_agbaf {if _bbgge ,_gccee :=_eedbc .FullName ();_gccee ==nil {_gedff ,_agbaf =_eaebc [_bbgge ];};};if !_agbaf {_gcf .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_acfeg );
continue ;};if _bfbc :=_cdeef (_eedbc ,_gedff );_bfbc !=nil {return _bfbc ;};if _gadfe ==nil {continue ;};for _ ,_ggcab :=range _eedbc .Annotations {_cfcgc ,_cbdfb :=_gadfe .GenerateAppearanceDict (_ffbad ,_eedbc ,_ggcab );if _cbdfb !=nil {return _cbdfb ;
};_ggcab .AP =_cfcgc ;_ggcab .ToPdfObject ();};};return nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_efae *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_bbe .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_cc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ggcad ,_gegbb :=_bbe .GetNumbersAsFloat (objects );
if _gegbb !=nil {return nil ,_gegbb ;};return _efae .ColorFromFloats (_ggcad );};func _fbffc (_dabdd []*_bbe .PdfObjectStream )*_bbe .PdfObjectArray {if len (_dabdd )==0{return nil ;};_egaag :=make ([]_bbe .PdfObject ,0,len (_dabdd ));for _ ,_eadbd :=range _dabdd {_egaag =append (_egaag ,_eadbd );
};return _bbe .MakeArray (_egaag ...);};

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_adcag PdfModel ;_agefc _bbe .PdfObject ;};

// GetVersion gets the document version.
func (_degfa *PdfWriter )GetVersion ()_bbe .Version {return _degfa ._dfadc };

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_fbag pdfCIDFontType0 )GetRuneMetrics (r rune )(_bfg .CharMetrics ,bool ){return _bfg .CharMetrics {Wx :_fbag ._eege },true ;};

// R returns the value of the red component of the color.
func (_bgdb *PdfColorDeviceRGB )R ()float64 {return _bgdb [0]};func (_feb *PdfReader )newPdfActionJavaScriptFromDict (_faa *_bbe .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_faa .Get ("\u004a\u0053")},nil ;};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_gggb *PdfAppender )UpdateObject (obj _bbe .PdfObject ){_gggb .replaceObject (obj ,obj );if _ ,_fbdd :=_gggb ._ggee [obj ];!_fbdd {_gggb ._cada =append (_gggb ._cada ,obj );_gggb ._ggee [obj ]=struct{}{};};};func (_edaeg *PdfReader )newPdfAnnotationWatermarkFromDict (_bccc *_bbe .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_aea :=PdfAnnotationWatermark {};
_aea .FixedPrint =_bccc .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");return &_aea ,nil ;};

// GetPage returns the PdfPage model for the specified page number.
func (_dfgbd *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _dfgbd ._ffgcd .GetCrypter ()!=nil &&!_dfgbd ._ffgcd .IsAuthenticated (){return nil ,_g .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};if len (_dfgbd ._cfgf )< pageNumber {return nil ,_cc .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");
};_gedbb :=pageNumber -1;if _gedbb < 0{return nil ,_g .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_acccb :=_dfgbd .PageList [_gedbb ];
return _acccb ,nil ;};func (_ddac *PdfReader )newPdfAnnotationMovieFromDict (_gfeb *_bbe .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_fcef :=PdfAnnotationMovie {};_fcef .T =_gfeb .Get ("\u0054");_fcef .Movie =_gfeb .Get ("\u004d\u006f\u0076i\u0065");
_fcef .A =_gfeb .Get ("\u0041");return &_fcef ,nil ;};

// ToInteger convert to an integer format.
func (_feefe *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_babc :=_ab .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_babc *_feefe .R ()),uint32 (_babc *_feefe .G ()),uint32 (_babc *_feefe .B ())};};

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_bgg :=NewPdfAction ();_fd :=&PdfActionGoTo {};_fd .PdfAction =_bgg ;_bgg .SetContext (_fd );return _fd ;};

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_bgba *Image )ToJBIG2Image ()(*_bbe .JBIG2Image ,error ){_fdgcg ,_bggcd :=_bgba .ToGoImage ();if _bggcd !=nil {return nil ,_bggcd ;};return _bbe .GoImageToJBIG2 (_fdgcg ,_bbe .JB2ImageAutoThreshold );};func _dbgcc (_fbca _bbe .PdfObject ,_adfce *fontCommon )(*_fb .CMap ,error ){_bbeg ,_fedge :=_bbe .GetStream (_fbca );
if !_fedge {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_fbca );
return nil ,_bbe .ErrTypeError ;};_acef ,_cgbg :=_bbe .DecodeStream (_bbeg );if _cgbg !=nil {return nil ,_cgbg ;};_bfdbf ,_cgbg :=_fb .LoadCmapFromData (_acef ,!_adfce .isCIDFont ());if _cgbg !=nil {_gcf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_bbeg .ObjectNumber ,_cgbg );
};return _bfdbf ,_cgbg ;};func (_afcca *PdfShading )getShadingDict ()(*_bbe .PdfObjectDictionary ,error ){_egbfd :=_afcca ._eecbb ;if _dege ,_efge :=_egbfd .(*_bbe .PdfIndirectObject );_efge {_bbaeb ,_decgf :=_dege .PdfObject .(*_bbe .PdfObjectDictionary );
if !_decgf {return nil ,_bbe .ErrTypeError ;};return _bbaeb ,nil ;}else if _decbc ,_fecg :=_egbfd .(*_bbe .PdfObjectStream );_fecg {return _decbc .PdfObjectDictionary ,nil ;}else if _dgbgb ,_fbgaf :=_egbfd .(*_bbe .PdfObjectDictionary );_fbgaf {return _dgbgb ,nil ;
}else {_gcf .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");return nil ,_bbe .ErrTypeError ;};};

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_aeb :=NewPdfAnnotation ();_faab :=&PdfAnnotationCaret {};_faab .PdfAnnotation =_aeb ;_faab .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_aeb .SetContext (_faab );return _faab ;};func (_dddec *PdfWriter )adjustXRefAffectedVersion (_gdbgg bool ){if _gdbgg &&_dddec ._dfadc .Major ==1&&_dddec ._dfadc .Minor < 5{_dddec ._dfadc .Minor =5;
};};

// HasShadingByName checks whether a shading is defined by the specified keyName.
func (_aefcd *PdfPageResources )HasShadingByName (keyName _bbe .PdfObjectName )bool {_ ,_dbfbe :=_aefcd .GetShadingByName (keyName );return _dbfbe ;};

// ToPdfObject returns a PDF object representation of the outline.
func (_fcad *Outline )ToPdfObject ()_bbe .PdfObject {return _fcad .ToPdfOutline ().ToPdfObject ()};func (_afbfdc *LTV )getCerts (_ccceb []*_gg .Certificate )([][]byte ,error ){_eagbd :=make ([][]byte ,0,len (_ccceb ));for _ ,_bbefe :=range _ccceb {_eagbd =append (_eagbd ,_bbefe .Raw );
};return _eagbd ,nil ;};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_aecgf *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _aecgf ._eeeeb !=nil {return _aecgf ._eeeeb ,nil ;};if _aecgf .Annots ==nil {_aecgf ._eeeeb =[]*PdfAnnotation {};return nil ,nil ;};if _aecgf ._cbged ==nil {_aecgf ._eeeeb =[]*PdfAnnotation {};
return nil ,nil ;};_agcfd ,_bfecf :=_aecgf ._cbged .loadAnnotations (_aecgf .Annots );if _bfecf !=nil {return nil ,_bfecf ;};if _agcfd ==nil {_aecgf ._eeeeb =[]*PdfAnnotation {};};_aecgf ._eeeeb =_agcfd ;return _aecgf ._eeeeb ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_fdca *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_cffc :=&PdfColorspaceLab {};_cffc .BlackPoint =[]float64 {0.0,0.0,0.0};_cffc .Range =[]float64 {-100,100,-100,100};return _cffc ;};

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_edaeb *_bbe .PdfObjectDictionary ;_geaf *_bbe .PdfIndirectObject ;};

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_ebbdf interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};

// ToPdfObject implements interface PdfModel.
func (_gaeg *PdfAnnotationStamp )ToPdfObject ()_bbe .PdfObject {_gaeg .PdfAnnotation .ToPdfObject ();_bgcdf :=_gaeg ._dbg ;_cade :=_bgcdf .PdfObject .(*_bbe .PdfObjectDictionary );_gaeg .PdfAnnotationMarkup .appendToPdfDictionary (_cade );_cade .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbe .MakeName ("\u0053\u0074\u0061m\u0070"));
_cade .SetIfNotNil ("\u004e\u0061\u006d\u0065",_gaeg .Name );return _bgcdf ;};

// SetOCProperties sets the optional content properties.
func (_begfc *PdfWriter )SetOCProperties (ocProperties _bbe .PdfObject )error {_dfgdd :=_begfc ._bgdee ;if ocProperties !=nil {_gcf .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");
_dfgdd .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _begfc .addObjects (ocProperties );};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_fbaa *PdfAnnotationPolyLine )ToPdfObject ()_bbe .PdfObject {_fbaa .PdfAnnotation .ToPdfObject ();_cdff :=_fbaa ._dbg ;_dcfa :=_cdff .PdfObject .(*_bbe .PdfObjectDictionary );_fbaa .PdfAnnotationMarkup .appendToPdfDictionary (_dcfa );_dcfa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbe .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));
_dcfa .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_fbaa .Vertices );_dcfa .SetIfNotNil ("\u004c\u0045",_fbaa .LE );_dcfa .SetIfNotNil ("\u0042\u0053",_fbaa .BS );_dcfa .SetIfNotNil ("\u0049\u0043",_fbaa .IC );_dcfa .SetIfNotNil ("\u0042\u0045",_fbaa .BE );
_dcfa .SetIfNotNil ("\u0049\u0054",_fbaa .IT );_dcfa .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_fbaa .Measure );return _cdff ;};

// GetOutlineTree returns the outline tree.
func (_abddg *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _abddg ._adeab };

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_fgde *XObjectForm )SetContentStream (content []byte ,encoder _bbe .StreamEncoder )error {_cgaed :=content ;if encoder ==nil {if _fgde .Filter !=nil {encoder =_fgde .Filter ;}else {encoder =_bbe .NewRawEncoder ();};};_fegf ,_dgcaa :=encoder .EncodeBytes (_cgaed );
if _dgcaa !=nil {return _dgcaa ;};_cgaed =_fegf ;_fgde .Stream =_cgaed ;_fgde .Filter =encoder ;return nil ;};

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//   // Convert RGB image to grayscale.
//   rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//   grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//   if err != nil {
//     return err
//   }
//   // Resample as 1 bit.
//   grayImage.Resample(1)
func (_abgc *Image )Resample (targetBitsPerComponent int64 ){if _abgc .BitsPerComponent ==targetBitsPerComponent {return ;};_begb :=_abgc .GetSamples ();if targetBitsPerComponent < _abgc .BitsPerComponent {_cgbfcg :=_abgc .BitsPerComponent -targetBitsPerComponent ;
for _ebbf :=range _begb {_begb [_ebbf ]>>=uint (_cgbfcg );};}else if targetBitsPerComponent > _abgc .BitsPerComponent {_cdgcf :=targetBitsPerComponent -_abgc .BitsPerComponent ;for _ffgb :=range _begb {_begb [_ffgb ]<<=uint (_cdgcf );};};_abgc .BitsPerComponent =targetBitsPerComponent ;
if _abgc .BitsPerComponent < 8{_abgc .resampleLowBits (_begb );return ;};_eaagb :=_gb .BytesPerLine (int (_abgc .Width ),int (_abgc .BitsPerComponent ),_abgc .ColorComponents );_abgf :=make ([]byte ,_eaagb *int (_abgc .Height ));var (_cdeed ,_eedf ,_ageaa ,_aegg int ;
_dgbfe uint32 ;);for _ageaa =0;_ageaa < int (_abgc .Height );_ageaa ++{_cdeed =_ageaa *_eaagb ;_eedf =(_ageaa +1)*_eaagb -1;_deaee :=_dfc .ResampleUint32 (_begb [_cdeed :_eedf ],int (targetBitsPerComponent ),8);for _aegg ,_dgbfe =range _deaee {_abgf [_aegg +_cdeed ]=byte (_dgbfe );
};};_abgc .Data =_abgf ;};

// PdfVersion returns version of the PDF file.
func (_dbebb *PdfReader )PdfVersion ()_bbe .Version {return _dbebb ._ffgcd .PdfVersion ()};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_bbe .PdfObjectBool ;SigFlags *_bbe .PdfObjectInteger ;CO *_bbe .PdfObjectArray ;DR *PdfPageResources ;DA *_bbe .PdfObjectString ;Q *_bbe .PdfObjectInteger ;XFA _bbe .PdfObject ;

// ADBEEchoSign extra objects from Adobe Acrobat, causing signature invalid if not exists.
ADBEEchoSign _bbe .PdfObject ;_agbef *_bbe .PdfIndirectObject ;_dggd bool ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_cabb *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};func (_eafdae *PdfReader )traverseObjectData (_eccedf _bbe .PdfObject )error {return _bbe .ResolveReferencesDeep (_eccedf ,_eafdae ._beaad );};

// NewPdfOutputIntentFromPdfObject creates a new PdfOutputIntent from the input core.PdfObject.
func NewPdfOutputIntentFromPdfObject (object _bbe .PdfObject )(*PdfOutputIntent ,error ){_defag :=&PdfOutputIntent {};if _ffgfae :=_defag .ParsePdfObject (object );_ffgfae !=nil {return nil ,_ffgfae ;};return _defag ,nil ;};

// SetForms sets the Acroform for a PDF file.
func (_eaedg *PdfWriter )SetForms (form *PdfAcroForm )error {_eaedg ._aadb =form ;return nil };func (_ecff *PdfAppender )updateObjectsDeep (_aacg _bbe .PdfObject ,_ddbgg map[_bbe .PdfObject ]struct{}){if _ddbgg ==nil {_ddbgg =map[_bbe .PdfObject ]struct{}{};
};if _ ,_dbdg :=_ddbgg [_aacg ];_dbdg ||_aacg ==nil {return ;};_ddbgg [_aacg ]=struct{}{};_ffdf :=_bbe .ResolveReferencesDeep (_aacg ,_ecff ._adbcd );if _ffdf !=nil {_gcf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ffdf );};switch _bfab :=_aacg .(type ){case *_bbe .PdfIndirectObject :switch {case _bfab .GetParser ()==_ecff ._aeaa ._ffgcd :return ;
case _bfab .GetParser ()==_ecff .Reader ._ffgcd :_afafe ,_ :=_ecff ._aeaa .GetIndirectObjectByNumber (int (_bfab .ObjectNumber ));_eabc ,_fbde :=_afafe .(*_bbe .PdfIndirectObject );if _fbde &&_eabc !=nil {if _eabc .PdfObject !=_bfab .PdfObject &&_eabc .PdfObject .WriteString ()!=_bfab .PdfObject .WriteString (){_ecff .addNewObject (_aacg );
_ecff ._aggfg [_aacg ]=_bfab .ObjectNumber ;};};default:_ecff .addNewObject (_aacg );};_ecff .updateObjectsDeep (_bfab .PdfObject ,_ddbgg );case *_bbe .PdfObjectArray :for _ ,_baec :=range _bfab .Elements (){_ecff .updateObjectsDeep (_baec ,_ddbgg );};
case *_bbe .PdfObjectDictionary :for _ ,_edac :=range _bfab .Keys (){_ecff .updateObjectsDeep (_bfab .Get (_edac ),_ddbgg );};case *_bbe .PdfObjectStreams :if _bfab .GetParser ()!=_ecff ._aeaa ._ffgcd {for _ ,_cefd :=range _bfab .Elements (){_ecff .updateObjectsDeep (_cefd ,_ddbgg );
};};case *_bbe .PdfObjectStream :switch {case _bfab .GetParser ()==_ecff ._aeaa ._ffgcd :return ;case _bfab .GetParser ()==_ecff .Reader ._ffgcd :if _aeff ,_gba :=_ecff ._aeaa ._ffgcd .LookupByReference (_bfab .PdfObjectReference );_gba ==nil {var _bbde bool ;
if _dbcg ,_edad :=_bbe .GetStream (_aeff );_edad &&_cf .Equal (_dbcg .Stream ,_bfab .Stream ){_bbde =true ;};if _ebdb ,_ggdf :=_bbe .GetDict (_aeff );_bbde &&_ggdf {_bbde =_ebdb .WriteString ()==_bfab .PdfObjectDictionary .WriteString ();};if _bbde {return ;
};};if _bfab .ObjectNumber !=0{_ecff ._aggfg [_aacg ]=_bfab .ObjectNumber ;};default:if _ ,_dgdf :=_ecff ._ggee [_aacg ];!_dgdf {_ecff .addNewObject (_aacg );};};_ecff .updateObjectsDeep (_bfab .PdfObjectDictionary ,_ddbgg );};};

// ToPdfObject returns a PDF object representation of the outline destination.
func (_eafg OutlineDest )ToPdfObject ()_bbe .PdfObject {if (_eafg .PageObj ==nil &&_eafg .Page < 0)||_eafg .Mode ==""{return _bbe .MakeNull ();};_abgeb :=_bbe .MakeArray ();if _eafg .PageObj !=nil {_abgeb .Append (_eafg .PageObj );}else {_abgeb .Append (_bbe .MakeInteger (_eafg .Page ));
};_abgeb .Append (_bbe .MakeName (_eafg .Mode ));switch _eafg .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_abgeb .Append (_bbe .MakeFloat (_eafg .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_abgeb .Append (_bbe .MakeFloat (_eafg .X ));
case "\u0058\u0059\u005a":_abgeb .Append (_bbe .MakeFloat (_eafg .X ));_abgeb .Append (_bbe .MakeFloat (_eafg .Y ));_abgeb .Append (_bbe .MakeFloat (_eafg .Zoom ));default:_abgeb .Set (1,_bbe .MakeName ("\u0046\u0069\u0074"));};return _abgeb ;};func (_fedbd *PdfWriter )writeObjects (){_gcf .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_fedbd ._ageab ));
_fedbd ._cffgb =make (map[int ]crossReference );_fedbd ._cffgb [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};if _fedbd ._efbgg .ObjectMap !=nil {for _dgacdb ,_adgfc :=range _fedbd ._efbgg .ObjectMap {if _dgacdb ==0{continue ;};if _adgfc .XType ==_bbe .XrefTypeObjectStream {_ffbeef :=crossReference {Type :2,ObjectNumber :_adgfc .OsObjNumber ,Index :_adgfc .OsObjIndex };
_fedbd ._cffgb [_dgacdb ]=_ffbeef ;};if _adgfc .XType ==_bbe .XrefTypeTableEntry {_adfg :=crossReference {Type :1,ObjectNumber :_adgfc .ObjectNumber ,Offset :_adgfc .Offset };_fedbd ._cffgb [_dgacdb ]=_adfg ;};};};};

// ToPdfObject returns the button field dictionary within an indirect object.
func (_eccb *PdfFieldButton )ToPdfObject ()_bbe .PdfObject {_eccb .PdfField .ToPdfObject ();_dbcf :=_eccb ._acga ;_bbdca :=_dbcf .PdfObject .(*_bbe .PdfObjectDictionary );_bbdca .Set ("\u0046\u0054",_bbe .MakeName ("\u0042\u0074\u006e"));if _eccb .Opt !=nil {_bbdca .Set ("\u004f\u0070\u0074",_eccb .Opt );
};return _dbcf ;};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _bad .Permissions ;Algorithm EncryptionAlgorithm ;};

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _geb .ReadSeeker )(*PdfReader ,error ){const _begcgb ="\u006do\u0064e\u006c\u003a\u004e\u0065\u0077P\u0064\u0066R\u0065\u0061\u0064\u0065\u0072";return _cbab (rs ,&ReaderOpts {},false ,_begcgb );};func (_ggeg *PdfReader )newPdfActionFromIndirectObject (_fdg *_bbe .PdfIndirectObject )(*PdfAction ,error ){_deee ,_fce :=_fdg .PdfObject .(*_bbe .PdfObjectDictionary );
if !_fce {return nil ,_g .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_ggeg ._ffgae .GetModelFromPrimitive (_deee );model !=nil {_agd ,_bbd :=model .(*PdfAction );if !_bbd {return nil ,_g .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");
};return _agd ,nil ;};_ed :=&PdfAction {};_ed ._be =_fdg ;_ggeg ._ffgae .Register (_deee ,_ed );if _cfd :=_deee .Get ("\u0054\u0079\u0070\u0065");_cfd !=nil {_ega ,_cge :=_cfd .(*_bbe .PdfObjectName );if !_cge {_gcf .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_cfd );
}else {if *_ega !="\u0041\u0063\u0074\u0069\u006f\u006e"{_gcf .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_ega );
};_ed .Type =_ega ;};};if _abdg :=_deee .Get ("\u004e\u0065\u0078\u0074");_abdg !=nil {_ed .Next =_abdg ;};if _ggec :=_deee .Get ("\u0053");_ggec !=nil {_ed .S =_ggec ;};_ecf ,_cfcg :=_ed .S .(*_bbe .PdfObjectName );if !_cfcg {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_ed .S );
return nil ,_g .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_ed .S );};_dfa :=PdfActionType (_ecf .String ());switch _dfa {case ActionTypeGoTo :_bbf ,_gdd :=_ggeg .newPdfActionGotoFromDict (_deee );
if _gdd !=nil {return nil ,_gdd ;};_bbf .PdfAction =_ed ;_ed ._gfc =_bbf ;return _ed ,nil ;case ActionTypeGoToR :_baa ,_bcg :=_ggeg .newPdfActionGotoRFromDict (_deee );if _bcg !=nil {return nil ,_bcg ;};_baa .PdfAction =_ed ;_ed ._gfc =_baa ;return _ed ,nil ;
case ActionTypeGoToE :_fcf ,_ddff :=_ggeg .newPdfActionGotoEFromDict (_deee );if _ddff !=nil {return nil ,_ddff ;};_fcf .PdfAction =_ed ;_ed ._gfc =_fcf ;return _ed ,nil ;case ActionTypeLaunch :_afa ,_edg :=_ggeg .newPdfActionLaunchFromDict (_deee );if _edg !=nil {return nil ,_edg ;
};_afa .PdfAction =_ed ;_ed ._gfc =_afa ;return _ed ,nil ;case ActionTypeThread :_fdd ,_cgac :=_ggeg .newPdfActionThreadFromDict (_deee );if _cgac !=nil {return nil ,_cgac ;};_fdd .PdfAction =_ed ;_ed ._gfc =_fdd ;return _ed ,nil ;case ActionTypeURI :_ege ,_cgg :=_ggeg .newPdfActionURIFromDict (_deee );
if _cgg !=nil {return nil ,_cgg ;};_ege .PdfAction =_ed ;_ed ._gfc =_ege ;return _ed ,nil ;case ActionTypeSound :_geg ,_cbg :=_ggeg .newPdfActionSoundFromDict (_deee );if _cbg !=nil {return nil ,_cbg ;};_geg .PdfAction =_ed ;_ed ._gfc =_geg ;return _ed ,nil ;
case ActionTypeMovie :_bec ,_agee :=_ggeg .newPdfActionMovieFromDict (_deee );if _agee !=nil {return nil ,_agee ;};_bec .PdfAction =_ed ;_ed ._gfc =_bec ;return _ed ,nil ;case ActionTypeHide :_egdg ,_afb :=_ggeg .newPdfActionHideFromDict (_deee );if _afb !=nil {return nil ,_afb ;
};_egdg .PdfAction =_ed ;_ed ._gfc =_egdg ;return _ed ,nil ;case ActionTypeNamed :_dae ,_eed :=_ggeg .newPdfActionNamedFromDict (_deee );if _eed !=nil {return nil ,_eed ;};_dae .PdfAction =_ed ;_ed ._gfc =_dae ;return _ed ,nil ;case ActionTypeSubmitForm :_bea ,_aeg :=_ggeg .newPdfActionSubmitFormFromDict (_deee );
if _aeg !=nil {return nil ,_aeg ;};_bea .PdfAction =_ed ;_ed ._gfc =_bea ;return _ed ,nil ;case ActionTypeResetForm :_efd ,_ceg :=_ggeg .newPdfActionResetFormFromDict (_deee );if _ceg !=nil {return nil ,_ceg ;};_efd .PdfAction =_ed ;_ed ._gfc =_efd ;return _ed ,nil ;
case ActionTypeImportData :_fef ,_egdc :=_ggeg .newPdfActionImportDataFromDict (_deee );if _egdc !=nil {return nil ,_egdc ;};_fef .PdfAction =_ed ;_ed ._gfc =_fef ;return _ed ,nil ;case ActionTypeSetOCGState :_egdb ,_efe :=_ggeg .newPdfActionSetOCGStateFromDict (_deee );
if _efe !=nil {return nil ,_efe ;};_egdb .PdfAction =_ed ;_ed ._gfc =_egdb ;return _ed ,nil ;case ActionTypeRendition :_aaf ,_baad :=_ggeg .newPdfActionRenditionFromDict (_deee );if _baad !=nil {return nil ,_baad ;};_aaf .PdfAction =_ed ;_ed ._gfc =_aaf ;
return _ed ,nil ;case ActionTypeTrans :_gddc ,_beae :=_ggeg .newPdfActionTransFromDict (_deee );if _beae !=nil {return nil ,_beae ;};_gddc .PdfAction =_ed ;_ed ._gfc =_gddc ;return _ed ,nil ;case ActionTypeGoTo3DView :_bdf ,_bgdg :=_ggeg .newPdfActionGoTo3DViewFromDict (_deee );
if _bgdg !=nil {return nil ,_bgdg ;};_bdf .PdfAction =_ed ;_ed ._gfc =_bdf ;return _ed ,nil ;case ActionTypeJavaScript :_gdf ,_afc :=_ggeg .newPdfActionJavaScriptFromDict (_deee );if _afc !=nil {return nil ,_afc ;};_gdf .PdfAction =_ed ;_ed ._gfc =_gdf ;
return _ed ,nil ;};_gcf .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_dfa );return nil ,nil ;};func (_fdgbd *PdfSignature )extractChainFromCert ()([]*_gg .Certificate ,error ){var _egfcf *_bbe .PdfObjectArray ;
switch _faag :=_fdgbd .Cert .(type ){case *_bbe .PdfObjectString :_egfcf =_bbe .MakeArray (_faag );case *_bbe .PdfObjectArray :_egfcf =_faag ;default:return nil ,_g .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u0065\u0072\u0074\u0069f\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_faag );
};var _fccga _cf .Buffer ;for _ ,_efcfg :=range _egfcf .Elements (){_bafaf ,_aaadb :=_bbe .GetString (_efcfg );if !_aaadb {return nil ,_g .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079p\u0065\u0020\u0069\u006e\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0063\u0065r\u0074\u0069\u0066\u0069c\u0061\u0074\u0065\u0020\u0063h\u0061\u0069\u006e\u003a\u0020\u0025\u0054",_efcfg );
};if _ ,_fbabf :=_fccga .Write (_bafaf .Bytes ());_fbabf !=nil {return nil ,_fbabf ;};};return _gg .ParseCertificates (_fccga .Bytes ());};

// Evaluate runs the function on the passed in slice and returns the results.
func (_daea *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_daea .NumInputs {_gcf .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");
return nil ,_cc .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _daea ._caedf ==nil {_abdag :=_daea .processSamples ();if _abdag !=nil {return nil ,_abdag ;};};_ddfd :=_daea .Encode ;if _ddfd ==nil {_ddfd =[]float64 {};
for _aeec :=0;_aeec < len (_daea .Size );_aeec ++{_ddfd =append (_ddfd ,0);_ddfd =append (_ddfd ,float64 (_daea .Size [_aeec ]-1));};};_eggg :=_daea .Decode ;if _eggg ==nil {_eggg =_daea .Range ;};_bfaa :=make ([]int ,len (x ));for _dccae :=0;_dccae < len (x );
_dccae ++{_dcfe :=x [_dccae ];_agcdc :=_ab .Min (_ab .Max (_dcfe ,_daea .Domain [2*_dccae ]),_daea .Domain [2*_dccae +1]);_bgdeb :=_gb .LinearInterpolate (_agcdc ,_daea .Domain [2*_dccae ],_daea .Domain [2*_dccae +1],_ddfd [2*_dccae ],_ddfd [2*_dccae +1]);
_ccaab :=_ab .Min (_ab .Max (_bgdeb ,0),float64 (_daea .Size [_dccae ]-1));_fgaee :=int (_ab .Floor (_ccaab +0.5));if _fgaee < 0{_fgaee =0;}else if _fgaee > _daea .Size [_dccae ]{_fgaee =_daea .Size [_dccae ]-1;};_bfaa [_dccae ]=_fgaee ;};_cfgcd :=_bfaa [0];
for _gcddd :=1;_gcddd < _daea .NumInputs ;_gcddd ++{_abdfc :=_bfaa [_gcddd ];for _cggdeb :=0;_cggdeb < _gcddd ;_cggdeb ++{_abdfc *=_daea .Size [_cggdeb ];};_cfgcd +=_abdfc ;};_cfgcd *=_daea .NumOutputs ;var _abded []float64 ;for _efggb :=0;_efggb < _daea .NumOutputs ;
_efggb ++{_abaf :=_cfgcd +_efggb ;if _abaf >=len (_daea ._caedf ){_gcf .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
continue ;};_caeag :=_daea ._caedf [_abaf ];_aaac :=_gb .LinearInterpolate (float64 (_caeag ),0,_ab .Pow (2,float64 (_daea .BitsPerSample )),_eggg [2*_efggb ],_eggg [2*_efggb +1]);_beff :=_ab .Min (_ab .Max (_aaac ,_daea .Range [2*_efggb ]),_daea .Range [2*_efggb +1]);
_abded =append (_abded ,_beff );};return _abded ,nil ;};

// SetNamedDestinations sets the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_eagaf *PdfWriter )SetNamedDestinations (dests _bbe .PdfObject )error {if dests ==nil {return nil ;};_gcf .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u0044\u0065\u0073\u0074\u0073\u002e\u002e\u002e");
_eagaf ._bgdee .Set ("\u0044\u0065\u0073t\u0073",dests );return _eagaf .addObjects (dests );};

// C returns the value of the C component of the color.
func (_efag *PdfColorCalRGB )C ()float64 {return _efag [2]};func (_gdag *PdfWriter )writeTrailer (_afbgb int ){_gdag .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");for _bfbae :=0;_bfbae <=_afbgb ;{for ;_bfbae <=_afbgb ;_bfbae ++{_efdbd ,_cddce :=_gdag ._cffgb [_bfbae ];
if _cddce &&(!_gdag ._degbe ||_gdag ._degbe &&(_efdbd .Type ==1&&_efdbd .Offset >=_gdag ._ageg ||_efdbd .Type ==0)){break ;};};var _eabdab int ;for _eabdab =_bfbae +1;_eabdab <=_afbgb ;_eabdab ++{_gbgff ,_gegbc :=_gdag ._cffgb [_eabdab ];if _gegbc &&(!_gdag ._degbe ||_gdag ._degbe &&(_gbgff .Type ==1&&_gbgff .Offset > _gdag ._ageg )){continue ;
};break ;};_bcggf :=_g .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_bfbae ,_eabdab -_bfbae );_gdag .writeString (_bcggf );for _bbcag :=_bfbae ;_bbcag < _eabdab ;_bbcag ++{_cacac :=_gdag ._cffgb [_bbcag ];switch _cacac .Type {case 0:_bcggf =_g .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);
_gdag .writeString (_bcggf );case 1:_bcggf =_g .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_cacac .Offset ,0);_gdag .writeString (_bcggf );};};_bfbae =_eabdab +1;};_afdgef :=_bbe .MakeDict ();_afdgef .Set ("\u0049\u006e\u0066\u006f",_gdag ._befcg );
_afdgef .Set ("\u0052\u006f\u006f\u0074",_gdag ._ecdbbf );_afdgef .Set ("\u0053\u0069\u007a\u0065",_bbe .MakeInteger (int64 (_afbgb +1)));if _gdag ._degbe &&_gdag ._cebbb > 0{_afdgef .Set ("\u0050\u0072\u0065\u0076",_bbe .MakeInteger (_gdag ._cebbb ));
};if _gdag ._ceba !=nil {_afdgef .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_gdag ._bgdgf );};if _gdag ._gggff ==nil &&_gdag ._agbeb !=""&&_gdag ._dfaef !=""{_gdag ._gggff =_bbe .MakeArray (_bbe .MakeHexString (_gdag ._agbeb ),_bbe .MakeHexString (_gdag ._dfaef ));
};if _gdag ._gggff !=nil {_afdgef .Set ("\u0049\u0044",_gdag ._gggff );_gcf .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_gdag ._gggff );};_gdag .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");_gdag .writeString (_afdgef .WriteString ());
_gdag .writeString ("\u000a");};

// NewPdfSignatureReferenceDocMDP returns PdfSignatureReference for the transformParams.
func NewPdfSignatureReferenceDocMDP (transformParams *PdfTransformParamsDocMDP )*PdfSignatureReference {return &PdfSignatureReference {Type :_bbe .MakeName ("\u0053\u0069\u0067\u0052\u0065\u0066"),TransformMethod :_bbe .MakeName ("\u0044\u006f\u0063\u004d\u0044\u0050"),TransformParams :transformParams .ToPdfObject ()};
};

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_dbbcb *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _dbbcb ._efcde !=nil {return _dbbcb ._efcde ,nil ;};if _dbbcb .ColorSpace ==nil {return nil ,nil ;};_begbb ,_dadbf :=_ebgba (_dbbcb .ColorSpace );if _dadbf !=nil {return nil ,_dadbf ;
};_dbbcb ._efcde =_begbb ;return _dbbcb ._efcde ,nil ;};func (_ffb *PdfReader )newPdfActionNamedFromDict (_cfb *_bbe .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_cfb .Get ("\u004e")},nil ;};

// PartialName returns the partial name of the field.
func (_dbbc *PdfField )PartialName ()string {_gafg :="";if _dbbc .T !=nil {_gafg =_dbbc .T .Decoded ();}else {_gcf .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");
};return _gafg ;};func (_gcc *PdfReader )newPdfAnnotationRichMediaFromDict (_bfe *_bbe .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_gec :=&PdfAnnotationRichMedia {};_gec .RichMediaSettings =_bfe .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");
_gec .RichMediaContent =_bfe .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");return _gec ,nil ;};

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_cggab *XObjectImage )GetContainingPdfObject ()_bbe .PdfObject {return _cggab ._cggga };

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_beaad :map[_bbe .PdfObject ]struct{}{},_ffgae :_bdbge (),_ffgcd :_bbe .NewParserFromString (txt )};};func _fccb (_agcg *_bbe .PdfObjectDictionary ,_eaag *fontCommon ,_fdbee _ff .TextEncoder )(*pdfFontSimple ,error ){_fffg :=_fcdfa (_eaag );
_fffg ._bfgf =_fdbee ;if _fdbee ==nil {_dbdgc :=_agcg .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _dbdgc ==nil {_dbdgc =_bbe .MakeInteger (0);};_fffg .FirstChar =_dbdgc ;_caged ,_afeb :=_bbe .GetIntVal (_dbdgc );if !_afeb {_gcf .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_dbdgc );
return nil ,_bbe .ErrTypeError ;};_gfbf :=_ff .CharCode (_caged );_dbdgc =_agcg .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _dbdgc ==nil {_dbdgc =_bbe .MakeInteger (255);};_fffg .LastChar =_dbdgc ;_caged ,_afeb =_bbe .GetIntVal (_dbdgc );
if !_afeb {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_dbdgc );return nil ,_bbe .ErrTypeError ;
};_adbbb :=_ff .CharCode (_caged );_fffg ._dbba =make (map[_ff .CharCode ]float64 );_dbdgc =_agcg .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _dbdgc !=nil {_fffg .Widths =_dbdgc ;_gbgg ,_bbfff :=_bbe .GetArray (_dbdgc );if !_bbfff {_gcf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_dbdgc );
return nil ,_bbe .ErrTypeError ;};_cfec ,_cfaf :=_gbgg .ToFloat64Array ();if _cfaf !=nil {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_cfaf ;};if len (_cfec )!=int (_adbbb -_gfbf +1){_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_adbbb -_gfbf +1,len (_cfec ));
return nil ,_bbe .ErrRangeError ;};for _dccgb ,_acddb :=range _cfec {_fffg ._dbba [_gfbf +_ff .CharCode (_dccgb )]=_acddb ;};};};_fffg .Encoding =_bbe .TraceToDirectObject (_agcg .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _fffg ,nil ;
};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_bdeaf *PdfShadingPattern )ToPdfObject ()_bbe .PdfObject {_bdeaf .PdfPattern .ToPdfObject ();_aedb :=_bdeaf .getDict ();if _bdeaf .Shading !=nil {_aedb .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_bdeaf .Shading .ToPdfObject ());};if _bdeaf .Matrix !=nil {_aedb .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_bdeaf .Matrix );
};if _bdeaf .ExtGState !=nil {_aedb .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_bdeaf .ExtGState );};return _bdeaf ._agefc ;};

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_adaea *PdfReader )GetOutlines ()(*Outline ,error ){if _adaea ==nil {return nil ,_cc .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");
};_aefaa :=_adaea .GetOutlineTree ();if _aefaa ==nil {return nil ,_cc .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");
};var _dbgb func (_gedb *PdfOutlineTreeNode ,_bgae *[]*OutlineItem );_dbgb =func (_ebag *PdfOutlineTreeNode ,_affd *[]*OutlineItem ){if _ebag ==nil {return ;};if _ebag ._ebbdf ==nil {_gcf .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");
return ;};var _cdegc *OutlineItem ;if _fegca ,_fegbc :=_ebag ._ebbdf .(*PdfOutlineItem );_fegbc {_bbca :=_fegca .Dest ;if (_bbca ==nil ||_bbe .IsNullObject (_bbca ))&&_fegca .A !=nil {if _dcbg ,_fgca :=_bbe .GetDict (_fegca .A );_fgca {if _bggee ,_cadde :=_bbe .GetArray (_dcbg .Get ("\u0044"));
_cadde {_bbca =_bggee ;}else {_fgfca ,_agadd :=_bbe .GetString (_dcbg .Get ("\u0044"));if !_agadd {return ;};_cceef ,_agadd :=_adaea ._cagcc .Get ("\u004e\u0061\u006de\u0073").(*_bbe .PdfObjectReference );if !_agadd {return ;};_feacg ,_fbgc :=_adaea ._ffgcd .LookupByReference (*_cceef );
if _fbgc !=nil {_gcf .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0020\u0028\u0025\u0073\u0029",_fbgc .Error ());
return ;};_fefce ,_agadd :=_feacg .(*_bbe .PdfIndirectObject );if !_agadd {return ;};_eeegf :=map[_bbe .PdfObject ]struct{}{};_fbgc =_adaea .buildNameNodes (_fefce ,_eeegf );if _fbgc !=nil {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006ea\u006d\u0065\u0020\u006e\u006fd\u0065\u0073 \u0028\u0025\u0073\u0029",_fbgc .Error ());
return ;};for _geede :=range _eeegf {_daffc ,_bceb :=_bbe .GetDict (_geede );if !_bceb {continue ;};_acbc ,_bceb :=_bbe .GetArray (_daffc .Get ("\u004e\u0061\u006de\u0073"));if !_bceb {continue ;};for _gdab ,_abefg :=range _acbc .Elements (){switch _abefg .(type ){case *_bbe .PdfObjectString :if _abefg .String ()==_fgfca .String (){if _fdcce :=_acbc .Get (_gdab +1);
_fdcce !=nil {if _facde ,_dcffd :=_bbe .GetDict (_fdcce );_dcffd {_bbca =_facde .Get ("\u0044");break ;};};};};};};};};};var _eefda OutlineDest ;if _bbca !=nil &&!_bbe .IsNullObject (_bbca ){if _dgeee ,_dageb :=_bbdgb (_bbca ,_adaea );_dageb ==nil {_eefda =*_dgeee ;
}else {_gcf .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_bbca ,_dageb );
};};_cdegc =NewOutlineItem (_fegca .Title .Decoded (),_eefda );*_affd =append (*_affd ,_cdegc );if _fegca .Next !=nil {_dbgb (_fegca .Next ,_affd );};};if _ebag .First !=nil {if _cdegc !=nil {_affd =&_cdegc .Entries ;};_dbgb (_ebag .First ,_affd );};};
_edbe :=NewOutline ();_dbgb (_aefaa ,&_edbe .Entries );return _edbe ,nil ;};

// NewLTV returns a new LTV client.
func NewLTV (appender *PdfAppender )(*LTV ,error ){_ddfb :=appender .Reader .DSS ;if _ddfb ==nil {_ddfb =NewDSS ();};if _gcgc :=_ddfb .GenerateHashMaps ();_gcgc !=nil {return nil ,_gcgc ;};return &LTV {CertClient :_bfc .NewCertClient (),OCSPClient :_bfc .NewOCSPClient (),CRLClient :_bfc .NewCRLClient (),SkipExisting :true ,_acgcc :appender ,_afgee :_ddfb },nil ;
};

// Flags returns the field flags for the field accounting for any inherited flags.
func (_fcbe *PdfField )Flags ()FieldFlag {var _aaec FieldFlag ;_bcdbc ,_ffag :=_fcbe .inherit (func (_bfec *PdfField )bool {if _bfec .Ff !=nil {_aaec =FieldFlag (*_bfec .Ff );return true ;};return false ;});if _ffag !=nil {_gcf .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_ffag );
};if !_bcdbc {_gcf .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _aaec ;};

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_geea :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_geea ;};

// SetDocInfo sets the document /Info metadata.
// This will overwrite any globally declared document info.
func (_gaef *PdfAppender )SetDocInfo (info *PdfInfo ){_gaef ._dfgb =info };

// AppendContentBytes creates a PDF stream from `cs` and appends it to the
// array of streams specified by the pages's Contents entry.
// If `wrapContents` is true, the content stream of the page is wrapped using
// a `q/Q` operator pair, so that its state does not affect the appended
// content stream.
func (_febadg *PdfPage )AppendContentBytes (cs []byte ,wrapContents bool )error {_gaade :=_febadg .GetContentStreamObjs ();wrapContents =wrapContents &&len (_gaade )> 0;_addcd :=_bbe .NewFlateEncoder ();_gddgd :=_bbe .MakeArray ();if wrapContents {_ggecdc ,_egfdd :=_bbe .MakeStream ([]byte ("\u0071\u000a"),_addcd );
if _egfdd !=nil {return _egfdd ;};_gddgd .Append (_ggecdc );};_gddgd .Append (_gaade ...);if wrapContents {_feage ,_bdeac :=_bbe .MakeStream ([]byte ("\u000a\u0051\u000a"),_addcd );if _bdeac !=nil {return _bdeac ;};_gddgd .Append (_feage );};_cgabf ,_ccdaf :=_bbe .MakeStream (cs ,_addcd );
if _ccdaf !=nil {return _ccdaf ;};_gddgd .Append (_cgabf );_febadg .Contents =_gddgd ;return nil ;};

// GetNumComponents returns the number of color components (1 for Indexed).
func (_feaff *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_fbc :=NewPdfAnnotation ();_bfgd :=&PdfAnnotationSquiggly {};_bfgd .PdfAnnotation =_fbc ;_bfgd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fbc .SetContext (_bfgd );return _bfgd ;};

// ToPdfObject implements interface PdfModel.
func (_dce *PdfActionSetOCGState )ToPdfObject ()_bbe .PdfObject {_dce .PdfAction .ToPdfObject ();_bcef :=_dce ._be ;_gca :=_bcef .PdfObject .(*_bbe .PdfObjectDictionary );_gca .SetIfNotNil ("\u0053",_bbe .MakeName (string (ActionTypeSetOCGState )));_gca .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_dce .State );
_gca .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_dce .PreserveRB );return _bcef ;};func _gaegbd (_cbege []byte )([]byte ,error ){_gagba :=_ggc .New ();if _ ,_efcee :=_geb .Copy (_gagba ,_cf .NewReader (_cbege ));_efcee !=nil {return nil ,_efcee ;
};return _gagba .Sum (nil ),nil ;};func (_gbce *PdfReader )newPdfAnnotationPolygonFromDict (_cbe *_bbe .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_ccgb :=PdfAnnotationPolygon {};_fecb ,_cgcbb :=_gbce .newPdfAnnotationMarkupFromDict (_cbe );if _cgcbb !=nil {return nil ,_cgcbb ;
};_ccgb .PdfAnnotationMarkup =_fecb ;_ccgb .Vertices =_cbe .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_ccgb .LE =_cbe .Get ("\u004c\u0045");_ccgb .BS =_cbe .Get ("\u0042\u0053");_ccgb .IC =_cbe .Get ("\u0049\u0043");_ccgb .BE =_cbe .Get ("\u0042\u0045");
_ccgb .IT =_cbe .Get ("\u0049\u0054");_ccgb .Measure =_cbe .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_ccgb ,nil ;};func _cgdga (_cdfd _bbe .PdfObject )(*PdfFunctionType2 ,error ){_ecgbg :=&PdfFunctionType2 {};var _addcb *_bbe .PdfObjectDictionary ;
if _edcc ,_aedc :=_cdfd .(*_bbe .PdfIndirectObject );_aedc {_fbae ,_egfc :=_edcc .PdfObject .(*_bbe .PdfObjectDictionary );if !_egfc {return nil ,_cc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ecgbg ._aabe =_edcc ;
_addcb =_fbae ;}else if _eadg ,_caddb :=_cdfd .(*_bbe .PdfObjectDictionary );_caddb {_addcb =_eadg ;}else {return nil ,_cc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gcf .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_addcb .String ());
_cgff ,_gdge :=_bbe .TraceToDirectObject (_addcb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bbe .PdfObjectArray );if !_gdge {_gcf .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_cc .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _cgff .Len ()< 0||_cgff .Len ()%2!=0{_gcf .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");return nil ,_cc .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_fgbeg ,_afbba :=_cgff .ToFloat64Array ();if _afbba !=nil {return nil ,_afbba ;};_ecgbg .Domain =_fgbeg ;_cgff ,_gdge =_bbe .TraceToDirectObject (_addcb .Get ("\u0052\u0061\u006eg\u0065")).(*_bbe .PdfObjectArray );if _gdge {if _cgff .Len ()< 0||_cgff .Len ()%2!=0{return nil ,_cc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_fbfbgb ,_gfebd :=_cgff .ToFloat64Array ();if _gfebd !=nil {return nil ,_gfebd ;};_ecgbg .Range =_fbfbgb ;};_cgff ,_gdge =_bbe .TraceToDirectObject (_addcb .Get ("\u0043\u0030")).(*_bbe .PdfObjectArray );if _gdge {_accee ,_agfcd :=_cgff .ToFloat64Array ();
if _agfcd !=nil {return nil ,_agfcd ;};_ecgbg .C0 =_accee ;};_cgff ,_gdge =_bbe .TraceToDirectObject (_addcb .Get ("\u0043\u0031")).(*_bbe .PdfObjectArray );if _gdge {_efba ,_abfc :=_cgff .ToFloat64Array ();if _abfc !=nil {return nil ,_abfc ;};_ecgbg .C1 =_efba ;
};if len (_ecgbg .C0 )!=len (_ecgbg .C1 ){_gcf .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");return nil ,_bbe .ErrRangeError ;};N ,_afbba :=_bbe .GetNumberAsFloat (_bbe .TraceToDirectObject (_addcb .Get ("\u004e")));
if _afbba !=nil {_gcf .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_addcb .String ());return nil ,_afbba ;};_ecgbg .N =N ;
return _ecgbg ,nil ;};

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_bbe .PdfObjectArray ;Matrix *_bbe .PdfObjectArray ;Function []PdfFunction ;};func _eagf (_fgfgf *PdfPage ){_edefe :=_ea .GetLicenseKey ();if _edefe !=nil &&_edefe .IsLicensed (){return ;};_eedeg :=_bbe .PdfObjectName ("\u0055\u0046\u0031");
if !_fgfgf .Resources .HasFontByName (_eedeg ){_fgfgf .Resources .SetFontByName (_eedeg ,DefaultFont ().ToPdfObject ());};var _dedad []string ;_dedad =append (_dedad ,"\u0071");_dedad =append (_dedad ,"\u0042\u0054");_dedad =append (_dedad ,_g .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_eedeg .String ()));
_dedad =append (_dedad ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");_dedad =append (_dedad ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");_debaa :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";
_dedad =append (_dedad ,_g .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_debaa ));_dedad =append (_dedad ,"\u0045\u0054");_dedad =append (_dedad ,"\u0051");_cdaeg :=_df .Join (_dedad ,"\u000a");_fgfgf .AddContentStreamByString (_cdaeg );_fgfgf .ToPdfObject ();
};

// ToPdfObject returns the PDF representation of the function.
func (_fbfbb *PdfFunctionType2 )ToPdfObject ()_bbe .PdfObject {_ffge :=_bbe .MakeDict ();_ffge .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bbe .MakeInteger (2));_gcbca :=&_bbe .PdfObjectArray {};for _ ,_bacf :=range _fbfbb .Domain {_gcbca .Append (_bbe .MakeFloat (_bacf ));
};_ffge .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_gcbca );if _fbfbb .Range !=nil {_cbcaa :=&_bbe .PdfObjectArray {};for _ ,_eece :=range _fbfbb .Range {_cbcaa .Append (_bbe .MakeFloat (_eece ));};_ffge .Set ("\u0052\u0061\u006eg\u0065",_cbcaa );};if _fbfbb .C0 !=nil {_badc :=&_bbe .PdfObjectArray {};
for _ ,_eadga :=range _fbfbb .C0 {_badc .Append (_bbe .MakeFloat (_eadga ));};_ffge .Set ("\u0043\u0030",_badc );};if _fbfbb .C1 !=nil {_ccabg :=&_bbe .PdfObjectArray {};for _ ,_cccce :=range _fbfbb .C1 {_ccabg .Append (_bbe .MakeFloat (_cccce ));};_ffge .Set ("\u0043\u0031",_ccabg );
};_ffge .Set ("\u004e",_bbe .MakeFloat (_fbfbb .N ));if _fbfbb ._aabe !=nil {_fbfbb ._aabe .PdfObject =_ffge ;return _fbfbb ._aabe ;};return _ffge ;};func (_gggde *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";
};

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_gffd *PdfColorspaceDeviceNAttributes )ToPdfObject ()_bbe .PdfObject {_geabc :=_bbe .MakeDict ();if _gffd .Subtype !=nil {_geabc .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gffd .Subtype );};_geabc .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_gffd .Colorants );
_geabc .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_gffd .Process );_geabc .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_gffd .MixingHints );if _gffd ._fefcb !=nil {_gffd ._fefcb .PdfObject =_geabc ;return _gffd ._fefcb ;
};return _geabc ;};func _gfdd (_cfbgd *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_cfbgd }};

// ToPdfObject converts the font to a PDF representation.
func (_aacadg *pdfFontType3 )ToPdfObject ()_bbe .PdfObject {if _aacadg ._bebga ==nil {_aacadg ._bebga =&_bbe .PdfIndirectObject {};};_abbe :=_aacadg .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0033");_aacadg ._bebga .PdfObject =_abbe ;if _aacadg .FirstChar !=nil {_abbe .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_aacadg .FirstChar );
};if _aacadg .LastChar !=nil {_abbe .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_aacadg .LastChar );};if _aacadg .Widths !=nil {_abbe .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_aacadg .Widths );};if _aacadg .Encoding !=nil {_abbe .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_aacadg .Encoding );
}else if _aacadg ._adfd !=nil {_ddaaa :=_aacadg ._adfd .ToPdfObject ();if _ddaaa !=nil {_abbe .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_ddaaa );};};if _aacadg .FontBBox !=nil {_abbe .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_aacadg .FontBBox );
};if _aacadg .FontMatrix !=nil {_abbe .Set ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0069\u0072\u0078",_aacadg .FontMatrix );};if _aacadg .CharProcs !=nil {_abbe .Set ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s",_aacadg .CharProcs );};if _aacadg .Resources !=nil {_abbe .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_aacadg .Resources );
};return _aacadg ._bebga ;};func (_bfdea *PdfWriter )optimizeDocument ()error {if _bfdea ._faee ==nil {return nil ;};_bgebd ,_fgfddf :=_bbe .GetDict (_bfdea ._befcg );if !_fgfddf {return _cc .New ("\u0061\u006e\u0020in\u0066\u006f\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_afaa :=_gcg .Document {ID :[2]string {_bfdea ._agbeb ,_bfdea ._dfaef },Version :_bfdea ._dfadc ,Objects :_bfdea ._ageab ,Info :_bgebd ,Crypt :_bfdea ._ceba ,UseHashBasedID :_bfdea ._fcgfg };if _gceg :=_bfdea ._faee .ApplyStandard (&_afaa );_gceg !=nil {return _gceg ;
};_bfdea ._agbeb ,_bfdea ._dfaef =_afaa .ID [0],_afaa .ID [1];_bfdea ._dfadc =_afaa .Version ;_bfdea ._ageab =_afaa .Objects ;_bfdea ._befcg .PdfObject =_afaa .Info ;_bfdea ._fcgfg =_afaa .UseHashBasedID ;_bfdea ._ceba =_afaa .Crypt ;_dedada :=make (map[_bbe .PdfObject ]struct{},len (_bfdea ._ageab ));
for _ ,_afaeff :=range _bfdea ._ageab {_dedada [_afaeff ]=struct{}{};};_bfdea ._ffebc =_dedada ;return nil ;};

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_defb :=&PdfOutlineItem {_ebaeg :_bbe .MakeIndirectObject (_bbe .MakeDict ())};_defb ._ebbdf =_defb ;return _defb ;};

// String returns a human readable description of `fontfile`.
func (_gedca *fontFile )String ()string {_cccba :="\u005b\u004e\u006f\u006e\u0065\u005d";if _gedca ._edaf !=nil {_cccba =_gedca ._edaf .String ();};return _g .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_gedca ._fcggd ,_cccba );
};

// DecodeArray returns the component range values for the Separation colorspace.
func (_debe *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_dgcc *PdfTilingPattern )ToPdfObject ()_bbe .PdfObject {_dgcc .PdfPattern .ToPdfObject ();_cagca :=_dgcc .getDict ();if _dgcc .PaintType !=nil {_cagca .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_dgcc .PaintType );};if _dgcc .TilingType !=nil {_cagca .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_dgcc .TilingType );
};if _dgcc .BBox !=nil {_cagca .Set ("\u0042\u0042\u006f\u0078",_dgcc .BBox .ToPdfObject ());};if _dgcc .XStep !=nil {_cagca .Set ("\u0058\u0053\u0074e\u0070",_dgcc .XStep );};if _dgcc .YStep !=nil {_cagca .Set ("\u0059\u0053\u0074e\u0070",_dgcc .YStep );
};if _dgcc .Resources !=nil {_cagca .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_dgcc .Resources .ToPdfObject ());};if _dgcc .Matrix !=nil {_cagca .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_dgcc .Matrix );};return _dgcc ._agefc ;};var _ pdfFont =(*pdfCIDFontType0 )(nil );


// GetCharMetrics returns the char metrics for character code `code`.
func (_cega pdfCIDFontType2 )GetCharMetrics (code _ff .CharCode )(_bfg .CharMetrics ,bool ){if _ggggd ,_dcaceg :=_cega ._bdcd [code ];_dcaceg {return _bfg .CharMetrics {Wx :_ggggd },true ;};_ecad :=rune (code );_fecfdd ,_addc :=_cega ._bggb [_ecad ];if !_addc {_fecfdd =int (_cega ._agecf );
};return _bfg .CharMetrics {Wx :float64 (_fecfdd )},true ;};

// GetCatalogStructTreeRoot gets the catalog StructTreeRoot object.
func (_dgead *PdfReader )GetCatalogStructTreeRoot ()(_bbe .PdfObject ,bool ){if _dgead ._cagcc ==nil {return nil ,false ;};_ccddb :=_dgead ._cagcc .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074");return _ccddb ,_ccddb !=nil ;
};

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_ddef *PdfColorspaceDeviceN )GetNumComponents ()int {return _ddef .ColorantNames .Len ()};

// Encrypt encrypts the output file with a specified user/owner password.
func (_fggaa *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_ffgfc :=RC4_128bit ;if options !=nil {_ffgfc =options .Algorithm ;};_gfcac :=_bad .PermOwner ;if options !=nil {_gfcac =options .Permissions ;};var _addbd _ac .Filter ;
switch _ffgfc {case RC4_128bit :_addbd =_ac .NewFilterV2 (16);case AES_128bit :_addbd =_ac .NewFilterAESV2 ();case AES_256bit :_addbd =_ac .NewFilterAESV3 ();default:return _g .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );
};_ebgdd ,_bddef ,_ageefc :=_bbe .PdfCryptNewEncrypt (_addbd ,userPass ,ownerPass ,_gfcac );if _ageefc !=nil {return _ageefc ;};_fggaa ._ceba =_ebgdd ;if _bddef .Major !=0{_fggaa .SetVersion (_bddef .Major ,_bddef .Minor );};_fggaa ._efece =_bddef .Encrypt ;
_fggaa ._agbeb ,_fggaa ._dfaef =_bddef .ID0 ,_bddef .ID1 ;_decgfb :=_bbe .MakeIndirectObject (_bddef .Encrypt );_fggaa ._bgdgf =_decgfb ;_fggaa .addObject (_decgfb );return nil ;};

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_aafef *PdfColorspaceLab )DecodeArray ()[]float64 {_gbaf :=[]float64 {0,100};if _aafef .Range !=nil &&len (_aafef .Range )==4{_gbaf =append (_gbaf ,_aafef .Range ...);}else {_gbaf =append (_gbaf ,-100,100,-100,100);};return _gbaf ;};func (_beagc *LTV )buildCertChain (_dcgfe ,_ccfgc []*_gg .Certificate )([]*_gg .Certificate ,map[string ]*_gg .Certificate ,error ){_baecg :=map[string ]*_gg .Certificate {};
for _ ,_ggfccb :=range _dcgfe {_baecg [_ggfccb .Subject .CommonName ]=_ggfccb ;};_eebf :=_dcgfe ;for _ ,_ceccc :=range _ccfgc {_bedgg :=_ceccc .Subject .CommonName ;if _ ,_gbaff :=_baecg [_bedgg ];_gbaff {continue ;};_baecg [_bedgg ]=_ceccc ;_eebf =append (_eebf ,_ceccc );
};if len (_eebf )==0{return nil ,nil ,ErrSignNoCertificates ;};var _fbccc error ;for _abbdg :=_eebf [0];_abbdg !=nil &&!_beagc .CertClient .IsCA (_abbdg );{_bbccf ,_aggab :=_baecg [_abbdg .Issuer .CommonName ];if !_aggab {if _bbccf ,_fbccc =_beagc .CertClient .GetIssuer (_abbdg );
_fbccc !=nil {_gcf .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u006f\u0075\u006cd\u0020\u006e\u006f\u0074\u0020\u0072\u0065tr\u0069\u0065\u0076\u0065 \u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061te\u0020\u0069s\u0073\u0075\u0065\u0072\u003a\u0020\u0025\u0076",_fbccc );
break ;};_baecg [_abbdg .Issuer .CommonName ]=_bbccf ;_eebf =append (_eebf ,_bbccf );};_abbdg =_bbccf ;};return _eebf ,_baecg ,nil ;};

// SetFlag sets the flag for the field.
func (_fagg *PdfField )SetFlag (flag FieldFlag ){_fagg .Ff =_bbe .MakeInteger (int64 (flag ))};

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _geb .ReadSeeker )(*PdfReader ,error ){const _ecegc ="\u006d\u006f\u0064\u0065l:\u004e\u0065\u0077\u0050\u0064\u0066\u0052\u0065\u0061\u0064\u0065\u0072\u004c\u0061z\u0079";return _cbab (rs ,&ReaderOpts {LazyLoad :true },false ,_ecegc );
};func (_eda *PdfReader )newPdfAnnotationMarkupFromDict (_agge *_bbe .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_dgac :=&PdfAnnotationMarkup {};if _dbc :=_agge .Get ("\u0054");_dbc !=nil {_dgac .T =_dbc ;};if _cefc :=_agge .Get ("\u0050\u006f\u0070u\u0070");
_cefc !=nil {_decg ,_dbf :=_cefc .(*_bbe .PdfIndirectObject );if !_dbf {if _ ,_fgd :=_cefc .(*_bbe .PdfObjectNull );!_fgd {return nil ,_cc .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");
};}else {_gbed ,_bceec :=_eda .newPdfAnnotationFromIndirectObject (_decg );if _bceec !=nil {return nil ,_bceec ;};if _gbed !=nil {_cea ,_cba :=_gbed ._ccfb .(*PdfAnnotationPopup );if !_cba {return nil ,_cc .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");
};_dgac .Popup =_cea ;};};};if _aed :=_agge .Get ("\u0043\u0041");_aed !=nil {_dgac .CA =_aed ;};if _cgec :=_agge .Get ("\u0052\u0043");_cgec !=nil {_dgac .RC =_cgec ;};if _abb :=_agge .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");
_abb !=nil {_dgac .CreationDate =_abb ;};if _ceb :=_agge .Get ("\u0049\u0052\u0054");_ceb !=nil {_dgac .IRT =_ceb ;};if _fee :=_agge .Get ("\u0053\u0075\u0062\u006a");_fee !=nil {_dgac .Subj =_fee ;};if _ace :=_agge .Get ("\u0052\u0054");_ace !=nil {_dgac .RT =_ace ;
};if _bcgeg :=_agge .Get ("\u0049\u0054");_bcgeg !=nil {_dgac .IT =_bcgeg ;};if _gga :=_agge .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_gga !=nil {_dgac .ExData =_gga ;};return _dgac ,nil ;};

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _bbe .PdfObject ;ColorSpace _bbe .PdfObject ;Pattern _bbe .PdfObject ;Shading _bbe .PdfObject ;XObject _bbe .PdfObject ;Font _bbe .PdfObject ;ProcSet _bbe .PdfObject ;Properties _bbe .PdfObject ;_bgaca *_bbe .PdfObjectDictionary ;
_efcde *PdfPageResourcesColorspaces ;};

// NewPdfReaderFromFile creates a new PdfReader from the speficied PDF file.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderFromFile (pdfFile string ,opts *ReaderOpts )(*PdfReader ,*_cd .File ,error ){const _bbcca ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0046\u0072\u006f\u006dF\u0069\u006c\u0065";
_ffddd ,_ebef :=_cd .Open (pdfFile );if _ebef !=nil {return nil ,nil ,_ebef ;};_ccacf ,_ebef :=_cbab (_ffddd ,opts ,true ,_bbcca );if _ebef !=nil {_ffddd .Close ();return nil ,nil ,_ebef ;};return _ccacf ,_ffddd ,nil ;};

// Initialize initializes the PdfSignature.
func (_acegg *PdfSignature )Initialize ()error {if _acegg .Handler ==nil {return _cc .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};return _acegg .Handler .InitSignature (_acegg );};

// GetAscent returns the Ascent of the font `descriptor`.
func (_efad *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _bbe .GetNumberAsFloat (_efad .Ascent );};

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_bcecd *PdfOutlineItem )GetContainingPdfObject ()_bbe .PdfObject {return _bcecd ._ebaeg };

// NewPdfInfoFromObject creates a new PdfInfo from the input core.PdfObject.
func NewPdfInfoFromObject (obj _bbe .PdfObject )(*PdfInfo ,error ){var _bgef PdfInfo ;_bgfd ,_fafc :=obj .(*_bbe .PdfObjectDictionary );if !_fafc {return nil ,_g .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079p\u0065:\u0020\u0025\u0054",obj );
};for _ ,_feba :=range _bgfd .Keys (){switch _feba {case "\u0054\u0069\u0074l\u0065":_bgef .Title ,_ =_bbe .GetString (_bgfd .Get ("\u0054\u0069\u0074l\u0065"));case "\u0041\u0075\u0074\u0068\u006f\u0072":_bgef .Author ,_ =_bbe .GetString (_bgfd .Get ("\u0041\u0075\u0074\u0068\u006f\u0072"));
case "\u0053u\u0062\u006a\u0065\u0063\u0074":_bgef .Subject ,_ =_bbe .GetString (_bgfd .Get ("\u0053u\u0062\u006a\u0065\u0063\u0074"));case "\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":_bgef .Keywords ,_ =_bbe .GetString (_bgfd .Get ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"));
case "\u0043r\u0065\u0061\u0074\u006f\u0072":_bgef .Creator ,_ =_bbe .GetString (_bgfd .Get ("\u0043r\u0065\u0061\u0074\u006f\u0072"));case "\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":_bgef .Producer ,_ =_bbe .GetString (_bgfd .Get ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072"));
case "\u0054r\u0061\u0070\u0070\u0065\u0064":_bgef .Trapped ,_ =_bbe .GetName (_bgfd .Get ("\u0054r\u0061\u0070\u0070\u0065\u0064"));case "\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":if _cggg ,_edec :=_bbe .GetString (_bgfd .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065"));
_edec &&_cggg .String ()!=""{_acdb ,_bbgc :=NewPdfDate (_cggg .String ());if _bbgc !=nil {return nil ,_g .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0072e\u0061\u0074\u0069\u006f\u006e\u0044\u0061t\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0077",_bbgc );
};_bgef .CreationDate =&_acdb ;};case "\u004do\u0064\u0044\u0061\u0074\u0065":if _bgbc ,_eebd :=_bbe .GetString (_bgfd .Get ("\u004do\u0064\u0044\u0061\u0074\u0065"));_eebd &&_bgbc .String ()!=""{_ddfeg ,_dffd :=NewPdfDate (_bgbc .String ());if _dffd !=nil {return nil ,_g .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u004d\u006f\u0064\u0044a\u0074e\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025w",_dffd );
};_bgef .ModifiedDate =&_ddfeg ;};default:_cccc ,_ :=_bbe .GetString (_bgfd .Get (_feba ));if _bgef ._fecbf ==nil {_bgef ._fecbf =_bbe .MakeDict ();};_bgef ._fecbf .Set (_feba ,_cccc );};};return &_bgef ,nil ;};

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_gdggf :=map[rune ]int {};for _ ,_affg :=range text {_gdggf [_affg ]++;};return _gdggf ;};func (_gceab *LTV )enable (_aebecf ,_bgefa []*_gg .Certificate ,_caede string )error {_gedg ,_bebed ,_bced :=_gceab .buildCertChain (_aebecf ,_bgefa );
if _bced !=nil {return _bced ;};_bdff ,_bced :=_gceab .getCerts (_gedg );if _bced !=nil {return _bced ;};var _ccgg ,_gfdc [][]byte ;if _gceab .OCSPClient !=nil {_ccgg ,_bced =_gceab .getOCSPs (_gedg ,_bebed );if _bced !=nil {return _bced ;};};if _gceab .CRLClient !=nil {_gfdc ,_bced =_gceab .getCRLs (_gedg );
if _bced !=nil {return _bced ;};};_bbdb :=_gceab ._afgee ;_afbfb ,_bced :=_bbdb .AddCerts (_bdff );if _bced !=nil {return _bced ;};_fcfaa ,_bced :=_bbdb .AddOCSPs (_ccgg );if _bced !=nil {return _bced ;};_ffcce ,_bced :=_bbdb .AddCRLs (_gfdc );if _bced !=nil {return _bced ;
};if _caede !=""{_bbdb .VRI [_caede ]=&VRI {Cert :_afbfb ,OCSP :_fcfaa ,CRL :_ffcce };};_gceab ._acgcc .SetDSS (_bbdb );return nil ;};func (_gcddg *PdfWriter )checkPendingObjects (){for _facgf ,_fgebc :=range _gcddg ._ceeea {if !_gcddg .hasObject (_facgf ){_gcf .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_facgf ,_facgf ,_facgf );
for _ ,_gffc :=range _fgebc {for _ ,_ggfef :=range _gffc .Keys (){_cdgfd :=_gffc .Get (_ggfef );if _cdgfd ==_facgf {_gcf .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");
_gffc .Set (_ggfef ,_bbe .MakeNull ());break ;};};};};};};

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_daefg *PdfReader )GetIndirectObjectByNumber (number int )(_bbe .PdfObject ,error ){_adage ,_fafda :=_daefg ._ffgcd .LookupByNumber (number );return _adage ,_fafda ;};

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _bbe .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_geag *PdfAnnotationUnderline )ToPdfObject ()_bbe .PdfObject {_geag .PdfAnnotation .ToPdfObject ();_fddd :=_geag ._dbg ;_afbc :=_fddd .PdfObject .(*_bbe .PdfObjectDictionary );_geag .PdfAnnotationMarkup .appendToPdfDictionary (_afbc );_afbc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbe .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));
_afbc .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_geag .QuadPoints );return _fddd ;};func (_ddabd *PdfReader )newPdfActionSubmitFormFromDict (_dgg *_bbe .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_bfced ,_cfcc :=_bfac (_dgg .Get ("\u0046"));
if _cfcc !=nil {return nil ,_cfcc ;};return &PdfActionSubmitForm {F :_bfced ,Fields :_dgg .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_dgg .Get ("\u0046\u006c\u0061g\u0073")},nil ;};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _bbe .PdfObject ;LE _bbe .PdfObject ;BS _bbe .PdfObject ;IC _bbe .PdfObject ;BE _bbe .PdfObject ;IT _bbe .PdfObject ;Measure _bbe .PdfObject ;};func (_eec *PdfReader )newPdfAnnotationLinkFromDict (_dgbb *_bbe .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_efc :=PdfAnnotationLink {};
_efc .A =_dgbb .Get ("\u0041");_efc .Dest =_dgbb .Get ("\u0044\u0065\u0073\u0074");_efc .H =_dgbb .Get ("\u0048");_efc .PA =_dgbb .Get ("\u0050\u0041");_efc .QuadPoints =_dgbb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_efc .BS =_dgbb .Get ("\u0042\u0053");
return &_efc ,nil ;};

// SignatureHandlerDocMDP extends SignatureHandler with the ValidateWithOpts method for checking the DocMDP policy.
type SignatureHandlerDocMDP interface{SignatureHandler ;

// ValidateWithOpts validates a PDF signature by checking PdfReader or PdfParser
// ValidateWithOpts shall contain Validate call
ValidateWithOpts (_aged *PdfSignature ,_gadbg Hasher ,_ebab SignatureHandlerDocMDPParams )(SignatureValidationResult ,error );};

// PdfShadingPatternType2 is shading patterns that will use a Type 2 shading pattern (Axial).
type PdfShadingPatternType2 struct{*PdfPattern ;Shading *PdfShadingType2 ;Matrix *_bbe .PdfObjectArray ;ExtGState _bbe .PdfObject ;};

// ToPdfObject returns the PDF representation of the DSS dictionary.
func (_dfaf *DSS )ToPdfObject ()_bbe .PdfObject {_fcebc :=_dfaf ._gcba .PdfObject .(*_bbe .PdfObjectDictionary );_fcebc .Clear ();_gacda :=_bbe .MakeDict ();for _aagc ,_cgce :=range _dfaf .VRI {_gacda .Set (*_bbe .MakeName (_aagc ),_cgce .ToPdfObject ());
};_fcebc .SetIfNotNil ("\u0043\u0065\u0072t\u0073",_fbffc (_dfaf .Certs ));_fcebc .SetIfNotNil ("\u004f\u0043\u0053P\u0073",_fbffc (_dfaf .OCSPs ));_fcebc .SetIfNotNil ("\u0043\u0052\u004c\u0073",_fbffc (_dfaf .CRLs ));_fcebc .Set ("\u0056\u0052\u0049",_gacda );
return _dfaf ._gcba ;};

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_agfg :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_g .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");
};_agfg .N =N ;return _agfg ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ebc *PdfAnnotationCircle )ToPdfObject ()_bbe .PdfObject {_ebc .PdfAnnotation .ToPdfObject ();_abe :=_ebc ._dbg ;_gbcd :=_abe .PdfObject .(*_bbe .PdfObjectDictionary );_ebc .PdfAnnotationMarkup .appendToPdfDictionary (_gbcd );_gbcd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbe .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));
_gbcd .SetIfNotNil ("\u0042\u0053",_ebc .BS );_gbcd .SetIfNotNil ("\u0049\u0043",_ebc .IC );_gbcd .SetIfNotNil ("\u0042\u0045",_ebc .BE );_gbcd .SetIfNotNil ("\u0052\u0044",_ebc .RD );return _abe ;};

// GetStandardApplier gets currently used StandardApplier..
func (_efca *PdfWriter )GetStandardApplier ()StandardApplier {return _efca ._faee };func (_abeae *PdfWriter )writeObjectsInStreams (_fcafdc map[_bbe .PdfObject ]bool )error {for _ ,_efagg :=range _abeae ._ageab {if _cfbbb :=_fcafdc [_efagg ];_cfbbb {continue ;
};_abgg :=int64 (0);switch _edba :=_efagg .(type ){case *_bbe .PdfIndirectObject :_abgg =_edba .ObjectNumber ;case *_bbe .PdfObjectStream :_abgg =_edba .ObjectNumber ;case *_bbe .PdfObjectStreams :_abgg =_edba .ObjectNumber ;default:_gcf .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0055n\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0074\u0079\u0070\u0065 \u0069\u006e\u0020\u0077\u0072\u0069\u0074\u0065\u0072\u0020\u006fb\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054",_efagg );
return ErrTypeCheck ;};if _abeae ._ceba !=nil &&_efagg !=_abeae ._bgdgf {_gebced :=_abeae ._ceba .Encrypt (_efagg ,_abgg ,0);if _gebced !=nil {_gcf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_gebced );
return _gebced ;};};_abeae .writeObject (int (_abgg ),_efagg );};return nil ;};

// SetDate sets the `M` field of the signature.
func (_cgdef *PdfSignature )SetDate (date _ge .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_cgdef .M =_bbe .MakeString (date .Format (format ));
};

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_befce *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_befce ._efcde =colorspace ;};func (_fgade *PdfWriter )writeBytes (_dgdac []byte ){if _fgade ._fgadg !=nil {return ;};_gfbba ,_cgaec :=_fgade ._gcceb .Write (_dgdac );
_fgade ._dccgd +=int64 (_gfbba );_fgade ._fgadg =_cgaec ;};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_gbba *OutlineItem )Insert (index uint ,item *OutlineItem ){_cbdef :=uint (len (_gbba .Entries ));if index > _cbdef {index =_cbdef ;};_gbba .Entries =append (_gbba .Entries [:index ],append ([]*OutlineItem {item },_gbba .Entries [index :]...)...);
};

// PdfSignatureReference represents a PDF signature reference dictionary and is used for signing via form signature fields.
// (Section 12.8.1, Table 253 - Entries in a signature reference dictionary p. 469 in PDF32000_2008).
type PdfSignatureReference struct{_fcacc *_bbe .PdfObjectDictionary ;Type *_bbe .PdfObjectName ;TransformMethod *_bbe .PdfObjectName ;TransformParams _bbe .PdfObject ;Data _bbe .PdfObject ;DigestMethod *_bbe .PdfObjectName ;};

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_bbfbc *PdfFieldSignature )ToPdfObject ()_bbe .PdfObject {if _bbfbc .PdfAnnotationWidget !=nil {_bbfbc .PdfAnnotationWidget .ToPdfObject ();};_bbfbc .PdfField .ToPdfObject ();_dada :=_bbfbc ._acga ;_dacca :=_dada .PdfObject .(*_bbe .PdfObjectDictionary );
_dacca .SetIfNotNil ("\u0046\u0054",_bbe .MakeName ("\u0053\u0069\u0067"));_dacca .SetIfNotNil ("\u004c\u006f\u0063\u006b",_bbfbc .Lock );_dacca .SetIfNotNil ("\u0053\u0056",_bbfbc .SV );if _bbfbc .V !=nil {_dacca .SetIfNotNil ("\u0056",_bbfbc .V .ToPdfObject ());
};return _dada ;};

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_aeebg *PdfReader )GetEncryptionMethod ()string {_gbedf :=_aeebg ._ffgcd .GetCrypter ();return _gbedf .String ();};func (_eba *PdfReader )newPdfAnnotationStampFromDict (_ggd *_bbe .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_fcfb :=PdfAnnotationStamp {};
_feee ,_aadc :=_eba .newPdfAnnotationMarkupFromDict (_ggd );if _aadc !=nil {return nil ,_aadc ;};_fcfb .PdfAnnotationMarkup =_feee ;_fcfb .Name =_ggd .Get ("\u004e\u0061\u006d\u0065");return &_fcfb ,nil ;};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_fcacf *PdfColorspaceCalGray )ToPdfObject ()_bbe .PdfObject {_ebcad :=&_bbe .PdfObjectArray {};_ebcad .Append (_bbe .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_edag :=_bbe .MakeDict ();if _fcacf .WhitePoint !=nil {_edag .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_bbe .MakeArray (_bbe .MakeFloat (_fcacf .WhitePoint [0]),_bbe .MakeFloat (_fcacf .WhitePoint [1]),_bbe .MakeFloat (_fcacf .WhitePoint [2])));
}else {_gcf .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _fcacf .BlackPoint !=nil {_edag .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_bbe .MakeArray (_bbe .MakeFloat (_fcacf .BlackPoint [0]),_bbe .MakeFloat (_fcacf .BlackPoint [1]),_bbe .MakeFloat (_fcacf .BlackPoint [2])));
};_edag .Set ("\u0047\u0061\u006dm\u0061",_bbe .MakeFloat (_fcacf .Gamma ));_ebcad .Append (_edag );if _fcacf ._ffea !=nil {_fcacf ._ffea .PdfObject =_ebcad ;return _fcacf ._ffea ;};return _ebcad ;};

// String returns a string representation of what flags are set.
func (_gade FieldFlag )String ()string {_bgcfa :="";if _gade ==FieldFlagClear {_bgcfa ="\u0043\u006c\u0065a\u0072";return _bgcfa ;};if _gade &FieldFlagReadOnly > 0{_bgcfa +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _gade &FieldFlagRequired > 0{_bgcfa +="\u007cR\u0065\u0071\u0075\u0069\u0072\u0065d";
};if _gade &FieldFlagNoExport > 0{_bgcfa +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _gade &FieldFlagNoToggleToOff > 0{_bgcfa +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _gade &FieldFlagRadio > 0{_bgcfa +="\u007c\u0052\u0061\u0064\u0069\u006f";
};if _gade &FieldFlagPushbutton > 0{_bgcfa +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _gade &FieldFlagRadiosInUnision > 0{_bgcfa +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};if _gade &FieldFlagMultiline > 0{_bgcfa +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";
};if _gade &FieldFlagPassword > 0{_bgcfa +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _gade &FieldFlagFileSelect > 0{_bgcfa +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";};if _gade &FieldFlagDoNotScroll > 0{_bgcfa +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";
};if _gade &FieldFlagComb > 0{_bgcfa +="\u007c\u0043\u006fm\u0062";};if _gade &FieldFlagRichText > 0{_bgcfa +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";};if _gade &FieldFlagDoNotSpellCheck > 0{_bgcfa +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";
};if _gade &FieldFlagCombo > 0{_bgcfa +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _gade &FieldFlagEdit > 0{_bgcfa +="\u007c\u0045\u0064i\u0074";};if _gade &FieldFlagSort > 0{_bgcfa +="\u007c\u0053\u006fr\u0074";};if _gade &FieldFlagMultiSelect > 0{_bgcfa +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";
};if _gade &FieldFlagCommitOnSelChange > 0{_bgcfa +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";};return _df .Trim (_bgcfa ,"\u007c");};

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _bbe .PdfObject ;Volume _bbe .PdfObject ;Synchronous _bbe .PdfObject ;Repeat _bbe .PdfObject ;Mix _bbe .PdfObject ;};

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_bbe .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};

// FieldImageProvider provides fields images for specified fields.
type FieldImageProvider interface{FieldImageValues ()(map[string ]*Image ,error );};func (_ddbb *PdfWriter )seekByName (_gaaba _bbe .PdfObject ,_bbccce []string ,_ddgef string )([]_bbe .PdfObject ,error ){_gcf .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_gaaba );
var _dgdfge []_bbe .PdfObject ;if _ffabg ,_gadd :=_gaaba .(*_bbe .PdfIndirectObject );_gadd {return _ddbb .seekByName (_ffabg .PdfObject ,_bbccce ,_ddgef );};if _efcda ,_fgefg :=_gaaba .(*_bbe .PdfObjectStream );_fgefg {return _ddbb .seekByName (_efcda .PdfObjectDictionary ,_bbccce ,_ddgef );
};if _abdea ,_dgabe :=_gaaba .(*_bbe .PdfObjectDictionary );_dgabe {_gcf .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_badea :=range _abdea .Keys (){_efaef :=_abdea .Get (_badea );if string (_badea )==_ddgef {_dgdfge =append (_dgdfge ,_efaef );};for _ ,_ccfgg :=range _bbccce {if string (_badea )==_ccfgg {_gcf .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_ccfgg );
_fcgaa ,_fdeba :=_ddbb .seekByName (_efaef ,_bbccce ,_ddgef );if _fdeba !=nil {return _dgdfge ,_fdeba ;};_dgdfge =append (_dgdfge ,_fcgaa ...);break ;};};};return _dgdfge ,nil ;};return _dgdfge ,nil ;};

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_ggggg byte )byte ;

// MergePageWith appends page content to source Pdf file page content.
func (_adde *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_bbgf :=pageNum -1;var _cacb *PdfPage ;for _afcd ,_dbde :=range _adde ._gada {if _afcd ==_bbgf {_cacb =_dbde ;};};if _cacb ==nil {return _g .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );
};if _cacb ._efggg !=nil &&_cacb ._efggg .GetParser ()==_adde ._aeaa ._ffgcd {_cacb =_cacb .Duplicate ();_adde ._gada [_bbgf ]=_cacb ;};page =page .Duplicate ();_eagf (page );_bdad :=_ccdd (_cacb );_bbbb :=_ccdd (page );_cgbfd :=make (map[_bbe .PdfObjectName ]_bbe .PdfObjectName );
for _eaedd :=range _bbbb {if _ ,_ccgf :=_bdad [_eaedd ];_ccgf {for _befg :=1;true ;_befg ++{_dfdb :=_bbe .PdfObjectName (string (_eaedd )+_fc .Itoa (_befg ));if _ ,_dbec :=_bdad [_dfdb ];!_dbec {_cgbfd [_eaedd ]=_dfdb ;break ;};};};};_aegf ,_fdfb :=page .GetContentStreams ();
if _fdfb !=nil {return _fdfb ;};_bcab ,_fdfb :=_cacb .GetContentStreams ();if _fdfb !=nil {return _fdfb ;};for _cafa ,_debd :=range _aegf {for _bbbaf ,_eeae :=range _cgbfd {_debd =_df .Replace (_debd ,"\u002f"+string (_bbbaf ),"\u002f"+string (_eeae ),-1);
};_aegf [_cafa ]=_debd ;};_bcab =append (_bcab ,_aegf ...);if _adbcdd :=_cacb .SetContentStreams (_bcab ,_bbe .NewFlateEncoder ());_adbcdd !=nil {return _adbcdd ;};_cacb ._eeeeb =append (_cacb ._eeeeb ,page ._eeeeb ...);if _cacb .Resources ==nil {_cacb .Resources =NewPdfPageResources ();
};if page .Resources !=nil {_cacb .Resources .Font =_adde .mergeResources (_cacb .Resources .Font ,page .Resources .Font ,_cgbfd );_cacb .Resources .XObject =_adde .mergeResources (_cacb .Resources .XObject ,page .Resources .XObject ,_cgbfd );_cacb .Resources .Properties =_adde .mergeResources (_cacb .Resources .Properties ,page .Resources .Properties ,_cgbfd );
if _cacb .Resources .ProcSet ==nil {_cacb .Resources .ProcSet =page .Resources .ProcSet ;};_cacb .Resources .Shading =_adde .mergeResources (_cacb .Resources .Shading ,page .Resources .Shading ,_cgbfd );_cacb .Resources .ExtGState =_adde .mergeResources (_cacb .Resources .ExtGState ,page .Resources .ExtGState ,_cgbfd );
};_acfee ,_fdfb :=_cacb .GetMediaBox ();if _fdfb !=nil {return _fdfb ;};_gaad ,_fdfb :=page .GetMediaBox ();if _fdfb !=nil {return _fdfb ;};var _abbc bool ;if _acfee .Llx > _gaad .Llx {_acfee .Llx =_gaad .Llx ;_abbc =true ;};if _acfee .Lly > _gaad .Lly {_acfee .Lly =_gaad .Lly ;
_abbc =true ;};if _acfee .Urx < _gaad .Urx {_acfee .Urx =_gaad .Urx ;_abbc =true ;};if _acfee .Ury < _gaad .Ury {_acfee .Ury =_gaad .Ury ;_abbc =true ;};if _abbc {_cacb .MediaBox =_acfee ;};return nil ;};

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_ebgf :=&PdfBorderStyle {};return _ebgf };

// SetPatternByName sets a pattern resource specified by keyName.
func (_afbbb *PdfPageResources )SetPatternByName (keyName _bbe .PdfObjectName ,pattern _bbe .PdfObject )error {if _afbbb .Pattern ==nil {_afbbb .Pattern =_bbe .MakeDict ();};_bfdda ,_cdaad :=_bbe .GetDict (_afbbb .Pattern );if !_cdaad {return _bbe .ErrTypeError ;
};_bfdda .Set (keyName ,pattern );return nil ;};func (_cbba *PdfReader )newPdfFieldFromIndirectObject (_fddbf *_bbe .PdfIndirectObject ,_bcaef *PdfField )(*PdfField ,error ){if _acc ,_bdbe :=_cbba ._ffgae .GetModelFromPrimitive (_fddbf ).(*PdfField );_bdbe {return _acc ,nil ;
};_fdga ,_cfbe :=_bbe .GetDict (_fddbf );if !_cfbe {return nil ,_g .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_dbge :=NewPdfField ();_dbge ._acga =_fddbf ;_dbge ._acga .PdfObject =_fdga ;if _debf ,_ccfdg :=_bbe .GetName (_fdga .Get ("\u0046\u0054"));_ccfdg {_dbge .FT =_debf ;};if _bcaef !=nil {_dbge .Parent =_bcaef ;};_dbge .T ,_ =_fdga .Get ("\u0054").(*_bbe .PdfObjectString );
_dbge .TU ,_ =_fdga .Get ("\u0054\u0055").(*_bbe .PdfObjectString );_dbge .TM ,_ =_fdga .Get ("\u0054\u004d").(*_bbe .PdfObjectString );_dbge .Ff ,_ =_fdga .Get ("\u0046\u0066").(*_bbe .PdfObjectInteger );_dbge .V =_fdga .Get ("\u0056");_dbge .DV =_fdga .Get ("\u0044\u0056");
_dbge .AA =_fdga .Get ("\u0041\u0041");if DA :=_fdga .Get ("\u0044\u0041");DA !=nil {DA ,_ :=_bbe .GetString (DA );_dbge .VariableText =&VariableText {DA :DA };Q ,_ :=_fdga .Get ("\u0051").(*_bbe .PdfObjectInteger );DS ,_ :=_fdga .Get ("\u0044\u0053").(*_bbe .PdfObjectString );
RV :=_fdga .Get ("\u0052\u0056");_dbge .VariableText .Q =Q ;_dbge .VariableText .DS =DS ;_dbge .VariableText .RV =RV ;};_gcfb :=_dbge .FT ;if _gcfb ==nil &&_bcaef !=nil {_gcfb =_bcaef .FT ;};if _gcfb !=nil {switch *_gcfb {case "\u0054\u0078":_dafbe ,_abdb :=_edcdf (_fdga );
if _abdb !=nil {return nil ,_abdb ;};_dafbe .PdfField =_dbge ;_dbge ._dabg =_dafbe ;case "\u0043\u0068":_gafa ,_ggaae :=_gadad (_fdga );if _ggaae !=nil {return nil ,_ggaae ;};_gafa .PdfField =_dbge ;_dbge ._dabg =_gafa ;case "\u0042\u0074\u006e":_abbgg ,_acag :=_bebc (_fdga );
if _acag !=nil {return nil ,_acag ;};_abbgg .PdfField =_dbge ;_dbge ._dabg =_abbgg ;case "\u0053\u0069\u0067":_aacc ,_cfbed :=_cbba .newPdfFieldSignatureFromDict (_fdga );if _cfbed !=nil {return nil ,_cfbed ;};_aacc .PdfField =_dbge ;_dbge ._dabg =_aacc ;
default:_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_dbge .FT );return nil ,_cc .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");
};};if _gbca ,_eadcd :=_bbe .GetName (_fdga .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_eadcd {if *_gbca =="\u0057\u0069\u0064\u0067\u0065\u0074"{_cggbe ,_ggegf :=_cbba .newPdfAnnotationFromIndirectObject (_fddbf );if _ggegf !=nil {return nil ,_ggegf ;
};_cdad ,_fgff :=_cggbe .GetContext ().(*PdfAnnotationWidget );if !_fgff {return nil ,_cc .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");};_cdad ._abdd =_dbge ;_cdad .Parent =_dbge ._acga ;
_dbge .Annotations =append (_dbge .Annotations ,_cdad );return _dbge ,nil ;};};_cbegd :=true ;if _fbcg ,_gfdb :=_bbe .GetArray (_fdga .Get ("\u004b\u0069\u0064\u0073"));_gfdb {_daeb :=make ([]*_bbe .PdfIndirectObject ,0,_fbcg .Len ());for _ ,_eaee :=range _fbcg .Elements (){_fcggg ,_daef :=_bbe .GetIndirect (_eaee );
if !_daef {_cadd ,_afca :=_bbe .GetStream (_eaee );if _afca &&_cadd .PdfObjectDictionary !=nil {_fbacc ,_fgdf :=_bbe .GetNameVal (_cadd .Get ("\u0054\u0079\u0070\u0065"));if _fgdf &&_fbacc =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_gcf .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");
continue ;};};return nil ,_cc .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_cefdf ,_ddfge :=_bbe .GetDict (_fcggg );
if !_ddfge {return nil ,ErrTypeCheck ;};if _cbegd {_cbegd =!_cbcf (_cefdf );};_daeb =append (_daeb ,_fcggg );};for _ ,_ggbc :=range _daeb {if _cbegd {_afged ,_ggge :=_cbba .newPdfAnnotationFromIndirectObject (_ggbc );if _ggge !=nil {_gcf .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_ggge );
return nil ,_ggge ;};_eagdb ,_ffedba :=_afged ._ccfb .(*PdfAnnotationWidget );if !_ffedba {return nil ,ErrTypeCheck ;};_eagdb ._abdd =_dbge ;_dbge .Annotations =append (_dbge .Annotations ,_eagdb );}else {_fgfa ,_cdddg :=_cbba .newPdfFieldFromIndirectObject (_ggbc ,_dbge );
if _cdddg !=nil {_gcf .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_cdddg );return nil ,_cdddg ;};_dbge .Kids =append (_dbge .Kids ,_fgfa );
};};};return _dbge ,nil ;};

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_acadg *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_dabg PdfModel ;_acga *_bbe .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_bbe .PdfObjectName ;T *_bbe .PdfObjectString ;TU *_bbe .PdfObjectString ;TM *_bbe .PdfObjectString ;Ff *_bbe .PdfObjectInteger ;
V _bbe .PdfObject ;DV _bbe .PdfObject ;AA _bbe .PdfObject ;VariableText *VariableText ;};

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_efbe :=NewPdfAnnotation ();_cdd :=&PdfAnnotationUnderline {};_cdd .PdfAnnotation =_efbe ;_cdd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_efbe .SetContext (_cdd );return _cdd ;};

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_afgg :=NewPdfAnnotation ();_eegc :=&PdfAnnotationLink {};_eegc .PdfAnnotation =_afgg ;_afgg .SetContext (_eegc );return _eegc ;};

// ReaderToWriterOpts options used to generate a PdfWriter.
type ReaderToWriterOpts struct{SkipAcroForm bool ;SkipInfo bool ;SkipNameDictionary bool ;SkipNamedDests bool ;SkipOCProperties bool ;SkipOutlines bool ;SkipPageLabels bool ;SkipRotation bool ;SkipMetadata bool ;PageProcessCallback PageProcessCallback ;


// Deprecated: will be removed in v4. Use PageProcessCallback instead.
PageCallback PageCallback ;};

// ColorToRGB converts an Indexed color to an RGB color.
func (_aaea *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _aaea .Base ==nil {return nil ,_cc .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _aaea .Base .ColorToRGB (color );};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_bbe .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_bbe .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_bbe .PdfObjectBool ;_cgge PdfModel ;_eecbb _bbe .PdfObject ;};func (_fgce *PdfWriter )writeXRefStreams (_ccdcc int ,_faca int64 )error {_dagef :=_ccdcc +1;
_fgce ._cffgb [_dagef ]=crossReference {Type :1,ObjectNumber :_dagef ,Offset :_faca };_fdgec :=_cf .NewBuffer (nil );_bbbbb :=_bbe .MakeArray ();for _gcda :=0;_gcda <=_ccdcc ;{for ;_gcda <=_ccdcc ;_gcda ++{_gcabfe ,_cdccag :=_fgce ._cffgb [_gcda ];if _cdccag &&(!_fgce ._degbe ||_fgce ._degbe &&(_gcabfe .Type ==1&&_gcabfe .Offset >=_fgce ._ageg ||_gcabfe .Type ==0)){break ;
};};var _ecdfg int ;for _ecdfg =_gcda +1;_ecdfg <=_ccdcc ;_ecdfg ++{_cdfce ,_gebbf :=_fgce ._cffgb [_ecdfg ];if _gebbf &&(!_fgce ._degbe ||_fgce ._degbe &&(_cdfce .Type ==1&&_cdfce .Offset > _fgce ._ageg )){continue ;};break ;};_bbbbb .Append (_bbe .MakeInteger (int64 (_gcda )),_bbe .MakeInteger (int64 (_ecdfg -_gcda )));
for _afaefb :=_gcda ;_afaefb < _ecdfg ;_afaefb ++{_cgfa :=_fgce ._cffgb [_afaefb ];switch _cgfa .Type {case 0:_b .Write (_fdgec ,_b .BigEndian ,byte (0));_b .Write (_fdgec ,_b .BigEndian ,uint32 (0));_b .Write (_fdgec ,_b .BigEndian ,uint16 (0xFFFF));case 1:_b .Write (_fdgec ,_b .BigEndian ,byte (1));
_b .Write (_fdgec ,_b .BigEndian ,uint32 (_cgfa .Offset ));_b .Write (_fdgec ,_b .BigEndian ,uint16 (_cgfa .Generation ));case 2:_b .Write (_fdgec ,_b .BigEndian ,byte (2));_b .Write (_fdgec ,_b .BigEndian ,uint32 (_cgfa .ObjectNumber ));_b .Write (_fdgec ,_b .BigEndian ,uint16 (_cgfa .Index ));
};};_gcda =_ecdfg +1;};_gbaef ,_bbfgd :=_bbe .MakeStream (_fdgec .Bytes (),_bbe .NewFlateEncoder ());if _bbfgd !=nil {return _bbfgd ;};_gbaef .ObjectNumber =int64 (_dagef );_gbaef .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_bbe .MakeName ("\u0058\u0052\u0065\u0066"));
_gbaef .PdfObjectDictionary .Set ("\u0057",_bbe .MakeArray (_bbe .MakeInteger (1),_bbe .MakeInteger (4),_bbe .MakeInteger (2)));_gbaef .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_bbbbb );_gbaef .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_bbe .MakeInteger (int64 (_dagef +1)));
_gbaef .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_fgce ._befcg );_gbaef .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_fgce ._ecdbbf );if _fgce ._degbe &&_fgce ._cebbb > 0{_gbaef .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_bbe .MakeInteger (_fgce ._cebbb ));
};if _fgce ._ceba !=nil {_gbaef .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_fgce ._bgdgf );};if _fgce ._gggff ==nil &&_fgce ._agbeb !=""&&_fgce ._dfaef !=""{_fgce ._gggff =_bbe .MakeArray (_bbe .MakeHexString (_fgce ._agbeb ),_bbe .MakeHexString (_fgce ._dfaef ));
};if _fgce ._gggff !=nil {_gcf .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_fgce ._gggff );_gbaef .Set ("\u0049\u0044",_fgce ._gggff );};_fgce .writeObject (int (_gbaef .ObjectNumber ),_gbaef );return nil ;};

// RemovePage removes a page by number.
func (_adf *PdfAppender )RemovePage (pageNum int ){_ebfa :=pageNum -1;_adf ._gada =append (_adf ._gada [0:_ebfa ],_adf ._gada [pageNum :]...);};

// ToPdfObject implements interface PdfModel.
func (_ggedc *PdfTransformParamsDocMDP )ToPdfObject ()_bbe .PdfObject {_abddgd :=_bbe .MakeDict ();_abddgd .SetIfNotNil ("\u0054\u0079\u0070\u0065",_ggedc .Type );_abddgd .SetIfNotNil ("\u0056",_ggedc .V );_abddgd .SetIfNotNil ("\u0050",_ggedc .P );return _abddgd ;
};

// NewPdfShadingType3 creates an empty shading type 3 dictionary.
func NewPdfShadingType3 ()*PdfShadingType3 {_bdaa :=&PdfShadingType3 {};_bdaa .PdfShading =&PdfShading {};_bdaa .PdfShading ._eecbb =_bbe .MakeIndirectObject (_bbe .MakeDict ());_bdaa .PdfShading ._cgge =_bdaa ;return _bdaa ;};func _ffab (_fabag _bbe .PdfObject )(*PdfPattern ,error ){_acaf :=&PdfPattern {};
var _dbdgag *_bbe .PdfObjectDictionary ;if _fgfcg ,_eaea :=_bbe .GetIndirect (_fabag );_eaea {_acaf ._agefc =_fgfcg ;_ecag ,_dbecg :=_fgfcg .PdfObject .(*_bbe .PdfObjectDictionary );if !_dbecg {_gcf .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_fgfcg .PdfObject );
return nil ,_bbe .ErrTypeError ;};_dbdgag =_ecag ;}else if _aacdbd ,_ddfdf :=_bbe .GetStream (_fabag );_ddfdf {_acaf ._agefc =_aacdbd ;_dbdgag =_aacdbd .PdfObjectDictionary ;}else {_gcf .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_fabag );
return nil ,_bbe .ErrTypeError ;};_egfda :=_dbdgag .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _egfda ==nil {_gcf .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");
return nil ,ErrRequiredAttributeMissing ;};_cfadc ,_cadb :=_egfda .(*_bbe .PdfObjectInteger );if !_cadb {_gcf .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_egfda );
return nil ,_bbe .ErrTypeError ;};if *_cfadc !=1&&*_cfadc !=2{_gcf .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_cfadc );return nil ,_bbe .ErrRangeError ;
};_acaf .PatternType =int64 (*_cfadc );switch *_cfadc {case 1:_dfdeg ,_fabf :=_bbgbc (_dbdgag );if _fabf !=nil {return nil ,_fabf ;};_dfdeg .PdfPattern =_acaf ;_acaf ._adcag =_dfdeg ;return _acaf ,nil ;case 2:_dgddb ,_bgcca :=_deeeg (_dbdgag );if _bgcca !=nil {return nil ,_bgcca ;
};_dgddb .PdfPattern =_acaf ;_acaf ._adcag =_dgddb ;return _acaf ,nil ;};return nil ,_cc .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_adad *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_aggcd :=_dfc .NewReader (img .getBase ());_abac :=_gb .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_adad .AlternateSpace .GetNumComponents (),nil ,img ._gagad ,nil );
_agdb :=_dfc .NewWriter (_abac );_bgbdf :=_ab .Pow (2,float64 (img .BitsPerComponent ))-1;_gcf .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");
_gcf .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_adad .TintTransform );_bffec :=_adad .AlternateSpace .DecodeArray ();var (_cgdeg uint32 ;_fdba error ;);for {_cgdeg ,_fdba =_aggcd .ReadSample ();
if _fdba ==_geb .EOF {break ;};if _fdba !=nil {return img ,_fdba ;};_dcgb :=float64 (_cgdeg )/_bgbdf ;_agfed ,_fdcdf :=_adad .TintTransform .Evaluate ([]float64 {_dcgb });if _fdcdf !=nil {return img ,_fdcdf ;};for _cege ,_dagg :=range _agfed {_cdaab :=_gb .LinearInterpolate (_dagg ,_bffec [_cege *2],_bffec [_cege *2+1],0,1);
if _fdcdf =_agdb .WriteSample (uint32 (_cdaab *_bgbdf ));_fdcdf !=nil {return img ,_fdcdf ;};};};return _adad .AlternateSpace .ImageToRGB (_gdbea (&_abac ));};

// GetContentStreamObjs returns a slice of PDF objects containing the content
// streams of the page.
func (_affga *PdfPage )GetContentStreamObjs ()[]_bbe .PdfObject {if _affga .Contents ==nil {return nil ;};_efeg :=_bbe .TraceToDirectObject (_affga .Contents );if _ffbd ,_eaceb :=_efeg .(*_bbe .PdfObjectArray );_eaceb {return _ffbd .Elements ();};return []_bbe .PdfObject {_efeg };
};

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_bbe .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _bbe .PdfObject ;A _bbe .PdfObject ;SE _bbe .PdfObject ;C _bbe .PdfObject ;F _bbe .PdfObject ;
_ebaeg *_bbe .PdfIndirectObject ;};func _cacea (_bfcf *XObjectImage )error {if _bfcf .SMask ==nil {return nil ;};_cdaade ,_gegbcf :=_bfcf .SMask .(*_bbe .PdfObjectStream );if !_gegbcf {_gcf .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");
return _bbe .ErrTypeError ;};_agecae :=_cdaade .PdfObjectDictionary ;_fcdeb :=_agecae .Get ("\u004d\u0061\u0074t\u0065");if _fcdeb ==nil {return nil ;};_bagd ,_ggecf :=_ddbbf (_fcdeb .(*_bbe .PdfObjectArray ));if _ggecf !=nil {return _ggecf ;};_gccfd :=_bbe .MakeArrayFromFloats ([]float64 {_bagd });
_agecae .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_gccfd );return nil ;};func (_dbbeb *PdfReader )newPdfSignatureFromIndirect (_ebdcd *_bbe .PdfIndirectObject )(*PdfSignature ,error ){_decce ,_gefbfd :=_ebdcd .PdfObject .(*_bbe .PdfObjectDictionary );if !_gefbfd {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,ErrTypeCheck ;};if _gfgaa ,_aafdf :=_dbbeb ._ffgae .GetModelFromPrimitive (_ebdcd ).(*PdfSignature );_aafdf {return _gfgaa ,nil ;};_fggc :=&PdfSignature {};_fggc ._babd =_ebdcd ;_fggc .Type ,_ =_bbe .GetName (_decce .Get ("\u0054\u0079\u0070\u0065"));
_fggc .Filter ,_gefbfd =_bbe .GetName (_decce .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_gefbfd {_gcf .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_fggc .SubFilter ,_ =_bbe .GetName (_decce .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_fggc .Contents ,_gefbfd =_bbe .GetString (_decce .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_gefbfd {_gcf .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};if _dedc ,_bfad :=_bbe .GetArray (_decce .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));_bfad {_fggc .Reference =_bbe .MakeArray ();for _ ,_afggc :=range _dedc .Elements (){_afbec ,_dcffa :=_bbe .GetDict (_afggc );
if !_dcffa {_gcf .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020R\u0065\u0066e\u0072\u0065\u006e\u0063\u0065\u0020\u0063\u006fn\u0074\u0065\u006e\u0074\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0061\u0074\u0065\u0064");return nil ,ErrInvalidAttribute ;
};_ceeec ,_babg :=_dbbeb .newPdfSignatureReferenceFromDict (_afbec );if _babg !=nil {return nil ,_babg ;};_fggc .Reference .Append (_ceeec .ToPdfObject ());};};_fggc .Cert =_decce .Get ("\u0043\u0065\u0072\u0074");_fggc .ByteRange ,_ =_bbe .GetArray (_decce .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));
_fggc .Changes ,_ =_bbe .GetArray (_decce .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_fggc .Name ,_ =_bbe .GetString (_decce .Get ("\u004e\u0061\u006d\u0065"));_fggc .M ,_ =_bbe .GetString (_decce .Get ("\u004d"));_fggc .Location ,_ =_bbe .GetString (_decce .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));
_fggc .Reason ,_ =_bbe .GetString (_decce .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_fggc .ContactInfo ,_ =_bbe .GetString (_decce .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_fggc .R ,_ =_bbe .GetInt (_decce .Get ("\u0052"));
_fggc .V ,_ =_bbe .GetInt (_decce .Get ("\u0056"));_fggc .PropBuild ,_ =_bbe .GetDict (_decce .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_fggc .PropAuthTime ,_ =_bbe .GetInt (_decce .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));
_fggc .PropAuthType ,_ =_bbe .GetName (_decce .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));_dbbeb ._ffgae .Register (_ebdcd ,_fggc );return _fggc ,nil ;};

// Encoder returns the font's text encoder.
func (_edca pdfCIDFontType2 )Encoder ()_ff .TextEncoder {return _edca ._efeaa };

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_cacaa *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _cacaa .flattenFieldsWithOpts (false ,appgen ,opts );};func _gfec (_geebe *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_ccdfe ,_bbaf :=_bbe .GetDict (_geebe .AP );
if !_bbaf {return nil ,nil ,_cc .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");};if _ccdfe ==nil {return nil ,nil ,nil ;};_dcffg ,_bbaf :=_bbe .GetArray (_geebe .Rect );
if !_bbaf ||_dcffg .Len ()!=4{return nil ,nil ,_cc .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_ffba ,_baabf :=NewPdfRectangle (*_dcffg );if _baabf !=nil {return nil ,nil ,_baabf ;};_abdf :=_bbe .TraceToDirectObject (_ccdfe .Get ("\u004e"));
switch _ecbd :=_abdf .(type ){case *_bbe .PdfObjectStream :_gdcba :=_ecbd ;_faeg ,_feda :=NewXObjectFormFromStream (_gdcba );return _faeg ,_ffba ,_feda ;case *_bbe .PdfObjectDictionary :_accd :=_ecbd ;_abddb ,_bggab :=_bbe .GetName (_geebe .AS );if !_bggab {return nil ,nil ,nil ;
};if _accd .Get (*_abddb )==nil {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");
return nil ,nil ,nil ;};_cbcbg ,_bggab :=_bbe .GetStream (_accd .Get (*_abddb ));if !_bggab {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_abddb );
return nil ,nil ,_cc .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_caee ,_bcdeb :=NewXObjectFormFromStream (_cbcbg );return _caee ,_ffba ,_bcdeb ;};_gcf .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_abdf );
return nil ,nil ,_cc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};func (_aebdf *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";};const (RC4_128bit =EncryptionAlgorithm (iota );
AES_128bit ;AES_256bit ;);func (_agc *PdfReader )newPdfActionSoundFromDict (_bcd *_bbe .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_bcd .Get ("\u0053\u006f\u0075n\u0064"),Volume :_bcd .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_bcd .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_bcd .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_bcd .Get ("\u004d\u0069\u0078")},nil ;
};func (_beefd *PdfReader )resolveReference (_ecebg *_bbe .PdfObjectReference )(_bbe .PdfObject ,bool ,error ){_bbceb ,_deea :=_beefd ._ffgcd .ObjCache [int (_ecebg .ObjectNumber )];if !_deea {_gcf .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_ecebg );
_dgae ,_cdfbc :=_beefd ._ffgcd .LookupByReference (*_ecebg );if _cdfbc !=nil {return nil ,false ,_cdfbc ;};_beefd ._ffgcd .ObjCache [int (_ecebg .ObjectNumber )]=_dgae ;return _dgae ,false ,nil ;};return _bbceb ,true ,nil ;};func _cbdff (_bgcdc *_bbe .PdfObjectDictionary ,_addab *fontCommon )(*pdfFontType3 ,error ){_dbbdb :=_gfdad (_addab );
_aede :=_bgcdc .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _aede ==nil {_aede =_bbe .MakeInteger (0);};_dbbdb .FirstChar =_aede ;_dbdcb ,_gedce :=_bbe .GetIntVal (_aede );if !_gedce {_gcf .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_aede );
return nil ,_bbe .ErrTypeError ;};_abdcc :=_ff .CharCode (_dbdcb );_aede =_bgcdc .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _aede ==nil {_aede =_bbe .MakeInteger (255);};_dbbdb .LastChar =_aede ;_dbdcb ,_gedce =_bbe .GetIntVal (_aede );
if !_gedce {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_aede );return nil ,_bbe .ErrTypeError ;
};_fbbf :=_ff .CharCode (_dbdcb );_aede =_bgcdc .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _aede !=nil {_dbbdb .Resources =_aede ;};_aede =_bgcdc .Get ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s");if _aede ==nil {_gcf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0068\u0061\u0072\u0050\u0072\u006f\u0063\u0073\u0020(%\u0076\u0029",_aede );
return nil ,_bbe .ErrNotSupported ;};_dbbdb .CharProcs =_aede ;_aede =_bgcdc .Get ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078");if _aede ==nil {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0046\u006f\u006et\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0028\u0025\u0076\u0029",_aede );
return nil ,_bbe .ErrNotSupported ;};_dbbdb .FontMatrix =_aede ;_dbbdb ._ecfga =make (map[_ff .CharCode ]float64 );_aede =_bgcdc .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _aede !=nil {_dbbdb .Widths =_aede ;_fagga ,_beccb :=_bbe .GetArray (_aede );
if !_beccb {_gcf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_aede );return nil ,_bbe .ErrTypeError ;
};_gaecf ,_ebdd :=_fagga .ToFloat64Array ();if _ebdd !=nil {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_ebdd ;};if len (_gaecf )!=int (_fbbf -_abdcc +1){_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_fbbf -_abdcc +1,len (_gaecf ));
return nil ,_bbe .ErrRangeError ;};_bedc ,_beccb :=_bbe .GetArray (_dbbdb .FontMatrix );if !_beccb {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_bedc );
return nil ,_ebdd ;};_eacbe ,_ebdd :=_bedc .ToFloat64Array ();if _ebdd !=nil {_gcf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020c\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0046o\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_ebdd ;};_cdbbbg :=_ggeb .NewMatrix (_eacbe [0],_eacbe [1],_eacbe [2],_eacbe [3],_eacbe [4],_eacbe [5]);for _ggfb ,_acdf :=range _gaecf {_eeaaa ,_ :=_cdbbbg .Transform (_acdf ,_acdf );_dbbdb ._ecfga [_abdcc +_ff .CharCode (_ggfb )]=_eeaaa ;
};};_dbbdb .Encoding =_bbe .TraceToDirectObject (_bgcdc .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));_effg :=_bgcdc .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _effg !=nil {_dbbdb ._adbd =_bbe .TraceToDirectObject (_effg );_ecac ,_fcacgb :=_dbgcc (_dbbdb ._adbd ,&_dbbdb .fontCommon );
if _fcacgb !=nil {return nil ,_fcacgb ;};_dbbdb ._ggdec =_ecac ;};if _dgee :=_dbbdb ._ggdec ;_dgee !=nil {_dbbdb ._adfd =_ff .NewCMapEncoder ("",nil ,_dgee );}else {_dbbdb ._adfd =_ff .NewPdfDocEncoder ();};return _dbbdb ,nil ;};

// ColorToRGB converts a DeviceN color to an RGB color.
func (_bfea *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _bfea .AlternateSpace ==nil {return nil ,_cc .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _bfea .AlternateSpace .ColorToRGB (color );};

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_acga :_bbe .MakeIndirectObject (_bbe .MakeDict ())}};

// AddImageResource adds an image to the XObject resources.
func (_gcde *PdfPage )AddImageResource (name _bbe .PdfObjectName ,ximg *XObjectImage )error {var _fedfb *_bbe .PdfObjectDictionary ;if _gcde .Resources .XObject ==nil {_fedfb =_bbe .MakeDict ();_gcde .Resources .XObject =_fedfb ;}else {var _ffbb bool ;
_fedfb ,_ffbb =(_gcde .Resources .XObject ).(*_bbe .PdfObjectDictionary );if !_ffbb {return _cc .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_fedfb .Set (name ,ximg .ToPdfObject ());
return nil ;};func (_cdae *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";};func _beca (_fdcc _bbe .PdfObject )(*_bbe .PdfObjectDictionary ,*fontCommon ,error ){_afdd :=&fontCommon {};if _adfa ,_fagcg :=_fdcc .(*_bbe .PdfIndirectObject );
_fagcg {_afdd ._adcg =_adfa .ObjectNumber ;};_gbccg ,_ffcfb :=_bbe .GetDict (_fdcc );if !_ffcfb {_gcf .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_fdcc );
return nil ,nil ,ErrFontNotSupported ;};_beddb ,_ffcfb :=_bbe .GetNameVal (_gbccg .Get ("\u0054\u0079\u0070\u0065"));if !_ffcfb {_gcf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};if _beddb !="\u0046\u006f\u006e\u0074"{_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_beddb ,"\u0046\u006f\u006e\u0074");
return nil ,nil ,_bbe .ErrTypeError ;};_ggce ,_ffcfb :=_bbe .GetNameVal (_gbccg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_ffcfb {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};_afdd ._cafed =_ggce ;_dcfb ,_ffcfb :=_bbe .GetNameVal (_gbccg .Get ("\u004e\u0061\u006d\u0065"));if _ffcfb {_afdd ._aefc =_dcfb ;};_abagb :=_gbccg .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _abagb !=nil {_afdd ._adbd =_bbe .TraceToDirectObject (_abagb );
_bdbaf ,_ggced :=_dbgcc (_afdd ._adbd ,_afdd );if _ggced !=nil {return _gbccg ,_afdd ,_ggced ;};_afdd ._ggdec =_bdbaf ;}else if _ggce =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_ggce =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_fdcab ,_gafbd :=_fb .NewCIDSystemInfo (_gbccg .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _gafbd !=nil {return _gbccg ,_afdd ,_gafbd ;};_bgff :=_g .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_fdcab .Registry ,_fdcab .Ordering );if _fb .IsPredefinedCMap (_bgff ){_afdd ._ggdec ,_gafbd =_fb .LoadPredefinedCMap (_bgff );
if _gafbd !=nil {_gcf .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_bgff ,_gafbd );
};};};_bcgab :=_gbccg .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _bcgab !=nil {_cffcf ,_effbf :=_aafdc (_bcgab );if _effbf !=nil {_gcf .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_effbf );
return _gbccg ,_afdd ,_effbf ;};_afdd ._abdgdb =_cffcf ;};if _ggce !="\u0054\u0079\u0070e\u0033"{_aegfe ,_aecc :=_bbe .GetNameVal (_gbccg .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_aecc {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return _gbccg ,_afdd ,ErrRequiredAttributeMissing ;};_afdd ._ffdd =_aegfe ;};return _gbccg ,_afdd ,nil ;};

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_daeg *Image )SetSamples (samples []uint32 ){if _daeg .BitsPerComponent < 8{samples =_daeg .samplesAddPadding (samples );};_gbgag :=_dfc .ResampleUint32 (samples ,int (_daeg .BitsPerComponent ),8);_ccdba :=make ([]byte ,len (_gbgag ));for _afgb ,_dbgfc :=range _gbgag {_ccdba [_afgb ]=byte (_dbgfc );
};_daeg .Data =_ccdba ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_eadde *PdfColorspaceSpecialPattern )ToPdfObject ()_bbe .PdfObject {if _eadde .UnderlyingCS ==nil {return _bbe .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_addg :=_bbe .MakeArray (_bbe .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));
_addg .Append (_eadde .UnderlyingCS .ToPdfObject ());if _eadde ._babea !=nil {_eadde ._babea .PdfObject =_addg ;return _eadde ._babea ;};return _addg ;};func _gaee (_aafbc *_bbe .PdfObjectDictionary )*VRI {_agdee ,_ :=_bbe .GetString (_aafbc .Get ("\u0054\u0055"));
_aafd ,_ :=_bbe .GetString (_aafbc .Get ("\u0054\u0053"));return &VRI {Cert :_bddcg (_aafbc .Get ("\u0043\u0065\u0072\u0074")),OCSP :_bddcg (_aafbc .Get ("\u004f\u0043\u0053\u0050")),CRL :_bddcg (_aafbc .Get ("\u0043\u0052\u004c")),TU :_agdee ,TS :_aafd };
};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_dbfe *PdfShadingType1 )ToPdfObject ()_bbe .PdfObject {_dbfe .PdfShading .ToPdfObject ();_abgdc ,_aafa :=_dbfe .getShadingDict ();if _aafa !=nil {_gcf .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _dbfe .Domain !=nil {_abgdc .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_dbfe .Domain );};if _dbfe .Matrix !=nil {_abgdc .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_dbfe .Matrix );};if _dbfe .Function !=nil {if len (_dbfe .Function )==1{_abgdc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dbfe .Function [0].ToPdfObject ());
}else {_abfcbb :=_bbe .MakeArray ();for _ ,_ccfff :=range _dbfe .Function {_abfcbb .Append (_ccfff .ToPdfObject ());};_abgdc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_abfcbb );};};return _dbfe ._eecbb ;};func _deeeg (_bbaa *_bbe .PdfObjectDictionary )(*PdfShadingPattern ,error ){_dcefa :=&PdfShadingPattern {};
_gfba :=_bbaa .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");if _gfba ==nil {_gcf .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_gaffg ,_bdgfe :=_fggde (_gfba );
if _bdgfe !=nil {_gcf .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_bdgfe );return nil ,_bdgfe ;};_dcefa .Shading =_gaffg ;if _dccff :=_bbaa .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_dccff !=nil {_bdbgg ,_eaba :=_dccff .(*_bbe .PdfObjectArray );if !_eaba {_gcf .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dccff );
return nil ,_bbe .ErrTypeError ;};_dcefa .Matrix =_bdbgg ;};if _gcec :=_bbaa .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_gcec !=nil {_dcefa .ExtGState =_gcec ;};return _dcefa ,nil ;};

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
//
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
// message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
//
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_dgga *PdfFont )SubsetRegistered ()error {switch _ccgd :=_dgga ._afag .(type ){case *pdfFontType0 :_caded :=_ccgd .subsetRegistered ();if _caded !=nil {_gcf .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_caded );
return _caded ;};if _ccgd ._aacba !=nil {if _ccgd ._cacge !=nil {_ccgd ._cacge .ToPdfObject ();};_ccgd .ToPdfObject ();};default:_gcf .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_ccgd );
};return nil ;};func (_ffeba *PdfReader )newPdfSignatureReferenceFromDict (_cgbdf *_bbe .PdfObjectDictionary )(*PdfSignatureReference ,error ){if _edbgc ,_eabf :=_ffeba ._ffgae .GetModelFromPrimitive (_cgbdf ).(*PdfSignatureReference );_eabf {return _edbgc ,nil ;
};_bbegfb :=&PdfSignatureReference {_fcacc :_cgbdf ,Data :_cgbdf .Get ("\u0044\u0061\u0074\u0061")};var _ceece bool ;_bbegfb .Type ,_ =_bbe .GetName (_cgbdf .Get ("\u0054\u0079\u0070\u0065"));_bbegfb .TransformMethod ,_ceece =_bbe .GetName (_cgbdf .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
if !_ceece {_gcf .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0054\u0072\u0061\u006e\u0073\u0066o\u0072\u006dM\u0065\u0074h\u006f\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020in\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020m\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_bbegfb .TransformParams ,_ =_bbe .GetDict (_cgbdf .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_bbegfb .DigestMethod ,_ =_bbe .GetName (_cgbdf .Get ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064"));
return _bbegfb ,nil ;};

// AddOCSPs adds OCSPs to DSS.
func (_fefaa *DSS )AddOCSPs (ocsps [][]byte )([]*_bbe .PdfObjectStream ,error ){return _fefaa .add (&_fefaa .OCSPs ,_fefaa ._fcdf ,ocsps );};func _bbgbc (_afggb *_bbe .PdfObjectDictionary )(*PdfTilingPattern ,error ){_aebea :=&PdfTilingPattern {};_fcebcf :=_afggb .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");
if _fcebcf ==nil {_gcf .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_bgced ,_fcdfe :=_fcebcf .(*_bbe .PdfObjectInteger );if !_fcdfe {_gcf .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_fcebcf );
return nil ,_bbe .ErrTypeError ;};_aebea .PaintType =_bgced ;_fcebcf =_afggb .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _fcebcf ==nil {_gcf .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_dccef ,_fcdfe :=_fcebcf .(*_bbe .PdfObjectInteger );if !_fcdfe {_gcf .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fcebcf );
return nil ,_bbe .ErrTypeError ;};_aebea .TilingType =_dccef ;_fcebcf =_afggb .Get ("\u0042\u0042\u006f\u0078");if _fcebcf ==nil {_gcf .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_fcebcf =_bbe .TraceToDirectObject (_fcebcf );_bgcae ,_fcdfe :=_fcebcf .(*_bbe .PdfObjectArray );if !_fcdfe {_gcf .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fcebcf );
return nil ,_bbe .ErrTypeError ;};_baee ,_cgcff :=NewPdfRectangle (*_bgcae );if _cgcff !=nil {_gcf .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_cgcff );return nil ,_cgcff ;};_aebea .BBox =_baee ;_fcebcf =_afggb .Get ("\u0058\u0053\u0074e\u0070");
if _fcebcf ==nil {_gcf .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_gecf ,_cgcff :=_bbe .GetNumberAsFloat (_fcebcf );if _cgcff !=nil {_gcf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_gecf );
return nil ,_cgcff ;};_aebea .XStep =_bbe .MakeFloat (_gecf );_fcebcf =_afggb .Get ("\u0059\u0053\u0074e\u0070");if _fcebcf ==nil {_gcf .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_beac ,_cgcff :=_bbe .GetNumberAsFloat (_fcebcf );if _cgcff !=nil {_gcf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_beac );
return nil ,_cgcff ;};_aebea .YStep =_bbe .MakeFloat (_beac );_fcebcf =_afggb .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _fcebcf ==nil {_gcf .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_afggb ,_fcdfe =_bbe .TraceToDirectObject (_fcebcf ).(*_bbe .PdfObjectDictionary );if !_fcdfe {return nil ,_g .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_fcebcf );
};_ceaa ,_cgcff :=NewPdfPageResourcesFromDict (_afggb );if _cgcff !=nil {return nil ,_cgcff ;};_aebea .Resources =_ceaa ;if _bgabb :=_afggb .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_bgabb !=nil {_cgdec ,_bddag :=_bgabb .(*_bbe .PdfObjectArray );if !_bddag {_gcf .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bgabb );
return nil ,_bbe .ErrTypeError ;};_aebea .Matrix =_cgdec ;};return _aebea ,nil ;};

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_gded *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_cbcccb *_bbe .PdfIndirectObject ;};func _bgebc ()string {_cccbdc .Lock ();defer _cccbdc .Unlock ();_fffde :=_ea .GetLicenseKey ();if len (_aabd )> 0&&(_fffde .IsLicensed ()||_dafffd ){return _aabd ;
};return _g .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_bedbc (),_fffde .TypeToString ());};

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _bbe .PdfObject ;Dest _bbe .PdfObject ;H _bbe .PdfObject ;PA _bbe .PdfObject ;QuadPoints _bbe .PdfObject ;BS _bbe .PdfObject ;_ecb *PdfAction ;_gdc *PdfReader ;};

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_bbgff :=&PdfFieldSignature {};_bbgff .PdfField =NewPdfField ();_bbgff .PdfField .SetContext (_bbgff );_bbgff .PdfAnnotationWidget =NewPdfAnnotationWidget ();_bbgff .PdfAnnotationWidget .SetContext (_bbgff );
_bbgff .PdfAnnotationWidget ._dbg =_bbgff .PdfField ._acga ;_bbgff .T =_bbe .MakeString ("");_bbgff .F =_bbe .MakeInteger (132);_bbgff .V =signature ;return _bbgff ;};func (_egb *PdfReader )newPdfAnnotationFreeTextFromDict (_gaab *_bbe .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_bgac :=PdfAnnotationFreeText {};
_dfdd ,_fead :=_egb .newPdfAnnotationMarkupFromDict (_gaab );if _fead !=nil {return nil ,_fead ;};_bgac .PdfAnnotationMarkup =_dfdd ;_bgac .DA =_gaab .Get ("\u0044\u0041");_bgac .Q =_gaab .Get ("\u0051");_bgac .RC =_gaab .Get ("\u0052\u0043");_bgac .DS =_gaab .Get ("\u0044\u0053");
_bgac .CL =_gaab .Get ("\u0043\u004c");_bgac .IT =_gaab .Get ("\u0049\u0054");_bgac .BE =_gaab .Get ("\u0042\u0045");_bgac .RD =_gaab .Get ("\u0052\u0044");_bgac .BS =_gaab .Get ("\u0042\u0053");_bgac .LE =_gaab .Get ("\u004c\u0045");return &_bgac ,nil ;
};func (_ffbf *PdfPage )setContainer (_dceba *_bbe .PdfIndirectObject ){_dceba .PdfObject =_ffbf ._gbegc ;_ffbf ._efggg =_dceba ;};func _ebgba (_acee _bbe .PdfObject )(*PdfPageResourcesColorspaces ,error ){_fdcb :=&PdfPageResourcesColorspaces {};if _abcd ,_bbacb :=_acee .(*_bbe .PdfIndirectObject );
_bbacb {_fdcb ._cbcccb =_abcd ;_acee =_abcd .PdfObject ;};_cafcf ,_ggdcbb :=_bbe .GetDict (_acee );if !_ggdcbb {return nil ,_cc .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};_fdcb .Names =[]string {};_fdcb .Colorspaces =map[string ]PdfColorspace {};for _ ,_faac :=range _cafcf .Keys (){_acefc :=_cafcf .Get (_faac );_fdcb .Names =append (_fdcb .Names ,string (_faac ));_dbfcc ,_bdcef :=NewPdfColorspaceFromPdfObject (_acefc );
if _bdcef !=nil {return nil ,_bdcef ;};_fdcb .Colorspaces [string (_faac )]=_dbfcc ;};return _fdcb ,nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_daeae *PdfSignatureReference )GetContainingPdfObject ()_bbe .PdfObject {return _daeae ._fcacc };func (_bccd *PdfWriter )mapObjectStreams (_bdgbf bool )(map[_bbe .PdfObject ]bool ,bool ){_ggegg :=make (map[_bbe .PdfObject ]bool );for _ ,_ffgfd :=range _bccd ._ageab {if _gebg ,_ffgef :=_ffgfd .(*_bbe .PdfObjectStreams );
_ffgef {_bdgbf =true ;for _ ,_dedef :=range _gebg .Elements (){_ggegg [_dedef ]=true ;if _fffee ,_dgef :=_dedef .(*_bbe .PdfIndirectObject );_dgef {_ggegg [_fffee .PdfObject ]=true ;};};};};return _ggegg ,_bdgbf ;};

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _bbe .PdfObject ;BS _bbe .PdfObject ;LE _bbe .PdfObject ;IC _bbe .PdfObject ;LL _bbe .PdfObject ;LLE _bbe .PdfObject ;Cap _bbe .PdfObject ;IT _bbe .PdfObject ;LLO _bbe .PdfObject ;CP _bbe .PdfObject ;
Measure _bbe .PdfObject ;CO _bbe .PdfObject ;};func (_bceg *pdfFontSimple )addEncoding ()error {var (_fdge string ;_caec map[_ff .CharCode ]_ff .GlyphName ;_aebeg _ff .SimpleEncoder ;);if _bceg .Encoder ()!=nil {_bdgcc ,_cgece :=_bceg .Encoder ().(_ff .SimpleEncoder );
if _cgece &&_bdgcc !=nil {_fdge =_bdgcc .BaseName ();};};if _bceg .Encoding !=nil {_cace ,_gdea ,_cbdc :=_bceg .getFontEncoding ();if _cbdc !=nil {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bceg ._ffdd ,_bceg ._cafed ,_bceg .Encoding ,_bceg .Encoding ,_cbdc );
return _cbdc ;};if _cace !=""{_fdge =_cace ;};_caec =_gdea ;_aebeg ,_cbdc =_ff .NewSimpleTextEncoder (_fdge ,_caec );if _cbdc !=nil {return _cbdc ;};};if _aebeg ==nil {_eccee :=_bceg ._abdgdb ;if _eccee !=nil {switch _bceg ._cafed {case "\u0054\u0079\u0070e\u0031":if _eccee .fontFile !=nil &&_eccee .fontFile ._edaf !=nil {_gcf .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");
_aebeg =_eccee .fontFile ._edaf ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _eccee ._bfdf !=nil {_gcf .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_agbf ,_fbgbcg :=_eccee ._bfdf .MakeEncoder ();
if _fbgbcg ==nil {_aebeg =_agbf ;};if _bceg ._ggdec ==nil {_bceg ._ggdec =_eccee ._bfdf .MakeToUnicode ();};};};};};if _aebeg !=nil {if _caec !=nil {_gcf .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_caec ,_bceg .baseFields ());
_aebeg =_ff .ApplyDifferences (_aebeg ,_caec );};_bceg .SetEncoder (_aebeg );};return nil ;};func _bdbge ()*modelManager {_gddca :=modelManager {};_gddca ._gbfdg =map[PdfModel ]_bbe .PdfObject {};_gddca ._dccbf =map[_bbe .PdfObject ]PdfModel {};return &_gddca ;
};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_bdcc *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _bdcc .Alternate ==nil {if _bdcc .N ==1{_efef :=NewPdfColorspaceDeviceGray ();return _efef .ColorFromFloats (vals );}else if _bdcc .N ==3{_dfbd :=NewPdfColorspaceDeviceRGB ();
return _dfbd .ColorFromFloats (vals );}else if _bdcc .N ==4{_afgdg :=NewPdfColorspaceDeviceCMYK ();return _afgdg .ColorFromFloats (vals );}else {return nil ,_cc .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _bdcc .Alternate .ColorFromFloats (vals );};func _gfdad (_egag *fontCommon )*pdfFontType3 {return &pdfFontType3 {fontCommon :*_egag }};

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_bdca *PdfPageResources )AddExtGState (gsName _bbe .PdfObjectName ,gsDict _bbe .PdfObject )error {if _bdca .ExtGState ==nil {_bdca .ExtGState =_bbe .MakeDict ();};_cbdefe :=_bdca .ExtGState ;_bdedb ,_afcb :=_bbe .TraceToDirectObject (_cbdefe ).(*_bbe .PdfObjectDictionary );
if !_afcb {_gcf .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_cbdefe ,_bbe .TraceToDirectObject (_cbdefe ));
return _bbe .ErrTypeError ;};_bdedb .Set (gsName ,gsDict );return nil ;};

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;func (_eadeb *PdfReader )lookupPageByObject (_bafg _bbe .PdfObject )(*PdfPage ,error ){return nil ,_cc .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _ge .Time ){_cccbdc .Lock ();defer _cccbdc .Unlock ();_abdac =modifiedDate ;};

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_fbggb *PdfFont )ToUnicode ()string {if _fbggb .baseFields ()._ggdec ==nil {return "";};return _fbggb .baseFields ()._ggdec .Name ();};func (_bffe *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";
};

// Add appends an outline item as a child of the current outline item.
func (_egfca *OutlineItem )Add (item *OutlineItem ){_egfca .Entries =append (_egfca .Entries ,item )};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_abaad *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_abaad .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_abaad ._bggf =acroForm ;};

// ToInteger convert to an integer format.
func (_egab *PdfColorDeviceGray )ToInteger (bits int )uint32 {_cedb :=_ab .Pow (2,float64 (bits ))-1;return uint32 (_cedb *_egab .Val ());};

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_ebcagb *PdfPageResources )GetPatternByName (keyName _bbe .PdfObjectName )(*PdfPattern ,bool ){if _ebcagb .Pattern ==nil {return nil ,false ;};_ggdfe ,_egefg :=_bbe .TraceToDirectObject (_ebcagb .Pattern ).(*_bbe .PdfObjectDictionary );if !_egefg {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ebcagb .Pattern );
return nil ,false ;};if _egegd :=_ggdfe .Get (keyName );_egegd !=nil {_geebf ,_gbcdfe :=_ffab (_egegd );if _gbcdfe !=nil {_gcf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_gbcdfe );
return nil ,false ;};return _geebf ,true ;};return nil ,false ;};

// AddOutlineTree adds outlines to a PDF file.
func (_fffbe *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_fffbe ._fbbde =outlineTree };

// PdfTransformParamsDocMDP represents a transform parameters dictionary for the DocMDP method and is used to detect
// modifications relative to a signature field that is signed by the author of a document.
// (Section 12.8.2.2, Table 254 - Entries in the DocMDP transform parameters dictionary p. 471 in PDF32000_2008).
type PdfTransformParamsDocMDP struct{Type *_bbe .PdfObjectName ;P *_bbe .PdfObjectInteger ;V *_bbe .PdfObjectName ;};func _aecfd (_befbc _bbe .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_gcf .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_befbc .String (),_befbc );
_aegfg :=NewPdfColorspaceSpecialPattern ();if _bcecf ,_bccfg :=_befbc .(*_bbe .PdfIndirectObject );_bccfg {_aegfg ._babea =_bcecf ;};_befbc =_bbe .TraceToDirectObject (_befbc );if _gaff ,_ccdbb :=_befbc .(*_bbe .PdfObjectName );_ccdbb {if *_gaff !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_g .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");
};return _aegfg ,nil ;};_cfeeb ,_affe :=_befbc .(*_bbe .PdfObjectArray );if !_affe {_gcf .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_befbc );
return nil ,_g .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _cfeeb .Len ()!=1&&_cfeeb .Len ()!=2{_gcf .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_cfeeb );
return nil ,_g .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_befbc =_cfeeb .Get (0);if _egdbc ,_cbec :=_befbc .(*_bbe .PdfObjectName );_cbec {if *_egdbc !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_gcf .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_egdbc );
return nil ,_g .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _cfeeb .Len ()> 1{_befbc =_cfeeb .Get (1);_befbc =_bbe .TraceToDirectObject (_befbc );_cgaa ,_begcg :=NewPdfColorspaceFromPdfObject (_befbc );if _begcg !=nil {return nil ,_begcg ;
};_aegfg .UnderlyingCS =_cgaa ;};_gcf .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_aegfg .UnderlyingCS );
return _aegfg ,nil ;};func (_ddecg *PdfFilespec )getDict ()*_bbe .PdfObjectDictionary {if _ccbe ,_fgbac :=_ddecg ._ffbgc .(*_bbe .PdfIndirectObject );_fgbac {_dgbf ,_egeg :=_ccbe .PdfObject .(*_bbe .PdfObjectDictionary );if !_egeg {return nil ;};return _dgbf ;
}else if _aceda ,_edab :=_ddecg ._ffbgc .(*_bbe .PdfObjectDictionary );_edab {return _aceda ;}else {_gcf .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_ddecg ._ffbgc );
return nil ;};};

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_cfcge DefaultImageHandler )Read (reader _geb .Reader )(*Image ,error ){_addaa ,_ ,_ecced :=_bf .Decode (reader );if _ecced !=nil {_gcf .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_ecced );
return nil ,_ecced ;};return _cfcge .NewImageFromGoImage (_addaa );};func (_cgd *PdfReader )newPdfActionTransFromDict (_gfcf *_bbe .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_gfcf .Get ("\u0054\u0072\u0061n\u0073")},nil ;
};func (_beb *PdfReader )newPdfAnnotationCaretFromDict (_dbcd *_bbe .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_eafa :=PdfAnnotationCaret {};_fcc ,_aecf :=_beb .newPdfAnnotationMarkupFromDict (_dbcd );if _aecf !=nil {return nil ,_aecf ;};_eafa .PdfAnnotationMarkup =_fcc ;
_eafa .RD =_dbcd .Get ("\u0052\u0044");_eafa .Sy =_dbcd .Get ("\u0053\u0079");return &_eafa ,nil ;};func _aedd (_dcda *_bbe .PdfObjectDictionary ){_cceag ,_cegfeg :=_bbe .GetArray (_dcda .Get ("\u0057\u0069\u0064\u0074\u0068\u0073"));_aafbf ,_cfefa :=_bbe .GetIntVal (_dcda .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r"));
_ebee ,_agbe :=_bbe .GetIntVal (_dcda .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072"));if _cegfeg &&_cfefa &&_agbe {_fccf :=_cceag .Len ();if _fccf !=_ebee -_aafbf +1{_gcf .Log .Debug ("\u0055\u006e\u0065x\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0057\u0069\u0064\u0074\u0068\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003a\u0020\u0025\u0076\u002c\u0020\u004c\u0061\u0073t\u0043\u0068\u0061\u0072\u003a\u0020\u0025\u0076",_fccf ,_ebee );
_dccea :=_bbe .PdfObjectInteger (_aafbf +_fccf -1);_dcda .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",&_dccea );};};};func (_gbf *PdfReader )newPdfAnnotationLineFromDict (_efa *_bbe .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_cbb :=PdfAnnotationLine {};
_cbge ,_cfeb :=_gbf .newPdfAnnotationMarkupFromDict (_efa );if _cfeb !=nil {return nil ,_cfeb ;};_cbb .PdfAnnotationMarkup =_cbge ;_cbb .L =_efa .Get ("\u004c");_cbb .BS =_efa .Get ("\u0042\u0053");_cbb .LE =_efa .Get ("\u004c\u0045");_cbb .IC =_efa .Get ("\u0049\u0043");
_cbb .LL =_efa .Get ("\u004c\u004c");_cbb .LLE =_efa .Get ("\u004c\u004c\u0045");_cbb .Cap =_efa .Get ("\u0043\u0061\u0070");_cbb .IT =_efa .Get ("\u0049\u0054");_cbb .LLO =_efa .Get ("\u004c\u004c\u004f");_cbb .CP =_efa .Get ("\u0043\u0050");_cbb .Measure =_efa .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");
_cbb .CO =_efa .Get ("\u0043\u004f");return &_cbb ,nil ;};

// GetCerts returns the signature certificate chain.
func (_addcdg *PdfSignature )GetCerts ()([]*_gg .Certificate ,error ){var _cgdda []func ()([]*_gg .Certificate ,error );switch _gbeacg ,_ :=_bbe .GetNameVal (_addcdg .SubFilter );_gbeacg {case "\u0061\u0064\u0062\u0065.p\u006b\u0063\u0073\u0037\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064","\u0045\u0054\u0053\u0049.C\u0041\u0064\u0045\u0053\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064":_cgdda =append (_cgdda ,_addcdg .extractChainFromPKCS7 ,_addcdg .extractChainFromCert );
case "\u0061d\u0062e\u002e\u0078\u0035\u0030\u0039.\u0072\u0073a\u005f\u0073\u0068\u0061\u0031":_cgdda =append (_cgdda ,_addcdg .extractChainFromCert );case "\u0045\u0054\u0053I\u002e\u0052\u0046\u0043\u0033\u0031\u0036\u0031":_cgdda =append (_cgdda ,_addcdg .extractChainFromPKCS7 );
default:return nil ,_g .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020S\u0075b\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s",_gbeacg );};for _ ,_dgafg :=range _cgdda {_cdddbe ,_fefdb :=_dgafg ();if _fefdb !=nil {return nil ,_fefdb ;
};if len (_cdddbe )> 0{return _cdddbe ,nil ;};};return nil ,ErrSignNoCertificates ;};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_cgdea ,_agbae :=_dfcc (basefont );if _agbae !=nil {return nil ,_agbae ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_cgdea ._adcac =_ff .NewWinAnsiEncoder ();};return &PdfFont {_afag :&_cgdea },nil ;
};func _bggd (_eeda *PdfField )[]*PdfField {_cadca :=[]*PdfField {_eeda };for _ ,_agda :=range _eeda .Kids {_cadca =append (_cadca ,_bggd (_agda )...);};return _cadca ;};func (_eacbb *LTV )getCRLs (_gccf []*_gg .Certificate )([][]byte ,error ){_cbbfg :=make ([][]byte ,0,len (_gccf ));
for _ ,_gcfcaa :=range _gccf {for _ ,_baed :=range _gcfcaa .CRLDistributionPoints {if _eacbb .CertClient .IsCA (_gcfcaa ){continue ;};_gfcfa ,_fgfe :=_eacbb .CRLClient .MakeRequest (_baed ,_gcfcaa );if _fgfe !=nil {_gcf .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043R\u004c\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074 \u0065\u0072\u0072o\u0072:\u0020\u0025\u0076",_fgfe );
continue ;};_cbbfg =append (_cbbfg ,_gfcfa );};};return _cbbfg ,nil ;};func (_bccea *PdfReader )loadPerms ()(*Permissions ,error ){if _fdcfd :=_bccea ._cagcc .Get ("\u0050\u0065\u0072m\u0073");_fdcfd !=nil {if _cdfc ,_ceabe :=_bbe .GetDict (_fdcfd );_ceabe {_dbbg :=_cdfc .Get ("\u0044\u006f\u0063\u004d\u0044\u0050");
if _dbbg ==nil {return nil ,nil ;};if _bgfgd ,_bfddg :=_bbe .GetIndirect (_dbbg );_bfddg {_bedda ,_acdec :=_bccea .newPdfSignatureFromIndirect (_bgfgd );if _acdec !=nil {return nil ,_acdec ;};return NewPermissions (_bedda ),nil ;};return nil ,_g .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u006f\u0063M\u0044\u0050\u0020\u0065nt\u0072\u0079");
};return nil ,_g .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0050\u0065\u0072\u006d\u0073\u0020\u0065\u006e\u0074\u0072\u0079");};return nil ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ca *PdfAction )ToPdfObject ()_bbe .PdfObject {_dda :=_ca ._be ;_gef :=_dda .PdfObject .(*_bbe .PdfObjectDictionary );_gef .Clear ();_gef .Set ("\u0054\u0079\u0070\u0065",_bbe .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_gef .SetIfNotNil ("\u0053",_ca .S );
_gef .SetIfNotNil ("\u004e\u0065\u0078\u0074",_ca .Next );return _dda ;};

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_cdcf :=PdfWriter {};_cdcf ._ffebc =map[_bbe .PdfObject ]struct{}{};_cdcf ._ageab =[]_bbe .PdfObject {};_cdcf ._ceeea =map[_bbe .PdfObject ][]*_bbe .PdfObjectDictionary {};_cdcf ._dcddd =map[_bbe .PdfObject ]struct{}{};_cdcf ._dfadc .Major =1;
_cdcf ._dfadc .Minor =3;_bggeg :=_bbe .MakeDict ();_egeag :=[]struct{_gfff _bbe .PdfObjectName ;_bedee string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_bgebc ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_cedaa ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_cged ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_bgdgc ()},{"\u0054\u0069\u0074l\u0065",_cfafe ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_cfccf ()}};
for _ ,_eegce :=range _egeag {if _eegce ._bedee !=""{_bggeg .Set (_eegce ._gfff ,_bbe .MakeString (_eegce ._bedee ));};};if _bcbf :=_gaebe ();!_bcbf .IsZero (){if _ddacg ,_cegd :=NewPdfDateFromTime (_bcbf );_cegd ==nil {_bggeg .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_ddacg .ToPdfObject ());
};};if _edcbe :=_dbage ();!_edcbe .IsZero (){if _fdede ,_ddcag :=NewPdfDateFromTime (_edcbe );_ddcag ==nil {_bggeg .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_fdede .ToPdfObject ());};};_cabcb :=_bbe .PdfIndirectObject {};_cabcb .PdfObject =_bggeg ;
_cdcf ._befcg =&_cabcb ;_cdcf .addObject (&_cabcb );_eecfb :=_bbe .PdfIndirectObject {};_dafbb :=_bbe .MakeDict ();_dafbb .Set ("\u0054\u0079\u0070\u0065",_bbe .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_eecfb .PdfObject =_dafbb ;_cdcf ._ecdbbf =&_eecfb ;
_cdcf .addObject (_cdcf ._ecdbbf );_dbfgb ,_faaab :=_cecdd ("\u0077");if _faaab !=nil {_gcf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_faaab );};_cdcf ._adcddd =_dbfgb ;_cbaed :=_bbe .PdfIndirectObject {};_dgbfc :=_bbe .MakeDict ();_dgbfc .Set ("\u0054\u0079\u0070\u0065",_bbe .MakeName ("\u0050\u0061\u0067e\u0073"));
_ffege :=_bbe .PdfObjectArray {};_dgbfc .Set ("\u004b\u0069\u0064\u0073",&_ffege );_dgbfc .Set ("\u0043\u006f\u0075n\u0074",_bbe .MakeInteger (0));_cbaed .PdfObject =_dgbfc ;_cdcf ._fbfea =&_cbaed ;_cdcf ._edfgb =map[_bbe .PdfObject ]struct{}{};_cdcf .addObject (_cdcf ._fbfea );
_dafbb .Set ("\u0050\u0061\u0067e\u0073",&_cbaed );_cdcf ._bgdee =_dafbb ;_gcf .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_eecfb );return _cdcf ;};

// M returns the value of the magenta component of the color.
func (_eecg *PdfColorDeviceCMYK )M ()float64 {return _eecg [1]};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_cbfe _geb .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_eecgcc _bf .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_ddebb _bf .Image )(*Image ,error );

// Compress an image.
Compress (_caad *Image ,_egfac int64 )(*Image ,error );};

// ToPdfObject implements interface PdfModel.
func (_cafb *PdfAnnotationStrikeOut )ToPdfObject ()_bbe .PdfObject {_cafb .PdfAnnotation .ToPdfObject ();_dddb :=_cafb ._dbg ;_ebge :=_dddb .PdfObject .(*_bbe .PdfObjectDictionary );_cafb .PdfAnnotationMarkup .appendToPdfDictionary (_ebge );_ebge .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbe .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));
_ebge .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_cafb .QuadPoints );return _dddb ;};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _bbe .PdfObject ;FontFamily _bbe .PdfObject ;FontStretch _bbe .PdfObject ;FontWeight _bbe .PdfObject ;Flags _bbe .PdfObject ;FontBBox _bbe .PdfObject ;ItalicAngle _bbe .PdfObject ;Ascent _bbe .PdfObject ;Descent _bbe .PdfObject ;
Leading _bbe .PdfObject ;CapHeight _bbe .PdfObject ;XHeight _bbe .PdfObject ;StemV _bbe .PdfObject ;StemH _bbe .PdfObject ;AvgWidth _bbe .PdfObject ;MaxWidth _bbe .PdfObject ;MissingWidth _bbe .PdfObject ;FontFile _bbe .PdfObject ;FontFile2 _bbe .PdfObject ;
FontFile3 _bbe .PdfObject ;CharSet _bbe .PdfObject ;_abgac int ;_ggcge float64 ;*fontFile ;_bfdf *_bfg .TtfType ;

// Additional entries for CIDFonts
Style _bbe .PdfObject ;Lang _bbe .PdfObject ;FD _bbe .PdfObject ;CIDSet _bbe .PdfObject ;_gedf *_bbe .PdfIndirectObject ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_bcbbd *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};

// ToPdfObject returns the PDF representation of the function.
func (_dffaf *PdfFunctionType0 )ToPdfObject ()_bbe .PdfObject {if _dffaf ._ecfcf ==nil {_dffaf ._ecfcf =&_bbe .PdfObjectStream {};};_geada :=_bbe .MakeDict ();_geada .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bbe .MakeInteger (0));
_aegb :=&_bbe .PdfObjectArray {};for _ ,_ddaee :=range _dffaf .Domain {_aegb .Append (_bbe .MakeFloat (_ddaee ));};_geada .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_aegb );_ggbb :=&_bbe .PdfObjectArray {};for _ ,_agaab :=range _dffaf .Range {_ggbb .Append (_bbe .MakeFloat (_agaab ));
};_geada .Set ("\u0052\u0061\u006eg\u0065",_ggbb );_cbaeb :=&_bbe .PdfObjectArray {};for _ ,_cddgf :=range _dffaf .Size {_cbaeb .Append (_bbe .MakeInteger (int64 (_cddgf )));};_geada .Set ("\u0053\u0069\u007a\u0065",_cbaeb );_geada .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_bbe .MakeInteger (int64 (_dffaf .BitsPerSample )));
if _dffaf .Order !=1{_geada .Set ("\u004f\u0072\u0064e\u0072",_bbe .MakeInteger (int64 (_dffaf .Order )));};_geada .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bbe .MakeInteger (int64 (len (_dffaf ._cgeegg ))));_dffaf ._ecfcf .Stream =_dffaf ._cgeegg ;
_dffaf ._ecfcf .PdfObjectDictionary =_geada ;return _dffaf ._ecfcf ;};

// AddCRLs adds CRLs to DSS.
func (_debeb *DSS )AddCRLs (crls [][]byte )([]*_bbe .PdfObjectStream ,error ){return _debeb .add (&_debeb .CRLs ,_debeb ._agef ,crls );};

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_beaf *PdfFont )ToPdfObject ()_bbe .PdfObject {if _beaf ._afag ==nil {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _bbe .MakeNull ();
};return _beaf ._afag .ToPdfObject ();};

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_cfdd :=NewPdfAnnotation ();_dcg :=&PdfAnnotation3D {};_dcg .PdfAnnotation =_cfdd ;_cfdd .SetContext (_dcg );return _dcg ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_feceadb *PdfShadingType4 )ToPdfObject ()_bbe .PdfObject {_feceadb .PdfShading .ToPdfObject ();_fafef ,_dcdg :=_feceadb .getShadingDict ();if _dcdg !=nil {_gcf .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _feceadb .BitsPerCoordinate !=nil {_fafef .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_feceadb .BitsPerCoordinate );};if _feceadb .BitsPerComponent !=nil {_fafef .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_feceadb .BitsPerComponent );
};if _feceadb .BitsPerFlag !=nil {_fafef .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_feceadb .BitsPerFlag );};if _feceadb .Decode !=nil {_fafef .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_feceadb .Decode );};if _feceadb .Function !=nil {if len (_feceadb .Function )==1{_fafef .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_feceadb .Function [0].ToPdfObject ());
}else {_gaage :=_bbe .MakeArray ();for _ ,_dgfa :=range _feceadb .Function {_gaage .Append (_dgfa .ToPdfObject ());};_fafef .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gaage );};};return _feceadb ._eecbb ;};

// ReplacePage replaces the original page to a new page.
func (_aacd *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_eade :=pageNum -1;for _cfcb :=range _aacd ._gada {if _cfcb ==_eade {_aebg :=page .Duplicate ();_eagf (_aebg );_aacd ._gada [_cfcb ]=_aebg ;};};};

// String returns a string describing the font descriptor.
func (_gbccgf *PdfFontDescriptor )String ()string {var _bbccc []string ;if _gbccgf .FontName !=nil {_bbccc =append (_bbccc ,_gbccgf .FontName .String ());};if _gbccgf .FontFamily !=nil {_bbccc =append (_bbccc ,_gbccgf .FontFamily .String ());};if _gbccgf .fontFile !=nil {_bbccc =append (_bbccc ,_gbccgf .fontFile .String ());
};if _gbccgf ._bfdf !=nil {_bbccc =append (_bbccc ,_gbccgf ._bfdf .String ());};_bbccc =append (_bbccc ,_g .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_gbccgf .FontFile3 !=nil ));return _g .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_df .Join (_bbccc ,"\u002c\u0020"));
};

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _bbe .PdfObject ;Mac _bbe .PdfObject ;Unix _bbe .PdfObject ;NewWindow _bbe .PdfObject ;};const (BorderEffectNoEffect BorderEffect =iota ;BorderEffectCloudy BorderEffect =iota ;);

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_geddg *PdfPageResources )GetFontByName (keyName _bbe .PdfObjectName )(_bbe .PdfObject ,bool ){if _geddg .Font ==nil {return nil ,false ;};_egbb ,_ffecb :=_bbe .TraceToDirectObject (_geddg .Font ).(*_bbe .PdfObjectDictionary );if !_ffecb {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_bbe .TraceToDirectObject (_geddg .Font ));
return nil ,false ;};if _eggc :=_egbb .Get (keyName );_eggc !=nil {return _eggc ,true ;};return nil ,false ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_cgef *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_cc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_cgef .Base .GetNumComponents ();_febd :=int (vals [0])*N ;
if _febd < 0||(_febd +N -1)>=len (_cgef ._gbcdg ){_gcf .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_febd );return nil ,ErrColorOutOfRange ;};_ceaf :=_cgef ._gbcdg [_febd :_febd +N ];
var _agbg []float64 ;for _ ,_aefd :=range _ceaf {_agbg =append (_agbg ,float64 (_aefd )/255.0);};_gbfg ,_efgb :=_cgef .Base .ColorFromFloats (_agbg );if _efgb !=nil {return nil ,_efgb ;};return _gbfg ,nil ;};

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_facdgf *pdfFontSimple )SetEncoder (encoder _ff .TextEncoder ){_facdgf ._adcac =encoder };

// EnableByName LTV enables the signature dictionary of the PDF AcroForm
// field identified the specified name. The signing certificate chain is
// extracted from the signature dictionary. Optionally, additional certificates
// can be specified through the `extraCerts` parameter. The LTV client attempts
// to build the certificate chain up to a trusted root by downloading any
// missing certificates.
func (_bacge *LTV )EnableByName (name string ,extraCerts []*_gg .Certificate )error {_aaaeb :=_bacge ._acgcc ._aeaa .AcroForm ;for _ ,_bcaea :=range _aaaeb .AllFields (){_dffaa ,_ :=_bcaea .GetContext ().(*PdfFieldSignature );if _dffaa ==nil {continue ;
};if _efecb :=_dffaa .PartialName ();_efecb !=name {continue ;};return _bacge .Enable (_dffaa .V ,extraCerts );};return nil ;};

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _bbe .PdfObject ;};

// SetName sets the `Name` field of the signature.
func (_agfa *PdfSignature )SetName (name string ){_agfa .Name =_bbe .MakeString (name )};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_cefe :=PdfColorDeviceRGB {r ,g ,b };return &_cefe ;};type pdfSignDictionary struct{*_bbe .PdfObjectDictionary ;_ddbegb *SignatureHandler ;_fbbfb *PdfSignature ;_fegcb int64 ;_ggae int ;_cecd int ;
_gaba int ;_dbaa int ;};

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _bbe .StreamEncoder ;Intent _bbe .PdfObject ;ImageMask _bbe .PdfObject ;Mask _bbe .PdfObject ;Matte _bbe .PdfObject ;Decode _bbe .PdfObject ;Interpolate _bbe .PdfObject ;
Alternatives _bbe .PdfObject ;SMask _bbe .PdfObject ;SMaskInData _bbe .PdfObject ;Name _bbe .PdfObject ;StructParent _bbe .PdfObject ;ID _bbe .PdfObject ;OPI _bbe .PdfObject ;Metadata _bbe .PdfObject ;OC _bbe .PdfObject ;Stream []byte ;_cggga *_bbe .PdfObjectStream ;
};func (_ddgde *XObjectImage )getParamsDict ()*_bbe .PdfObjectDictionary {_efeeg :=_bbe .MakeDict ();_efeeg .Set ("\u0057\u0069\u0064t\u0068",_bbe .MakeInteger (*_ddgde .Width ));_efeeg .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_bbe .MakeInteger (*_ddgde .Height ));
_efeeg .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_bbe .MakeInteger (int64 (_ddgde .ColorSpace .GetNumComponents ())));_efeeg .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bbe .MakeInteger (*_ddgde .BitsPerComponent ));
return _efeeg ;};func _aebec (_abbgc *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_abbgc }};

// GetContainingPdfObject implements model.PdfModel interface.
func (_egfg *PdfOutputIntent )GetContainingPdfObject ()_bbe .PdfObject {return _egfg ._agbec };

// GetContainingPdfObject implements interface PdfModel.
func (_cecg *PdfFilespec )GetContainingPdfObject ()_bbe .PdfObject {return _cecg ._ffbgc };

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_cde :=NewPdfAction ();_bgd :=&PdfActionSubmitForm {};_bgd .PdfAction =_cde ;_cde .SetContext (_bgd );return _bgd ;};

// ToPdfObject implements interface PdfModel.
func (_cccb *PdfAnnotationWatermark )ToPdfObject ()_bbe .PdfObject {_cccb .PdfAnnotation .ToPdfObject ();_aeab :=_cccb ._dbg ;_egeb :=_aeab .PdfObject .(*_bbe .PdfObjectDictionary );_egeb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbe .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));
_egeb .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_cccb .FixedPrint );return _aeab ;};

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _bbe .PdfObject ;Popup *PdfAnnotationPopup ;CA _bbe .PdfObject ;RC _bbe .PdfObject ;CreationDate _bbe .PdfObject ;IRT _bbe .PdfObject ;Subj _bbe .PdfObject ;RT _bbe .PdfObject ;IT _bbe .PdfObject ;ExData _bbe .PdfObject ;
};

// ToPdfObject implements interface PdfModel.
func (_bgb *PdfActionTrans )ToPdfObject ()_bbe .PdfObject {_bgb .PdfAction .ToPdfObject ();_gggd :=_bgb ._be ;_ecd :=_gggd .PdfObject .(*_bbe .PdfObjectDictionary );_ecd .SetIfNotNil ("\u0053",_bbe .MakeName (string (ActionTypeTrans )));_ecd .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_bgb .Trans );
return _gggd ;};

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_ebbe *PdfFont )CharcodesToStrings (charcodes []_ff .CharCode )([]string ,int ,int ){_ebga :=_ebbe .baseFields ();_cfdb :=make ([]string ,0,len (charcodes ));_gfbbf :=0;_fdad :=_ebbe .Encoder ();_ccce :=_ebga ._ggdec !=nil &&_ebbe .IsSimple ()&&_ebbe .Subtype ()=="\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"&&!_df .Contains (_ebga ._ggdec .Name (),"\u0049d\u0065\u006e\u0074\u0069\u0074\u0079-");
if !_ccce &&_fdad !=nil {switch _cecf :=_fdad .(type ){case _ff .SimpleEncoder :_eagbb :=_cecf .BaseName ();if _ ,_cbae :=_adaa [_eagbb ];_cbae {for _ ,_bebe :=range charcodes {if _dcbaf ,_aege :=_fdad .CharcodeToRune (_bebe );_aege {_cfdb =append (_cfdb ,string (_dcbaf ));
}else {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_bebe ,charcodes ,_ebga .isCIDFont (),_ebbe ,_fdad );
_gfbbf ++;_cfdb =append (_cfdb ,_fb .MissingCodeString );};};return _cfdb ,len (_cfdb ),_gfbbf ;};};};for _ ,_baaac :=range charcodes {if _ebga ._ggdec !=nil {if _cdcg ,_efbc :=_ebga ._ggdec .CharcodeToUnicode (_fb .CharCode (_baaac ));_efbc {_cfdb =append (_cfdb ,_cdcg );
continue ;};};if _fdad !=nil {if _gccea ,_dfbdc :=_fdad .CharcodeToRune (_baaac );_dfbdc {_cfdb =append (_cfdb ,string (_gccea ));continue ;};};_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_baaac ,charcodes ,_ebga .isCIDFont (),_ebbe ,_fdad );
_gfbbf ++;_cfdb =append (_cfdb ,_fb .MissingCodeString );};if _gfbbf !=0{_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_gfbbf ,_ebbe );
};return _cfdb ,len (_cfdb ),_gfbbf ;};func _gdbc (_gbef _bbe .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_fdee :=NewPdfColorspaceSpecialSeparation ();if _fecea ,_fagc :=_gbef .(*_bbe .PdfIndirectObject );_fagc {_fdee ._daab =_fecea ;};_gbef =_bbe .TraceToDirectObject (_gbef );
_adcd ,_fcgg :=_gbef .(*_bbe .PdfObjectArray );if !_fcgg {return nil ,_g .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");};if _adcd .Len ()!=4{return nil ,_g .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");
};_gbef =_adcd .Get (0);_bfdd ,_fcgg :=_gbef .(*_bbe .PdfObjectName );if !_fcgg {return nil ,_g .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_bfdd !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_g .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};_gbef =_adcd .Get (1);_bfdd ,_fcgg =_gbef .(*_bbe .PdfObjectName );if !_fcgg {return nil ,_g .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");
};_fdee .ColorantName =_bfdd ;_gbef =_adcd .Get (2);_gbdb ,_gdedc :=NewPdfColorspaceFromPdfObject (_gbef );if _gdedc !=nil {return nil ,_gdedc ;};_fdee .AlternateSpace =_gbdb ;_dacf ,_gdedc :=_bdce (_adcd .Get (3));if _gdedc !=nil {return nil ,_gdedc ;
};_fdee .TintTransform =_dacf ;return _fdee ,nil ;};

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
// well give them 0 width. There is no need for the bool return.
func (_beece *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_fagf :=_beece .actualFont ();if _fagf ==nil {_gcf .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_beece ._afag );
return _bfg .CharMetrics {},false ;};if _dbdga ,_dfgc :=_fagf .GetRuneMetrics (r );_dfgc {return _dbdga ,true ;};if _fcfe ,_gcbb :=_beece .GetFontDescriptor ();_gcbb ==nil &&_fcfe !=nil {return _bfg .CharMetrics {Wx :_fcfe ._ggcge },true ;};_gcf .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_beece );
return _bfg .CharMetrics {},false ;};

// IsTiling specifies if the pattern is a tiling pattern.
func (_gbcceb *PdfPattern )IsTiling ()bool {return _gbcceb .PatternType ==1};

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_bbedba *PdfPageResources )SetXObjectImageByName (keyName _bbe .PdfObjectName ,ximg *XObjectImage )error {_geccg :=ximg .ToPdfObject ().(*_bbe .PdfObjectStream );_cbbe :=_bbedba .SetXObjectByName (keyName ,_geccg );return _cbbe ;};

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_ef :=NewPdfAction ();_dg :=&PdfActionMovie {};_dg .PdfAction =_ef ;_ef .SetContext (_dg );return _dg ;};func _cfafe ()string {_cccbdc .Lock ();defer _cccbdc .Unlock ();return _geafc };

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_eeabf *PdfPageResources )SetColorspaceByName (keyName _bbe .PdfObjectName ,cs PdfColorspace )error {_affeb ,_bcbaf :=_eeabf .GetColorspaces ();if _bcbaf !=nil {_gcf .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_bcbaf );
return _bcbaf ;};if _affeb ==nil {_affeb =NewPdfPageResourcesColorspaces ();_eeabf .SetColorSpace (_affeb );};_affeb .Set (keyName ,cs );return nil ;};

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_aeeaa *PdfReader )PageFromIndirectObject (ind *_bbe .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_aeeaa .PageList )!=len (_aeeaa ._cfgf ){return nil ,0,_cc .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};for _dacce ,_ccbd :=range _aeeaa ._cfgf {if _ccbd ==ind {return _aeeaa .PageList [_dacce ],_dacce +1,nil ;};};return nil ,0,_cc .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};func (_ddg *PdfField )inherit (_dbgc func (*PdfField )bool )(bool ,error ){_addge :=map[*PdfField ]bool {};
_fdbgc :=false ;_bdeab :=_ddg ;for _bdeab !=nil {if _ ,_baebb :=_addge [_bdeab ];_baebb {return false ,_cc .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};_cdaf :=_dbgc (_bdeab );if _cdaf {_fdbgc =true ;
break ;};_addge [_bdeab ]=true ;_bdeab =_bdeab .Parent ;};return _fdbgc ,nil ;};

// SetReason sets the `Reason` field of the signature.
func (_cdbdd *PdfSignature )SetReason (reason string ){_cdbdd .Reason =_bbe .MakeString (reason )};

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_gagad []byte ;_eacbf []float64 ;};func (_ada *PdfReader )newPdfAnnotationFromIndirectObject (_aca *_bbe .PdfIndirectObject )(*PdfAnnotation ,error ){_aef ,_ggea :=_aca .PdfObject .(*_bbe .PdfObjectDictionary );
if !_ggea {return nil ,_g .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_ada ._ffgae .GetModelFromPrimitive (_aef );model !=nil {_gfb ,_fde :=model .(*PdfAnnotation );if !_fde {return nil ,_g .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");
};return _gfb ,nil ;};_cbfd :=&PdfAnnotation {};_cbfd ._dbg =_aca ;_ada ._ffgae .Register (_aef ,_cbfd );if _bbcc :=_aef .Get ("\u0054\u0079\u0070\u0065");_bbcc !=nil {_ebg ,_gab :=_bbcc .(*_bbe .PdfObjectName );if !_gab {_gcf .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_bbcc );
}else {if *_ebg !="\u0041\u006e\u006eo\u0074"{_gcf .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_ebg );};};};if _baga :=_aef .Get ("\u0052\u0065\u0063\u0074");
_baga !=nil {_cbfd .Rect =_baga ;};if _fcbg :=_aef .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_fcbg !=nil {_cbfd .Contents =_fcbg ;};if _gfcfe :=_aef .Get ("\u0050");_gfcfe !=nil {_cbfd .P =_gfcfe ;};if _ddbe :=_aef .Get ("\u004e\u004d");
_ddbe !=nil {_cbfd .NM =_ddbe ;};if _cfg :=_aef .Get ("\u004d");_cfg !=nil {_cbfd .M =_cfg ;};if _gcge :=_aef .Get ("\u0046");_gcge !=nil {_cbfd .F =_gcge ;};if _bcfe :=_aef .Get ("\u0041\u0050");_bcfe !=nil {_cbfd .AP =_bcfe ;};if _fddg :=_aef .Get ("\u0041\u0053");
_fddg !=nil {_cbfd .AS =_fddg ;};if _cgdc :=_aef .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_cgdc !=nil {_cbfd .Border =_cgdc ;};if _dfe :=_aef .Get ("\u0043");_dfe !=nil {_cbfd .C =_dfe ;};if _fceb :=_aef .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");
_fceb !=nil {_cbfd .StructParent =_fceb ;};if _gfcc :=_aef .Get ("\u004f\u0043");_gfcc !=nil {_cbfd .OC =_gfcc ;};_acf :=_aef .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _acf ==nil {_gcf .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");
_cbfd ._ccfb =nil ;return _cbfd ,nil ;};_dac ,_aecg :=_acf .(*_bbe .PdfObjectName );if !_aecg {_gcf .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_acf );
return nil ,_g .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_acf );};switch *_dac {case "\u0054\u0065\u0078\u0074":_gbe ,_eeag :=_ada .newPdfAnnotationTextFromDict (_aef );
if _eeag !=nil {return nil ,_eeag ;};_gbe .PdfAnnotation =_cbfd ;_cbfd ._ccfb =_gbe ;return _cbfd ,nil ;case "\u004c\u0069\u006e\u006b":_fca ,_bac :=_ada .newPdfAnnotationLinkFromDict (_aef );if _bac !=nil {return nil ,_bac ;};_fca .PdfAnnotation =_cbfd ;
_cbfd ._ccfb =_fca ;return _cbfd ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_dea ,_aadf :=_ada .newPdfAnnotationFreeTextFromDict (_aef );if _aadf !=nil {return nil ,_aadf ;};_dea .PdfAnnotation =_cbfd ;_cbfd ._ccfb =_dea ;return _cbfd ,nil ;
case "\u004c\u0069\u006e\u0065":_abde ,_ffd :=_ada .newPdfAnnotationLineFromDict (_aef );if _ffd !=nil {return nil ,_ffd ;};_abde .PdfAnnotation =_cbfd ;_cbfd ._ccfb =_abde ;_gcf .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_cbfd ,_cbfd );
_gcf .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_abde ,_abde );_gcf .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_abde .PdfAnnotationMarkup ,_abde .PdfAnnotationMarkup );
return _cbfd ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_bee ,_dafb :=_ada .newPdfAnnotationSquareFromDict (_aef );if _dafb !=nil {return nil ,_dafb ;};_bee .PdfAnnotation =_cbfd ;_cbfd ._ccfb =_bee ;return _cbfd ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_bgbg ,_gaga :=_ada .newPdfAnnotationCircleFromDict (_aef );
if _gaga !=nil {return nil ,_gaga ;};_bgbg .PdfAnnotation =_cbfd ;_cbfd ._ccfb =_bgbg ;return _cbfd ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_ggf ,_faff :=_ada .newPdfAnnotationPolygonFromDict (_aef );if _faff !=nil {return nil ,_faff ;};_ggf .PdfAnnotation =_cbfd ;
_cbfd ._ccfb =_ggf ;return _cbfd ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_cgc ,_bade :=_ada .newPdfAnnotationPolyLineFromDict (_aef );if _bade !=nil {return nil ,_bade ;};_cgc .PdfAnnotation =_cbfd ;_cbfd ._ccfb =_cgc ;return _cbfd ,nil ;
case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_gfcg ,_eee :=_ada .newPdfAnnotationHighlightFromDict (_aef );if _eee !=nil {return nil ,_eee ;};_gfcg .PdfAnnotation =_cbfd ;_cbfd ._ccfb =_gfcg ;return _cbfd ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_fbg ,_gbd :=_ada .newPdfAnnotationUnderlineFromDict (_aef );
if _gbd !=nil {return nil ,_gbd ;};_fbg .PdfAnnotation =_cbfd ;_cbfd ._ccfb =_fbg ;return _cbfd ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_cgcb ,_ebgd :=_ada .newPdfAnnotationSquigglyFromDict (_aef );if _ebgd !=nil {return nil ,_ebgd ;
};_cgcb .PdfAnnotation =_cbfd ;_cbfd ._ccfb =_cgcb ;return _cbfd ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_fgb ,_cgea :=_ada .newPdfAnnotationStrikeOut (_aef );if _cgea !=nil {return nil ,_cgea ;};_fgb .PdfAnnotation =_cbfd ;_cbfd ._ccfb =_fgb ;
return _cbfd ,nil ;case "\u0043\u0061\u0072e\u0074":_bcee ,_adc :=_ada .newPdfAnnotationCaretFromDict (_aef );if _adc !=nil {return nil ,_adc ;};_bcee .PdfAnnotation =_cbfd ;_cbfd ._ccfb =_bcee ;return _cbfd ,nil ;case "\u0053\u0074\u0061m\u0070":_gce ,_dfg :=_ada .newPdfAnnotationStampFromDict (_aef );
if _dfg !=nil {return nil ,_dfg ;};_gce .PdfAnnotation =_cbfd ;_cbfd ._ccfb =_gce ;return _cbfd ,nil ;case "\u0049\u006e\u006b":_gdff ,_cgeb :=_ada .newPdfAnnotationInkFromDict (_aef );if _cgeb !=nil {return nil ,_cgeb ;};_gdff .PdfAnnotation =_cbfd ;_cbfd ._ccfb =_gdff ;
return _cbfd ,nil ;case "\u0050\u006f\u0070u\u0070":_cce ,_add :=_ada .newPdfAnnotationPopupFromDict (_aef );if _add !=nil {return nil ,_add ;};_cce .PdfAnnotation =_cbfd ;_cbfd ._ccfb =_cce ;return _cbfd ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_fcd ,_gdce :=_ada .newPdfAnnotationFileAttachmentFromDict (_aef );
if _gdce !=nil {return nil ,_gdce ;};_fcd .PdfAnnotation =_cbfd ;_cbfd ._ccfb =_fcd ;return _cbfd ,nil ;case "\u0053\u006f\u0075n\u0064":_bga ,_ccc :=_ada .newPdfAnnotationSoundFromDict (_aef );if _ccc !=nil {return nil ,_ccc ;};_bga .PdfAnnotation =_cbfd ;
_cbfd ._ccfb =_bga ;return _cbfd ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_bdg ,_agg :=_ada .newPdfAnnotationRichMediaFromDict (_aef );if _agg !=nil {return nil ,_agg ;};_bdg .PdfAnnotation =_cbfd ;_cbfd ._ccfb =_bdg ;return _cbfd ,nil ;
case "\u004d\u006f\u0076i\u0065":_acb ,_bdcb :=_ada .newPdfAnnotationMovieFromDict (_aef );if _bdcb !=nil {return nil ,_bdcb ;};_acb .PdfAnnotation =_cbfd ;_cbfd ._ccfb =_acb ;return _cbfd ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_bdd ,_cdf :=_ada .newPdfAnnotationScreenFromDict (_aef );
if _cdf !=nil {return nil ,_cdf ;};_bdd .PdfAnnotation =_cbfd ;_cbfd ._ccfb =_bdd ;return _cbfd ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_bef ,_bgad :=_ada .newPdfAnnotationWidgetFromDict (_aef );if _bgad !=nil {return nil ,_bgad ;};_bef .PdfAnnotation =_cbfd ;
_cbfd ._ccfb =_bef ;return _cbfd ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_fecc ,_cbd :=_ada .newPdfAnnotationPrinterMarkFromDict (_aef );if _cbd !=nil {return nil ,_cbd ;};_fecc .PdfAnnotation =_cbfd ;_cbfd ._ccfb =_fecc ;
return _cbfd ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_fea ,_bcb :=_ada .newPdfAnnotationTrapNetFromDict (_aef );if _bcb !=nil {return nil ,_bcb ;};_fea .PdfAnnotation =_cbfd ;_cbfd ._ccfb =_fea ;return _cbfd ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_fcfg ,_gad :=_ada .newPdfAnnotationWatermarkFromDict (_aef );
if _gad !=nil {return nil ,_gad ;};_fcfg .PdfAnnotation =_cbfd ;_cbfd ._ccfb =_fcfg ;return _cbfd ,nil ;case "\u0033\u0044":_eaed ,_fdbd :=_ada .newPdfAnnotation3DFromDict (_aef );if _fdbd !=nil {return nil ,_fdbd ;};_eaed .PdfAnnotation =_cbfd ;_cbfd ._ccfb =_eaed ;
return _cbfd ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_bcga ,_bacd :=_ada .newPdfAnnotationProjectionFromDict (_aef );if _bacd !=nil {return nil ,_bacd ;};_bcga .PdfAnnotation =_cbfd ;_cbfd ._ccfb =_bcga ;return _cbfd ,nil ;
case "\u0052\u0065\u0064\u0061\u0063\u0074":_cdea ,_deda :=_ada .newPdfAnnotationRedactFromDict (_aef );if _deda !=nil {return nil ,_deda ;};_cdea .PdfAnnotation =_cbfd ;_cbfd ._ccfb =_cdea ;return _cbfd ,nil ;};_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_dac );
return nil ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_fddb *PdfAnnotation3D )ToPdfObject ()_bbe .PdfObject {_fddb .PdfAnnotation .ToPdfObject ();_acad :=_fddb ._dbg ;_acgb :=_acad .PdfObject .(*_bbe .PdfObjectDictionary );_acgb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbe .MakeName ("\u0033\u0044"));
_acgb .SetIfNotNil ("\u0033\u0044\u0044",_fddb .T3DD );_acgb .SetIfNotNil ("\u0033\u0044\u0056",_fddb .T3DV );_acgb .SetIfNotNil ("\u0033\u0044\u0041",_fddb .T3DA );_acgb .SetIfNotNil ("\u0033\u0044\u0049",_fddb .T3DI );_acgb .SetIfNotNil ("\u0033\u0044\u0042",_fddb .T3DB );
return _acad ;};

// GetContentStream returns the pattern cell's content stream
func (_ccdfc *PdfTilingPattern )GetContentStream ()([]byte ,error ){_dffad ,_ ,_beafb :=_ccdfc .GetContentStreamWithEncoder ();return _dffad ,_beafb ;};

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_bggg :=&PdfAnnotation {};_bggg ._dbg =_bbe .MakeIndirectObject (_bbe .MakeDict ());return _bggg ;};func _bgdgc ()string {_cccbdc .Lock ();defer _cccbdc .Unlock ();return _dbagb };func _fcedg (_gfcfaf *_bbe .PdfObjectDictionary )(*PdfShadingType4 ,error ){_dfeg :=PdfShadingType4 {};
_aaaga :=_gfcfaf .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _aaaga ==nil {_gcf .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_dagcf ,_fedb :=_aaaga .(*_bbe .PdfObjectInteger );if !_fedb {_gcf .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_aaaga );
return nil ,_bbe .ErrTypeError ;};_dfeg .BitsPerCoordinate =_dagcf ;_aaaga =_gfcfaf .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _aaaga ==nil {_gcf .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_dagcf ,_fedb =_aaaga .(*_bbe .PdfObjectInteger );if !_fedb {_gcf .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_aaaga );
return nil ,_bbe .ErrTypeError ;};_dfeg .BitsPerComponent =_dagcf ;_aaaga =_gfcfaf .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _aaaga ==nil {_gcf .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_dagcf ,_fedb =_aaaga .(*_bbe .PdfObjectInteger );if !_fedb {_gcf .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_aaaga );
return nil ,_bbe .ErrTypeError ;};_dfeg .BitsPerComponent =_dagcf ;_aaaga =_gfcfaf .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _aaaga ==nil {_gcf .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_eeeac ,_fedb :=_aaaga .(*_bbe .PdfObjectArray );if !_fedb {_gcf .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_aaaga );
return nil ,_bbe .ErrTypeError ;};_dfeg .Decode =_eeeac ;_aaaga =_gfcfaf .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _aaaga ==nil {_gcf .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_dfeg .Function =[]PdfFunction {};if _adccg ,_cddag :=_aaaga .(*_bbe .PdfObjectArray );_cddag {for _ ,_dfba :=range _adccg .Elements (){_gcaec ,_daddg :=_bdce (_dfba );if _daddg !=nil {_gcf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_daddg );
return nil ,_daddg ;};_dfeg .Function =append (_dfeg .Function ,_gcaec );};}else {_ddfgg ,_ffedf :=_bdce (_aaaga );if _ffedf !=nil {_gcf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ffedf );
return nil ,_ffedf ;};_dfeg .Function =append (_dfeg .Function ,_ddfgg );};return &_dfeg ,nil ;};

// GetPerms returns the Permissions dictionary
func (_cbcec *PdfReader )GetPerms ()*Permissions {return _cbcec ._fabc };func _bddcg (_fbcgd _bbe .PdfObject )[]*_bbe .PdfObjectStream {if _fbcgd ==nil {return nil ;};_eedgaf ,_ebddg :=_bbe .GetArray (_fbcgd );if !_ebddg ||_eedgaf .Len ()==0{return nil ;
};_cbagd :=make ([]*_bbe .PdfObjectStream ,0,_eedgaf .Len ());for _ ,_cfdeb :=range _eedgaf .Elements (){if _ffgfe ,_gfae :=_bbe .GetStream (_cfdeb );_gfae {_cbagd =append (_cbagd ,_ffgfe );};};return _cbagd ;};func (_agfee *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _bccff :=_agfee ._abdgdb ;
_bccff !=nil {return _bccff ;};return _agfee ._fgfb ;};func (_gdgf *pdfFontSimple )getFontEncoding ()(_bgce string ,_bfca map[_ff .CharCode ]_ff .GlyphName ,_dcgbd error ){_bgce ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";
if _aeaad ,_ddaff :=_cgbdc [_gdgf ._ffdd ];_ddaff {_bgce =_aeaad ;}else if _gdgf .fontFlags ()&_bbcge !=0{for _bdadb ,_cdga :=range _cgbdc {if _df .Contains (_gdgf ._ffdd ,_bdadb ){_bgce =_cdga ;break ;};};};if _gdgf .Encoding ==nil {return _bgce ,nil ,nil ;
};switch _fcbgc :=_gdgf .Encoding .(type ){case *_bbe .PdfObjectName :return string (*_fcbgc ),nil ,nil ;case *_bbe .PdfObjectDictionary :_geecg ,_dbbbf :=_bbe .GetName (_fcbgc .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));
if _dbbbf {_bgce =_geecg .String ();};if _bdeba :=_fcbgc .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");_bdeba !=nil {_ddbdg ,_gbbc :=_bbe .GetArray (_bdeba );if !_gbbc {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_fcbgc ,_fcbgc .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));
return "",nil ,_bbe .ErrTypeError ;};_bfca ,_dcgbd =_ff .FromFontDifferences (_ddbdg );};return _bgce ,_bfca ,_dcgbd ;default:_gcf .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_gdgf .Encoding ,_gdgf .Encoding );
return "",nil ,_bbe .ErrTypeError ;};};

// SetDocInfo set document info.
// This will overwrite any globally declared document info.
func (_cdeca *PdfWriter )SetDocInfo (info *PdfInfo ){_cdeca .setDocInfo (info .ToPdfObject ())};

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_fddbfc *PdfPattern )GetContainingPdfObject ()_bbe .PdfObject {return _fddbfc ._agefc };func _ffbee (_bgfa *XObjectForm )(*PdfRectangle ,bool ,error ){if _ffae ,_ddba :=_bgfa .BBox .(*_bbe .PdfObjectArray );_ddba {_gceea ,_ggda :=NewPdfRectangle (*_ffae );
if _ggda !=nil {return nil ,false ,_ggda ;};if _gdgg ,_dcbad :=_bgfa .Matrix .(*_bbe .PdfObjectArray );_dcbad {_fbef ,_cbbgf :=_gdgg .ToFloat64Array ();if _cbbgf !=nil {return nil ,false ,_cbbgf ;};_dcacc :=_ggeb .IdentityMatrix ();if len (_fbef )==6{_dcacc =_ggeb .NewMatrix (_fbef [0],_fbef [1],_fbef [2],_fbef [3],_fbef [4],_fbef [5]);
};_gceea .Transform (_dcacc );return _gceea ,true ,nil ;};return _gceea ,false ,nil ;};return nil ,false ,_cc .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061n\u0063e\u0020\u0042\u0042\u006f\u0078\u0020\u0074y\u0070\u0065");
};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_gedef *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_bbe .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_cc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dgf ,_agaa :=_bbe .GetNumbersAsFloat (objects );
if _agaa !=nil {return nil ,_agaa ;};return _gedef .ColorFromFloats (_dgf );};

// ToInteger convert to an integer format.
func (_eef *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_edeb :=_ab .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_edeb *_eef .A ()),uint32 (_edeb *_eef .B ()),uint32 (_edeb *_eef .C ())};};

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_cbdga *PdfPageResources )GetShadingByName (keyName _bbe .PdfObjectName )(*PdfShading ,bool ){if _cbdga .Shading ==nil {return nil ,false ;};_ggag ,_facfb :=_bbe .TraceToDirectObject (_cbdga .Shading ).(*_bbe .PdfObjectDictionary );if !_facfb {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cbdga .Shading );
return nil ,false ;};if _adbf :=_ggag .Get (keyName );_adbf !=nil {_fffb ,_aeae :=_fggde (_adbf );if _aeae !=nil {_gcf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_aeae );
return nil ,false ;};return _fffb ,true ;};return nil ,false ;};

// Encoder returns the font's text encoder.
func (_cefcd pdfFontType3 )Encoder ()_ff .TextEncoder {return _cefcd ._adfd };

// GetXObjectByName gets XObject by name.
func (_gdgda *PdfPage )GetXObjectByName (name _bbe .PdfObjectName )(_bbe .PdfObject ,bool ){_bdedd ,_egcaf :=_gdgda .Resources .XObject .(*_bbe .PdfObjectDictionary );if !_egcaf {return nil ,false ;};if _egcbg :=_bdedd .Get (name );_egcbg !=nil {return _egcbg ,true ;
};return nil ,false ;};func _aafdc (_edce _bbe .PdfObject )(*PdfFontDescriptor ,error ){_gcae :=&PdfFontDescriptor {};_edce =_bbe .ResolveReference (_edce );if _adgb ,_cfac :=_edce .(*_bbe .PdfIndirectObject );_cfac {_gcae ._gedf =_adgb ;_edce =_adgb .PdfObject ;
};_abbac ,_cgga :=_bbe .GetDict (_edce );if !_cgga {_gcf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_edce );
return nil ,_bbe .ErrTypeError ;};if _efbfc :=_abbac .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_efbfc !=nil {_gcae .FontName =_efbfc ;}else {_gcf .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");
};_badb ,_ :=_bbe .GetName (_gcae .FontName );if _cgbde :=_abbac .Get ("\u0054\u0079\u0070\u0065");_cgbde !=nil {_acbbd ,_gegcd :=_cgbde .(*_bbe .PdfObjectName );if !_gegcd ||string (*_acbbd )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_gcf .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_cgbde ,_badb ,_gcae .FontName );
};}else {_gcf .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_badb ,_gcae .FontName );
};_gcae .FontFamily =_abbac .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_gcae .FontStretch =_abbac .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_gcae .FontWeight =_abbac .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");
_gcae .Flags =_abbac .Get ("\u0046\u006c\u0061g\u0073");_gcae .FontBBox =_abbac .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_gcae .ItalicAngle =_abbac .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_gcae .Ascent =_abbac .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");
_gcae .Descent =_abbac .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_gcae .Leading =_abbac .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_gcae .CapHeight =_abbac .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_gcae .XHeight =_abbac .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");
_gcae .StemV =_abbac .Get ("\u0053\u0074\u0065m\u0056");_gcae .StemH =_abbac .Get ("\u0053\u0074\u0065m\u0048");_gcae .AvgWidth =_abbac .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_gcae .MaxWidth =_abbac .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");
_gcae .MissingWidth =_abbac .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_gcae .FontFile =_abbac .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_gcae .FontFile2 =_abbac .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");
_gcae .FontFile3 =_abbac .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_gcae .CharSet =_abbac .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_gcae .Style =_abbac .Get ("\u0053\u0074\u0079l\u0065");_gcae .Lang =_abbac .Get ("\u004c\u0061\u006e\u0067");
_gcae .FD =_abbac .Get ("\u0046\u0044");_gcae .CIDSet =_abbac .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _gcae .Flags !=nil {if _bafda ,_adef :=_bbe .GetIntVal (_gcae .Flags );_adef {_gcae ._abgac =_bafda ;};};if _gcae .MissingWidth !=nil {if _ebgbe ,_fefcg :=_bbe .GetNumberAsFloat (_gcae .MissingWidth );
_fefcg ==nil {_gcae ._ggcge =_ebgbe ;};};if _gcae .FontFile !=nil {_eace ,_gcfe :=_adfbb (_gcae .FontFile );if _gcfe !=nil {return _gcae ,_gcfe ;};_gcf .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_eace );_gcae .fontFile =_eace ;
};if _gcae .FontFile2 !=nil {_edgac ,_cedc :=_bfg .NewFontFile2FromPdfObject (_gcae .FontFile2 );if _cedc !=nil {return _gcae ,_cedc ;};_gcf .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_edgac .String ());_gcae ._bfdf =&_edgac ;
};return _gcae ,nil ;};

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_efg :=NewPdfAnnotation ();_dga :=&PdfAnnotationTrapNet {};_dga .PdfAnnotation =_efg ;_efg .SetContext (_dga );return _dga ;};

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_gcbe *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _cc .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");
};_fceg :=field .V ;if _fceg ==nil {return _cc .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_fgdd :=pageNum -1;
if _fgdd < 0||_fgdd > len (_gcbe ._gada )-1{return _g .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );};_aagd :=_gcbe .Reader .PageList [_fgdd ];field .P =_aagd .ToPdfObject ();if field .T ==nil ||field .T .String ()==""{field .T =_bbe .MakeString (_g .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));
};_aagd .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );if _gcbe ._bggf ==_gcbe ._aeaa .AcroForm {_gcbe ._bggf =_gcbe .Reader .AcroForm ;};_cbgcf :=_gcbe ._bggf ;if _cbgcf ==nil {_cbgcf =NewPdfAcroForm ();};_cbgcf .SigFlags =_bbe .MakeInteger (3);
if _cbgcf .NeedAppearances !=nil {_cbgcf .NeedAppearances =nil ;};_feac :=append (_cbgcf .AllFields (),field .PdfField );_cbgcf .Fields =&_feac ;_gcbe .ReplaceAcroForm (_cbgcf );_gcbe .UpdatePage (_aagd );_gcbe ._gada [_fgdd ]=_aagd ;if _ ,_ced :=field .V .GetDocMDPPermission ();
_ced {_gcbe ._fgdg =NewPermissions (field .V );};return nil ;};func (_dbdec *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _dbdec ._ffgcd .GetCrypter ()!=nil &&!_dbdec ._ffgcd .IsAuthenticated (){return nil ,_g .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_ccad :=_dbdec ._cagcc ;_bgdga :=_ccad .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _bgdga ==nil {return nil ,nil ;};_ffaec ,_ecdcf :=_bbe .GetIndirect (_bgdga );_bgdga =_bbe .TraceToDirectObject (_bgdga );if _bbe .IsNullObject (_bgdga ){_gcf .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");
return nil ,nil ;};_fdfed ,_edagc :=_bbe .GetDict (_bgdga );if !_edagc {_gcf .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_bgdga );_gcf .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");
return nil ,_g .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_bgdga );};_gcf .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");
_gcf .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_dbdec ._egggg {_decc :=_dbdec .traverseObjectData (_fdfed );
if _decc !=nil {_gcf .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_decc );
return nil ,_decc ;};};_efce ,_baadf :=_dbdec .newPdfAcroFormFromDict (_ffaec ,_fdfed );if _baadf !=nil {return nil ,_baadf ;};_efce ._dggd =!_ecdcf ;return _efce ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_cfca *PdfActionResetForm )ToPdfObject ()_bbe .PdfObject {_cfca .PdfAction .ToPdfObject ();_dbe :=_cfca ._be ;_cdbb :=_dbe .PdfObject .(*_bbe .PdfObjectDictionary );_cdbb .SetIfNotNil ("\u0053",_bbe .MakeName (string (ActionTypeResetForm )));_cdbb .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_cfca .Fields );
_cdbb .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_cfca .Flags );return _dbe ;};func (_ggad *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_bbfd *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_cedd ,_bbff :=color .(*PdfColorDeviceRGB );if !_bbff {_gcf .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");
return nil ,_cc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _cedd ,nil ;};

// VRI represents a Validation-Related Information dictionary.
// The VRI dictionary contains validation data in the form of
// certificates, OCSP and CRL information, for a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type VRI struct{Cert []*_bbe .PdfObjectStream ;OCSP []*_bbe .PdfObjectStream ;CRL []*_bbe .PdfObjectStream ;TU *_bbe .PdfObjectString ;TS *_bbe .PdfObjectString ;};func (_bgefg *PdfWriter )writeOutlines ()error {if _bgefg ._fbbde ==nil {return nil ;};_gcf .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_bgefg ._fbbde );
_gbbg :=_bgefg ._fbbde .ToPdfObject ();_gcf .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_gbbg ,_gbbg ,_gbbg );_bgefg ._bgdee .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_gbbg );
_ggdga :=_bgefg .addObjects (_gbbg );if _ggdga !=nil {return _ggdga ;};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_fecbd *PdfAnnotationWidget )ToPdfObject ()_bbe .PdfObject {_fecbd .PdfAnnotation .ToPdfObject ();_cfae :=_fecbd ._dbg ;_badd :=_cfae .PdfObject .(*_bbe .PdfObjectDictionary );if _fecbd ._fdbg {return _cfae ;};_fecbd ._fdbg =true ;_badd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbe .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));
_badd .SetIfNotNil ("\u0048",_fecbd .H );_badd .SetIfNotNil ("\u004d\u004b",_fecbd .MK );_badd .SetIfNotNil ("\u0041",_fecbd .A );_badd .SetIfNotNil ("\u0041\u0041",_fecbd .AA );_badd .SetIfNotNil ("\u0042\u0053",_fecbd .BS );_gbceg :=_fecbd .Parent ;if _fecbd ._abdd !=nil {if _fecbd ._abdd ._acga ==_fecbd ._dbg {_fecbd ._abdd .ToPdfObject ();
};_gbceg =_fecbd ._abdd .GetContainingPdfObject ();};if _gbceg !=_cfae {_badd .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_gbceg );};_fecbd ._fdbg =false ;return _cfae ;};

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_fbaeb DefaultImageHandler )NewImageFromGoImage (goimg _bf .Image )(*Image ,error ){_dfeb ,_ggcd :=_gb .FromGoImage (goimg );if _ggcd !=nil {return nil ,_ggcd ;};_gcafb :=_gdbea (_dfeb .Base ());return &_gcafb ,nil ;};

// SetAnnotations sets the annotations list.
func (_eegae *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_eegae ._eeeeb =annotations };

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};

// WriteString outputs the object as it is to be written to file.
func (_aacbaa *PdfTransformParamsDocMDP )WriteString ()string {return _aacbaa .ToPdfObject ().WriteString ();};func _abaab (_eaaeb []byte )bool {if len (_eaaeb )< 4{return true ;};for _cabae :=range _eaaeb [:4]{_fedc :=rune (_cabae );if !_ddb .Is (_ddb .ASCII_Hex_Digit ,_fedc )&&!_ddb .IsSpace (_fedc ){return true ;
};};return false ;};func (_ggafc *LTV )validateSig (_fecead *PdfSignature )error {if _fecead ==nil ||_fecead .Contents ==nil ||len (_fecead .Contents .Bytes ())==0{return _g .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0066\u0069\u0065l\u0064:\u0020\u0025\u0076",_fecead );
};return nil ;};

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_bfafg :=&PdfSignature {Type :_bbe .MakeName ("\u0053\u0069\u0067"),Handler :handler };_afgf :=&pdfSignDictionary {PdfObjectDictionary :_bbe .MakeDict (),_ddbegb :&handler ,_fbbfb :_bfafg };
_bfafg ._babd =_bbe .MakeIndirectObject (_afgf );return _bfafg ;};

// HasExtGState checks if ExtGState name is available.
func (_fecdb *PdfPage )HasExtGState (name _bbe .PdfObjectName )bool {if _fecdb .Resources ==nil {return false ;};if _fecdb .Resources .ExtGState ==nil {return false ;};_accca ,_dggge :=_bbe .TraceToDirectObject (_fecdb .Resources .ExtGState ).(*_bbe .PdfObjectDictionary );
if !_dggge {_gcf .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_bbe .TraceToDirectObject (_fecdb .Resources .ExtGState ));
return false ;};_gdcef :=_accca .Get (name );_ddgc :=_gdcef !=nil ;return _ddgc ;};func (_cgaag *PdfWriter )writeOutputIntents ()error {if len (_cgaag ._agfab )==0{return nil ;};_cdcd :=make ([]_bbe .PdfObject ,len (_cgaag ._agfab ));for _bfdag ,_cdggc :=range _cgaag ._agfab {_caab :=_cdggc .ToPdfObject ();
_cdcd [_bfdag ]=_bbe .MakeIndirectObject (_caab );};_becae :=_bbe .MakeIndirectObject (_bbe .MakeArray (_cdcd ...));_cgaag ._bgdee .Set ("\u004f\u0075\u0074\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0073",_becae );if _eeged :=_cgaag .addObjects (_becae );
_eeged !=nil {return _eeged ;};return nil ;};func _gbfc (_aecfc *PdfField ,_ggbe _bbe .PdfObject ){for _ ,_caedb :=range _aecfc .Annotations {_caedb .AS =_ggbe ;_caedb .ToPdfObject ();};};type fontCommon struct{_ffdd string ;_cafed string ;_aefc string ;
_adbd _bbe .PdfObject ;_ggdec *_fb .CMap ;_abdgdb *PdfFontDescriptor ;_adcg int64 ;};

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_baeg :=&PdfColorspaceCalRGB {};_baeg .BlackPoint =[]float64 {0.0,0.0,0.0};_baeg .Gamma =[]float64 {1.0,1.0,1.0};_baeg .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _baeg ;};func _ddbbf (_faafd *_bbe .PdfObjectArray )(float64 ,error ){_ggdfcf ,_cfefc :=_faafd .ToFloat64Array ();
if _cfefc !=nil {_gcf .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_faafd ,_cfefc );};switch len (_ggdfcf ){case 1:return _ggdfcf [0],nil ;
case 3:_decbcg :=PdfColorspaceDeviceRGB {};_afdf ,_cgccd :=_decbcg .ColorFromFloats (_ggdfcf );if _cgccd !=nil {return 0.0,_cgccd ;};return _afdf .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_bggdd :=PdfColorspaceDeviceCMYK {};_eaeef ,_acgae :=_bggdd .ColorFromFloats (_ggdfcf );
if _acgae !=nil {return 0.0,_acgae ;};_gcada ,_acgae :=_bggdd .ColorToRGB (_eaeef .(*PdfColorDeviceCMYK ));if _acgae !=nil {return 0.0,_acgae ;};return _gcada .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;};_cfefc =_cc .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");
_gcf .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_faafd ,_cfefc );return 0.0,_cfefc ;};func (_efdfca *PdfWriter )checkLicense ()error {_bccfd :=_ea .GetLicenseKey ();
if (_bccfd ==nil ||!_bccfd .IsLicensed ())&&!_dafffd {_g .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");_g .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _cc .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};return nil ;};func (_cbgeg *PdfWriter )optimize ()error {if _cbgeg ._aacdbg ==nil {return nil ;
};var _bcceg error ;_cbgeg ._ageab ,_bcceg =_cbgeg ._aacdbg .Optimize (_cbgeg ._ageab );if _bcceg !=nil {return _bcceg ;};_bgacf :=make (map[_bbe .PdfObject ]struct{},len (_cbgeg ._ageab ));for _ ,_ceedg :=range _cbgeg ._ageab {_bgacf [_ceedg ]=struct{}{};
};_cbgeg ._ffebc =_bgacf ;return nil ;};

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_gd :=NewPdfAction ();_bc :=&PdfActionResetForm {};_bc .PdfAction =_gd ;_gd .SetContext (_bc );return _bc ;};func _gegd (_bgaba *_bbe .PdfObjectStream )(*PdfFunctionType0 ,error ){_fcagd :=&PdfFunctionType0 {};
_fcagd ._ecfcf =_bgaba ;_bfee :=_bgaba .PdfObjectDictionary ;_aade ,_beeb :=_bbe .TraceToDirectObject (_bfee .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bbe .PdfObjectArray );if !_beeb {_gcf .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_cc .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _aade .Len ()< 0||_aade .Len ()%2!=0{_gcf .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return nil ,_cc .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_fcagd .NumInputs =_aade .Len ()/2;_egecb ,_efcf :=_aade .ToFloat64Array ();if _efcf !=nil {return nil ,_efcf ;};_fcagd .Domain =_egecb ;
_aade ,_beeb =_bbe .TraceToDirectObject (_bfee .Get ("\u0052\u0061\u006eg\u0065")).(*_bbe .PdfObjectArray );if !_beeb {_gcf .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");return nil ,_cc .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _aade .Len ()< 0||_aade .Len ()%2!=0{return nil ,_cc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_fcagd .NumOutputs =_aade .Len ()/2;_adabab ,_efcf :=_aade .ToFloat64Array ();if _efcf !=nil {return nil ,_efcf ;
};_fcagd .Range =_adabab ;_aade ,_beeb =_bbe .TraceToDirectObject (_bfee .Get ("\u0053\u0069\u007a\u0065")).(*_bbe .PdfObjectArray );if !_beeb {_gcf .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
return nil ,_cc .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_fgeb ,_efcf :=_aade .ToIntegerArray ();
if _efcf !=nil {return nil ,_efcf ;};if len (_fgeb )!=_fcagd .NumInputs {_gcf .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");
return nil ,_cc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fcagd .Size =_fgeb ;_feecd ,_beeb :=_bbe .TraceToDirectObject (_bfee .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_bbe .PdfObjectInteger );
if !_beeb {_gcf .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_cc .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if *_feecd !=1&&*_feecd !=2&&*_feecd !=4&&*_feecd !=8&&*_feecd !=12&&*_feecd !=16&&*_feecd !=24&&*_feecd !=32{_gcf .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_feecd );
return nil ,_cc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fcagd .BitsPerSample =int (*_feecd );_fcagd .Order =1;_dgfdd ,_beeb :=_bbe .TraceToDirectObject (_bfee .Get ("\u004f\u0072\u0064e\u0072")).(*_bbe .PdfObjectInteger );
if _beeb {if *_dgfdd !=1&&*_dgfdd !=3{_gcf .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_dgfdd );return nil ,_cc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fcagd .Order =int (*_dgfdd );
};_aade ,_beeb =_bbe .TraceToDirectObject (_bfee .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_bbe .PdfObjectArray );if _beeb {_feag ,_daaa :=_aade .ToFloat64Array ();if _daaa !=nil {return nil ,_daaa ;};_fcagd .Encode =_feag ;};_aade ,_beeb =_bbe .TraceToDirectObject (_bfee .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_bbe .PdfObjectArray );
if _beeb {_gcebf ,_eecf :=_aade .ToFloat64Array ();if _eecf !=nil {return nil ,_eecf ;};_fcagd .Decode =_gcebf ;};_ebcbf ,_efcf :=_bbe .DecodeStream (_bgaba );if _efcf !=nil {return nil ,_efcf ;};_fcagd ._cgeegg =_ebcbf ;return _fcagd ,nil ;};

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_bbe .PdfObjectArray ;ExtGState _bbe .PdfObject ;};func (_acab *PdfWriter )flushWriter ()error {if _acab ._fgadg ==nil {_acab ._fgadg =_acab ._gcceb .Flush ();};return _acab ._fgadg ;
};func (_cbfab *PdfWriter )writeString (_dfbgg string ){if _cbfab ._fgadg !=nil {return ;};_gabf ,_bcaed :=_cbfab ._gcceb .WriteString (_dfbgg );_cbfab ._dccgd +=int64 (_gabf );_cbfab ._fgadg =_bcaed ;};

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _bbe .PdfObject ;Movie _bbe .PdfObject ;A _bbe .PdfObject ;};func (_aafe *PdfReader )newPdfAnnotationTrapNetFromDict (_cafe *_bbe .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_aba :=PdfAnnotationTrapNet {};
return &_aba ,nil ;};func (_gabe *PdfWriter )makeOffSetReference (_ggaba int64 ){_fbcbe :=_g .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_ggaba );_gabe .writeString (_fbcbe );_gabe .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");
};

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_gbfd *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_cc .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");
};_cgbfc ,_gaac :=_gb .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._gagad ,img ._eacbf );if _gaac !=nil {return img ,_gaac ;};_cdbbb ,_gaac :=_gb .NRGBAConverter .Convert (_cgbfc );if _gaac !=nil {return img ,_gaac ;
};_cacg :=_gdbea (_cdbbb .Base ());_gcf .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_gcf .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );_gcf .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_cacg .Data );
_gcf .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_cacg );return _cacg ,nil ;};

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_dbef *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _dbef .UnderlyingCS .GetNumComponents ();};

// FlattenFieldsWithOpts flattens the AcroForm fields of the page using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened for the page.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
func (_ccga *PdfPage )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {_gfac :=map[*PdfAnnotation ]bool {};_eaef ,_efcca :=_ccga .GetAnnotations ();if _efcca !=nil {return _efcca ;};_dafff :=false ;for _ ,_gaccd :=range _eaef {if opts .AnnotFilterFunc !=nil {_gfac [_gaccd ]=opts .AnnotFilterFunc (_gaccd );
}else {_gfac [_gaccd ]=true ;};if _gfac [_gaccd ]{_dafff =true ;};};if !_dafff {return nil ;};return _ccga .flattenFieldsWithOpts (appgen ,opts ,_gfac );};

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_ggcc *PdfPageResources )GetColorspaceByName (keyName _bbe .PdfObjectName )(PdfColorspace ,bool ){_cbbac ,_ddebbb :=_ggcc .GetColorspaces ();if _ddebbb !=nil {_gcf .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_ddebbb );
return nil ,false ;};if _cbbac ==nil {return nil ,false ;};_fefea ,_fabbg :=_cbbac .Colorspaces [string (keyName )];if !_fabbg {return nil ,false ;};return _fefea ,true ;};

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_dec :=NewPdfAction ();_bge :=&PdfActionLaunch {};_bge .PdfAction =_dec ;_dec .SetContext (_bge );return _bge ;};

// GetContentStream returns the XObject Form's content stream.
func (_dbfa *XObjectForm )GetContentStream ()([]byte ,error ){_aaecc ,_dgff :=_bbe .DecodeStream (_dbfa ._abbbg );if _dgff !=nil {return nil ,_dgff ;};return _aaecc ,nil ;};

// CustomKeys returns all custom info keys as list.
func (_bcfa *PdfInfo )CustomKeys ()[]string {if _bcfa ._fecbf ==nil {return nil ;};_ffff :=make ([]string ,len (_bcfa ._fecbf .Keys ()));for _ ,_adg :=range _bcfa ._fecbf .Keys (){_ffff =append (_ffff ,_adg .String ());};return _ffff ;};

// GetRevision returns the specific version of the PdfReader for the current Pdf document
func (_fedfc *PdfReader )GetRevision (revisionNumber int )(*PdfReader ,error ){_aadcac :=_fedfc ._ffgcd .GetRevisionNumber ();if revisionNumber < 0||revisionNumber > _aadcac {return nil ,_cc .New ("w\u0072\u006f\u006e\u0067 r\u0065v\u0069\u0073\u0069\u006f\u006e \u006e\u0075\u006d\u0062\u0065\u0072");
};if revisionNumber ==_aadcac {return _fedfc ,nil ;};if _fedfc ._dccdf [revisionNumber ]!=nil {return _fedfc ._dccdf [revisionNumber ],nil ;};_faegd :=_fedfc ;for _fbee :=_aadcac -1;_fbee >=revisionNumber ;_fbee --{_abeac ,_bcedb :=_faegd .GetPreviousRevision ();
if _bcedb !=nil {return nil ,_bcedb ;};_fedfc ._dccdf [_fbee ]=_abeac ;_faegd =_abeac ;};return _faegd ,nil ;};func (_gefbb *PdfReader )buildNameNodes (_fedac *_bbe .PdfIndirectObject ,_ggfe map[_bbe .PdfObject ]struct{})error {if _fedac ==nil {return nil ;
};if _ ,_fefeb :=_ggfe [_fedac ];_fefeb {_gcf .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_fedac .ObjectNumber );
return nil ;};_ggfe [_fedac ]=struct{}{};_acbga ,_ceccf :=_fedac .PdfObject .(*_bbe .PdfObjectDictionary );if !_ceccf {return _cc .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};if _gaafa ,_bafa :=_bbe .GetDict (_acbga .Get ("\u0044\u0065\u0073t\u0073"));
_bafa {_aceed ,_fbce :=_bbe .GetArray (_gaafa .Get ("\u004b\u0069\u0064\u0073"));if !_fbce {return _cc .New ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u004b\u0069\u0064\u0073 \u0061r\u0072a\u0079\u0020\u006f\u0062\u006a\u0065\u0063t");};_gcf .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_aceed );
for _ecdcfc ,_eecbf :=range _aceed .Elements (){_defe ,_adgba :=_bbe .GetIndirect (_eecbf );if !_adgba {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0063\u0068\u0069\u006c\u0064\u0020n\u006f\u0074\u0020\u0069\u006e\u0064i\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u002d \u0028\u0025\u0073\u0029",_defe );
return _cc .New ("\u0063h\u0069\u006c\u0064\u0020n\u006f\u0074\u0020\u0069\u006ed\u0069r\u0065c\u0074\u0020\u006f\u0062\u006a\u0065\u0063t");};_aceed .Set (_ecdcfc ,_defe );_edecd :=_gefbb .buildNameNodes (_defe ,_ggfe );if _edecd !=nil {return _edecd ;
};};};if _ddfga ,_cdddb :=_bbe .GetDict (_acbga );_cdddb {if !_bbe .IsNullObject (_ddfga .Get ("\u004b\u0069\u0064\u0073")){if _abbaa ,_addb :=_bbe .GetArray (_ddfga .Get ("\u004b\u0069\u0064\u0073"));_addb {for _fgac ,_fgag :=range _abbaa .Elements (){if _fgdad ,_accdg :=_bbe .GetIndirect (_fgag );
_accdg {_abbaa .Set (_fgac ,_fgdad );_cgdbc :=_gefbb .buildNameNodes (_fgdad ,_ggfe );if _cgdbc !=nil {return _cgdbc ;};};};};};};return nil ;};

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_eacb :=NewPdfAction ();_ag :=&PdfActionNamed {};_ag .PdfAction =_eacb ;_eacb .SetContext (_ag );return _ag ;};

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_egbfe *PdfReader )GetObjectNums ()[]int {return _egbfe ._ffgcd .GetObjectNums ()};

// ToPdfObject implements interface PdfModel.
func (_bfa *PdfActionJavaScript )ToPdfObject ()_bbe .PdfObject {_bfa .PdfAction .ToPdfObject ();_cad :=_bfa ._be ;_fbd :=_cad .PdfObject .(*_bbe .PdfObjectDictionary );_fbd .SetIfNotNil ("\u0053",_bbe .MakeName (string (ActionTypeJavaScript )));_fbd .SetIfNotNil ("\u004a\u0053",_bfa .JS );
return _cad ;};

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _bbe .PdfObject ;Q _bbe .PdfObject ;RC _bbe .PdfObject ;DS _bbe .PdfObject ;CL _bbe .PdfObject ;IT _bbe .PdfObject ;BE _bbe .PdfObject ;RD _bbe .PdfObject ;BS _bbe .PdfObject ;LE _bbe .PdfObject ;
};

// B returns the value of the B component of the color.
func (_daffb *PdfColorLab )B ()float64 {return _daffb [2]};

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_ebfg *PdfPageResources )GetXObjectByName (keyName _bbe .PdfObjectName )(*_bbe .PdfObjectStream ,XObjectType ){if _ebfg .XObject ==nil {return nil ,XObjectTypeUndefined ;};_bacfa ,_caeca :=_bbe .TraceToDirectObject (_ebfg .XObject ).(*_bbe .PdfObjectDictionary );
if !_caeca {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bbe .TraceToDirectObject (_ebfg .XObject ));
return nil ,XObjectTypeUndefined ;};if _fdgfb :=_bacfa .Get (keyName );_fdgfb !=nil {_cdaca ,_bfceg :=_bbe .GetStream (_fdgfb );if !_bfceg {_gcf .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_fdgfb );
return nil ,XObjectTypeUndefined ;};_fbbd :=_cdaca .PdfObjectDictionary ;_cabgaf ,_bfceg :=_bbe .TraceToDirectObject (_fbbd .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_bbe .PdfObjectName );if !_bfceg {_gcf .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_fbbd .String ());
return nil ,XObjectTypeUndefined ;};if *_cabgaf =="\u0049\u006d\u0061g\u0065"{return _cdaca ,XObjectTypeImage ;}else if *_cabgaf =="\u0046\u006f\u0072\u006d"{return _cdaca ,XObjectTypeForm ;}else if *_cabgaf =="\u0050\u0053"{return _cdaca ,XObjectTypePS ;
}else {_gcf .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_cabgaf );return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;
};};

// StandardApplier is the interface that performs optimization of the whole PDF document.
// As a result an input document is being changed by the optimizer.
// The writer than takes back all it's parts and overwrites it.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardApplier interface{ApplyStandard (_eefdf *_gcg .Document )error ;};

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_gda :=NewPdfAction ();_eaeb :=&PdfActionSetOCGState {};_eaeb .PdfAction =_gda ;_gda .SetContext (_eaeb );return _eaeb ;};

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_bacec *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_afdg :=NewPdfOutlineItem ();_afdg .Title =_bbe .MakeEncodedString (_bacec .Title ,true );_afdg .Dest =_bacec .Dest .ToPdfObject ();var _cebbc []*PdfOutlineItem ;var _cggdg int64 ;
var _ffecf *PdfOutlineItem ;for _ ,_ebec :=range _bacec .Entries {_aggfc ,_ggdcb :=_ebec .ToPdfOutlineItem ();_aggfc .Parent =&_afdg .PdfOutlineTreeNode ;if _ffecf !=nil {_ffecf .Next =&_aggfc .PdfOutlineTreeNode ;_aggfc .Prev =&_ffecf .PdfOutlineTreeNode ;
};_cebbc =append (_cebbc ,_aggfc );_cggdg +=_ggdcb ;_ffecf =_aggfc ;};_dgeeg :=len (_cebbc );_cggdg +=int64 (_dgeeg );if _dgeeg > 0{_afdg .First =&_cebbc [0].PdfOutlineTreeNode ;_afdg .Last =&_cebbc [_dgeeg -1].PdfOutlineTreeNode ;_afdg .Count =&_cggdg ;
};return _afdg ,_cggdg ;};

// AllFields returns a flattened list of all fields in the form.
func (_bgfad *PdfAcroForm )AllFields ()[]*PdfField {if _bgfad ==nil {return nil ;};var _ffga []*PdfField ;if _bgfad .Fields !=nil {for _ ,_dcdag :=range *_bgfad .Fields {_ffga =append (_ffga ,_bggd (_dcdag )...);};};return _ffga ;};

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_bbe .PdfObjectString ;Q *_bbe .PdfObjectInteger ;DS *_bbe .PdfObjectString ;RV _bbe .PdfObject ;MaxLen *_bbe .PdfObjectInteger ;};func (_cccgg *PdfReader )loadDSS ()(*DSS ,error ){if _cccgg ._ffgcd .GetCrypter ()!=nil &&!_cccgg ._ffgcd .IsAuthenticated (){return nil ,_g .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_ecgfc :=_cccgg ._cagcc .Get ("\u0044\u0053\u0053");if _ecgfc ==nil {return nil ,nil ;};_aeecd ,_ :=_bbe .GetIndirect (_ecgfc );_ecgfc =_bbe .TraceToDirectObject (_ecgfc );switch _fgbb :=_ecgfc .(type ){case *_bbe .PdfObjectNull :return nil ,nil ;case *_bbe .PdfObjectDictionary :return _agfgg (_aeecd ,_fgbb );
};return nil ,_g .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u0053\u0053 \u0065\u006e\u0074\u0072y \u0025\u0054",_ecgfc );};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_faaf *PdfShading )GetContext ()PdfModel {return _faaf ._cgge };

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_fefff :=&XObjectImage {};_eeacgf :=&_bbe .PdfObjectStream {};_eeacgf .PdfObjectDictionary =_bbe .MakeDict ();_fefff ._cggga =_eeacgf ;return _fefff ;};func (_gegbd *PdfAppender )mergeResources (_bbea ,_cbgc _bbe .PdfObject ,_afedc map[_bbe .PdfObjectName ]_bbe .PdfObjectName )_bbe .PdfObject {if _cbgc ==nil &&_bbea ==nil {return nil ;
};if _cbgc ==nil {return _bbea ;};_cbed ,_egae :=_bbe .GetDict (_cbgc );if !_egae {return _bbea ;};if _bbea ==nil {_gbee :=_bbe .MakeDict ();_gbee .Merge (_cbed );return _cbgc ;};_baff ,_egae :=_bbe .GetDict (_bbea );if !_egae {_gcf .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
_baff =_bbe .MakeDict ();};for _ ,_agfef :=range _cbed .Keys (){if _fagd ,_aae :=_afedc [_agfef ];_aae {_baff .Set (_fagd ,_cbed .Get (_agfef ));}else {_baff .Set (_agfef ,_cbed .Get (_agfef ));};};return _baff ;};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_eecgg *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _eecgg ._adcag .(*PdfTilingPattern );};func (_bdbafdf *PdfWriter )checkCrossReferenceStream ()bool {_deagd :=_bdbafdf ._dfadc .Major > 1||(_bdbafdf ._dfadc .Major ==1&&_bdbafdf ._dfadc .Minor > 4);
if _bdbafdf ._ebabc !=nil {_deagd =*_bdbafdf ._ebabc ;};return _deagd ;};

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_acba *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _acba .Range };func (_ceaee *PdfWriter )writeAcroFormFields ()error {if _ceaee ._aadb ==nil {return nil ;};_gcf .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");
_ecfgd :=_ceaee ._aadb .ToPdfObject ();_gcf .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_ecfgd );_ceaee ._bgdee .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_ecfgd );_aefgg :=_ceaee .addObjects (_ecfgd );
if _aefgg !=nil {return _aefgg ;};return nil ;};func _ffce (_dbdff []byte )(_cdafa ,_aefgb string ,_fbbge error ){_gcf .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_dbdff ));_bgcfc :=_cgbb .FindIndex (_dbdff );
if _bgcfc ==nil {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");return "","",_bbe .ErrTypeError ;
};_cgfgd :=_bgcfc [1];_fccbd :=_df .Index (string (_dbdff [_cgfgd :]),_cadcc );if _fccbd < 0{_cdafa =string (_dbdff [_cgfgd :]);return _cdafa ,"",nil ;};_fgddg :=_cgfgd +_fccbd ;_cdafa =string (_dbdff [_cgfgd :_fgddg ]);_fafa :=_fgddg ;_fccbd =_df .Index (string (_dbdff [_fafa :]),_bceecf );
if _fccbd < 0{_gcf .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_fbbge );return "","",_bbe .ErrTypeError ;};_acdcb :=_fafa +_fccbd ;
_aefgb =string (_dbdff [_fafa :_acdcb ]);return _cdafa ,_aefgb ,nil ;};

// SetVersion sets the PDF version of the output file.
func (_eccg *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_eccg ._dfadc .Major =majorVersion ;_eccg ._dfadc .Minor =minorVersion ;};func (_ffefg *PdfReader )newPdfFieldSignatureFromDict (_gacc *_bbe .PdfObjectDictionary )(*PdfFieldSignature ,error ){_dgca :=&PdfFieldSignature {};
_aebdff ,_fdegc :=_bbe .GetIndirect (_gacc .Get ("\u0056"));if _fdegc {var _baag error ;_dgca .V ,_baag =_ffefg .newPdfSignatureFromIndirect (_aebdff );if _baag !=nil {return nil ,_baag ;};};_dgca .Lock ,_ =_bbe .GetIndirect (_gacc .Get ("\u004c\u006f\u0063\u006b"));
_dgca .SV ,_ =_bbe .GetIndirect (_gacc .Get ("\u0053\u0056"));return _dgca ,nil ;};

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_gefd :=PdfColorCalGray (grayVal );return &_gefd ;};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_acfb *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_dddc ,_ebae :=color .(*PdfColorPattern );if !_ebae {_gcf .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );
return nil ,ErrTypeCheck ;};if _dddc .Color ==nil {return color ,nil ;};if _acfb .UnderlyingCS ==nil {return nil ,_cc .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};return _acfb .UnderlyingCS .ColorToRGB (_dddc .Color );
};

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_bbe .PdfObjectDictionary )(*PdfPageResources ,error ){_abbef :=NewPdfPageResources ();if _ggbca :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_ggbca !=nil {_abbef .ExtGState =_ggbca ;};if _befee :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");
_befee !=nil &&!_bbe .IsNullObject (_befee ){_abbef .ColorSpace =_befee ;};if _cefcc :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_cefcc !=nil {_abbef .Pattern =_cefcc ;};if _cafgc :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_cafgc !=nil {_abbef .Shading =_cafgc ;
};if _gfca :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_gfca !=nil {_abbef .XObject =_gfca ;};if _dbbf :=_bbe .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_dbbf !=nil {_abbef .Font =_dbbf ;};if _cbabc :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");
_cbabc !=nil {_abbef .ProcSet =_cbabc ;};if _efagc :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_efagc !=nil {_abbef .Properties =_efagc ;};return _abbef ,nil ;};func (_cbfcd *PdfReader )flattenFieldsWithOpts (_dfbf bool ,_abgbb FieldAppearanceGenerator ,_deggg *FieldFlattenOpts )error {if _deggg ==nil {_deggg =&FieldFlattenOpts {};
};var _cfcaf bool ;_gebff :=map[*PdfAnnotation ]bool {};{var _aaca []*PdfField ;_faba :=_cbfcd .AcroForm ;if _faba !=nil {if _deggg .FilterFunc !=nil {_aaca =_faba .filteredFields (_deggg .FilterFunc ,true );_cfcaf =_faba .Fields !=nil &&len (*_faba .Fields )> 0;
}else {_aaca =_faba .AllFields ();};};for _ ,_agadag :=range _aaca {if len (_agadag .Annotations )< 1{_gcf .Log .Debug ("\u004e\u006f\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0075\u006ed\u0020\u0066\u006f\u0072\u003a\u0020\u0025v\u002c\u0020\u006c\u006f\u006f\u006b\u0020\u0069\u006e\u0074\u006f \u004b\u0069\u0064\u0073\u0020\u004f\u0062\u006a\u0065\u0063\u0074",_agadag .PartialName ());
for _bddea ,_cedbf :=range _agadag .Kids {for _ ,_dafde :=range _cedbf .Annotations {_gebff [_dafde .PdfAnnotation ]=_agadag .V !=nil ;if _cedbf .V ==nil {_cedbf .V =_agadag .V ;};if _cedbf .T ==nil {_cedbf .T =_bbe .MakeString (_g .Sprintf ("\u0025\u0073\u0023%\u0064",_agadag .PartialName (),_bddea ));
};if _abgbb !=nil {_gaffe ,_dbed :=_abgbb .GenerateAppearanceDict (_faba ,_cedbf ,_dafde );if _dbed !=nil {return _dbed ;};_dafde .AP =_gaffe ;};};};};for _ ,_cdgcg :=range _agadag .Annotations {_gebff [_cdgcg .PdfAnnotation ]=_agadag .V !=nil ;if _abgbb !=nil {_gbgfb ,_dbac :=_abgbb .GenerateAppearanceDict (_faba ,_agadag ,_cdgcg );
if _dbac !=nil {return _dbac ;};_cdgcg .AP =_gbgfb ;};};};};if _dfbf {for _ ,_bagc :=range _cbfcd .PageList {_egec ,_aeeg :=_bagc .GetAnnotations ();if _aeeg !=nil {return _aeeg ;};for _ ,_gadag :=range _egec {_gebff [_gadag ]=true ;};};};for _ ,_dade :=range _cbfcd .PageList {_dcdbe :=_dade .flattenFieldsWithOpts (_abgbb ,_deggg ,_gebff );
if _dcdbe !=nil {return _dcdbe ;};};if !_cfcaf {_cbfcd .AcroForm =nil ;};return nil ;};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_ccace *modelManager )GetModelFromPrimitive (primitive _bbe .PdfObject )PdfModel {model ,_aafee :=_ccace ._dccbf [primitive ];if !_aafee {return nil ;};return model ;};

// SetShadingByName sets a shading resource specified by keyName.
func (_daee *PdfPageResources )SetShadingByName (keyName _bbe .PdfObjectName ,shadingObj _bbe .PdfObject )error {if _daee .Shading ==nil {_daee .Shading =_bbe .MakeDict ();};_eabdaa ,_aagcf :=_bbe .GetDict (_daee .Shading );if !_aagcf {return _bbe .ErrTypeError ;
};_eabdaa .Set (keyName ,shadingObj );return nil ;};func (_gcbec *PdfWriter )updateObjectNumbers (){_cccf :=_gcbec .ObjNumOffset ;_aaage :=0;for _ ,_gcgg :=range _gcbec ._ageab {_cdddc :=int64 (_aaage +1+_cccf );_fdabad :=true ;if _gcbec ._degbe {if _cggef ,_fgede :=_gcbec ._febda [_gcgg ];
_fgede {_cdddc =_cggef ;_fdabad =false ;};};switch _efdab :=_gcgg .(type ){case *_bbe .PdfIndirectObject :_efdab .ObjectNumber =_cdddc ;_efdab .GenerationNumber =0;case *_bbe .PdfObjectStream :_efdab .ObjectNumber =_cdddc ;_efdab .GenerationNumber =0;case *_bbe .PdfObjectStreams :_efdab .ObjectNumber =_cdddc ;
_efdab .GenerationNumber =0;default:_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_efdab );continue ;
};if _fdabad {_aaage ++;};};_gece :=func (_gadg _bbe .PdfObject )int64 {switch _bbfed :=_gadg .(type ){case *_bbe .PdfIndirectObject :return _bbfed .ObjectNumber ;case *_bbe .PdfObjectStream :return _bbfed .ObjectNumber ;case *_bbe .PdfObjectStreams :return _bbfed .ObjectNumber ;
};return 0;};_cg .SliceStable (_gcbec ._ageab ,func (_fccgad ,_dffcc int )bool {return _gece (_gcbec ._ageab [_fccgad ])< _gece (_gcbec ._ageab [_dffcc ])});};var _ pdfFont =(*pdfFontSimple )(nil );

// Permissions specify a permissions dictionary (PDF 1.5).
// (Section 12.8.4, Table 258 - Entries in a permissions dictionary p. 477 in PDF32000_2008).
type Permissions struct{DocMDP *PdfSignature ;_bddcd *_bbe .PdfObjectDictionary ;};func _gceag (_cedeeg *_bbe .PdfObjectDictionary )(*PdfShadingType6 ,error ){_gbead :=PdfShadingType6 {};_dabe :=_cedeeg .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _dabe ==nil {_gcf .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_fecbg ,_ceff :=_dabe .(*_bbe .PdfObjectInteger );if !_ceff {_gcf .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dabe );
return nil ,_bbe .ErrTypeError ;};_gbead .BitsPerCoordinate =_fecbg ;_dabe =_cedeeg .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _dabe ==nil {_gcf .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_fecbg ,_ceff =_dabe .(*_bbe .PdfObjectInteger );if !_ceff {_gcf .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_dabe );
return nil ,_bbe .ErrTypeError ;};_gbead .BitsPerComponent =_fecbg ;_dabe =_cedeeg .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _dabe ==nil {_gcf .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_fecbg ,_ceff =_dabe .(*_bbe .PdfObjectInteger );if !_ceff {_gcf .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_dabe );
return nil ,_bbe .ErrTypeError ;};_gbead .BitsPerComponent =_fecbg ;_dabe =_cedeeg .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _dabe ==nil {_gcf .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_edcb ,_ceff :=_dabe .(*_bbe .PdfObjectArray );if !_ceff {_gcf .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dabe );
return nil ,_bbe .ErrTypeError ;};_gbead .Decode =_edcb ;if _cfaa :=_cedeeg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_cfaa !=nil {_gbead .Function =[]PdfFunction {};if _aabbd ,_aeefd :=_cfaa .(*_bbe .PdfObjectArray );_aeefd {for _ ,_ccfa :=range _aabbd .Elements (){_bdcfd ,_gacce :=_bdce (_ccfa );
if _gacce !=nil {_gcf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gacce );return nil ,_gacce ;};_gbead .Function =append (_gbead .Function ,_bdcfd );
};}else {_bgdcb ,_cggea :=_bdce (_cfaa );if _cggea !=nil {_gcf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cggea );return nil ,_cggea ;
};_gbead .Function =append (_gbead .Function ,_bgdcb );};};return &_gbead ,nil ;};type pdfCIDFontType2 struct{fontCommon ;_cbcca *_bbe .PdfIndirectObject ;_efeaa _ff .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_bbe .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _bbe .PdfObject ;W _bbe .PdfObject ;DW2 _bbe .PdfObject ;W2 _bbe .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _bbe .PdfObject ;_bdcd map[_ff .CharCode ]float64 ;_agecf float64 ;_bggb map[rune ]int ;};

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_bbcgf *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _dcbdg []*PdfOutlineTreeNode ;var _ageef []string ;var _gbbac func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_gbbac =func (_agfec *PdfOutlineTreeNode ,_cced *[]*PdfOutlineTreeNode ,_fbdg *[]string ,_cagff int ){if _agfec ==nil {return ;
};if _agfec ._ebbdf ==nil {_gcf .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_bcac ,_adgcc :=_agfec ._ebbdf .(*PdfOutlineItem );if _adgcc {*_cced =append (*_cced ,&_bcac .PdfOutlineTreeNode );
_eaafg :=_df .Repeat ("\u0020",_cagff *2)+_bcac .Title .Decoded ();*_fbdg =append (*_fbdg ,_eaafg );};if _agfec .First !=nil {_fdgb :=_df .Repeat ("\u0020",_cagff *2)+"\u002b";*_fbdg =append (*_fbdg ,_fdgb );_gbbac (_agfec .First ,_cced ,_fbdg ,_cagff +1);
};if _adgcc &&_bcac .Next !=nil {_gbbac (_bcac .Next ,_cced ,_fbdg ,_cagff );};};_gbbac (_bbcgf ._adeab ,&_dcbdg ,&_ageef ,0);return _dcbdg ,_ageef ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_cfbb *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_bbe .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_cc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cafea ,_dafd :=_bbe .GetNumbersAsFloat (objects );
if _dafd !=nil {return nil ,_dafd ;};return _cfbb .ColorFromFloats (_cafea );};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_dcfgf *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _dcfgf .Alternate ==nil {_gcf .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _dcfgf .N ==1{_gcf .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_ffedb :=NewPdfColorspaceDeviceGray ();return _ffedb .ColorToRGB (color );}else if _dcfgf .N ==3{_gcf .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return color ,nil ;}else if _dcfgf .N ==4{_gcf .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_ddedg :=NewPdfColorspaceDeviceCMYK ();return _ddedg .ColorToRGB (color );}else {return nil ,_cc .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_gcf .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_dcfgf );
return _dcfgf .Alternate .ColorToRGB (color );};

// GetNumComponents returns the number of color components.
func (_ebcc *PdfColorspaceICCBased )GetNumComponents ()int {return _ebcc .N };

// ColorFromFloats returns a new PdfColor based on input color components.
func (_aegd *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_aegd .GetNumComponents (){return nil ,_cc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gbb ,_dcd :=_aegd .TintTransform .Evaluate (vals );
if _dcd !=nil {return nil ,_dcd ;};_ddfe ,_dcd :=_aegd .AlternateSpace .ColorFromFloats (_gbb );if _dcd !=nil {return nil ,_dcd ;};return _ddfe ,nil ;};

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_dceg *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _dceg .baseFields ()._abdgdb !=nil {return _dceg .baseFields ()._abdgdb ;};if _ddbcg :=_dceg ._afag .getFontDescriptor ();_ddbcg !=nil {return _ddbcg ;};_gcf .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_dceg );
return nil ;};func (_bca *PdfReader )newPdfAnnotationSquigglyFromDict (_eecb *_bbe .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_bbed :=PdfAnnotationSquiggly {};_ebeg ,_acfe :=_bca .newPdfAnnotationMarkupFromDict (_eecb );if _acfe !=nil {return nil ,_acfe ;
};_bbed .PdfAnnotationMarkup =_ebeg ;_bbed .QuadPoints =_eecb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_bbed ,nil ;};

// SetDecode sets the decode image float slice.
func (_ddde *Image )SetDecode (decode []float64 ){_ddde ._eacbf =decode };

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_begd *PdfField )SetContext (ctx PdfModel ){_begd ._dabg =ctx };

// A returns the value of the A component of the color.
func (_bbbg *PdfColorLab )A ()float64 {return _bbbg [1]};

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _bbe .PdfObject ;IsMap _bbe .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_afab *PdfAnnotationSound )ToPdfObject ()_bbe .PdfObject {_afab .PdfAnnotation .ToPdfObject ();_eab :=_afab ._dbg ;_dfag :=_eab .PdfObject .(*_bbe .PdfObjectDictionary );_afab .PdfAnnotationMarkup .appendToPdfDictionary (_dfag );_dfag .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbe .MakeName ("\u0053\u006f\u0075n\u0064"));
_dfag .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_afab .Sound );_dfag .SetIfNotNil ("\u004e\u0061\u006d\u0065",_afab .Name );return _eab ;};

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_edbeb *PdfPageResources )GetXObjectFormByName (keyName _bbe .PdfObjectName )(*XObjectForm ,error ){_gfccg ,_cbcea :=_edbeb .GetXObjectByName (keyName );if _gfccg ==nil {return nil ,nil ;};if _cbcea !=XObjectTypeForm {return nil ,_cc .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");
};_edea ,_dgdfb :=NewXObjectFormFromStream (_gfccg );if _dgdfb !=nil {return nil ,_dgdfb ;};return _edea ,nil ;};

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_ebaff *PdfPageResources )GetContainingPdfObject ()_bbe .PdfObject {return _ebaff ._bgaca };

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;

// GetDSS gets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_bba *PdfAppender )GetDSS ()(_faffg *DSS ){return _bba ._cagb };

// Subtype returns the font's "Subtype" field.
func (_bgca *PdfFont )Subtype ()string {_fcgef :=_bgca .baseFields ()._cafed ;if _baddd ,_fbab :=_bgca ._afag .(*pdfFontType0 );_fbab {_fcgef =_fcgef +"\u003a"+_baddd .DescendantFont .Subtype ();};return _fcgef ;};func _cbcf (_fbeb *_bbe .PdfObjectDictionary )bool {for _ ,_cgfd :=range _fbeb .Keys (){if _ ,_gadec :=_aefec [_cgfd .String ()];
_gadec {return true ;};};return false ;};

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_bfgga *PdfReader )Decrypt (password []byte )(bool ,error ){_beaag ,_ddcc :=_bfgga ._ffgcd .Decrypt (password );if _ddcc !=nil {return false ,_ddcc ;};if !_beaag {return false ,nil ;};_ddcc =_bfgga .loadStructure ();if _ddcc !=nil {_gcf .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_ddcc );
return false ,_ddcc ;};return true ,nil ;};func (_aacad fontCommon )fontFlags ()int {if _aacad ._abdgdb ==nil {return 0;};return _aacad ._abdgdb ._abgac ;};

// ToPdfObject returns the PDF representation of the page resources.
func (_eeab *PdfPageResources )ToPdfObject ()_bbe .PdfObject {_eeec :=_eeab ._bgaca ;_eeec .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_eeab .ExtGState );if _eeab ._efcde !=nil {_eeab .ColorSpace =_eeab ._efcde .ToPdfObject ();};_eeec .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_eeab .ColorSpace );
_eeec .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_eeab .Pattern );_eeec .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_eeab .Shading );_eeec .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_eeab .XObject );_eeec .SetIfNotNil ("\u0046\u006f\u006e\u0074",_eeab .Font );
_eeec .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_eeab .ProcSet );_eeec .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_eeab .Properties );return _eeec ;};func _cdce (_cebg _bbe .PdfObject )(*PdfColorspaceCalRGB ,error ){_dgdb :=NewPdfColorspaceCalRGB ();
if _cbgg ,_cgee :=_cebg .(*_bbe .PdfIndirectObject );_cgee {_dgdb ._geaf =_cbgg ;};_cebg =_bbe .TraceToDirectObject (_cebg );_aggc ,_fbfe :=_cebg .(*_bbe .PdfObjectArray );if !_fbfe {return nil ,_g .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if _aggc .Len ()!=2{return nil ,_g .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");};_cebg =_bbe .TraceToDirectObject (_aggc .Get (0));_aabgg ,_fbfe :=_cebg .(*_bbe .PdfObjectName );
if !_fbfe {return nil ,_g .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};if *_aabgg !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_g .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
};_cebg =_bbe .TraceToDirectObject (_aggc .Get (1));_adfe ,_fbfe :=_cebg .(*_bbe .PdfObjectDictionary );if !_fbfe {return nil ,_g .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");
};_cebg =_adfe .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_cebg =_bbe .TraceToDirectObject (_cebg );_bgf ,_fbfe :=_cebg .(*_bbe .PdfObjectArray );if !_fbfe {return nil ,_g .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");
};if _bgf .Len ()!=3{return nil ,_g .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_bbfb ,_bgda :=_bgf .GetAsFloat64Slice ();
if _bgda !=nil {return nil ,_bgda ;};_dgdb .WhitePoint =_bbfb ;_cebg =_adfe .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _cebg !=nil {_cebg =_bbe .TraceToDirectObject (_cebg );_ecdc ,_cdgc :=_cebg .(*_bbe .PdfObjectArray );if !_cdgc {return nil ,_g .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");
};if _ecdc .Len ()!=3{return nil ,_g .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_bccf ,_daad :=_ecdc .GetAsFloat64Slice ();
if _daad !=nil {return nil ,_daad ;};_dgdb .BlackPoint =_bccf ;};_cebg =_adfe .Get ("\u0047\u0061\u006dm\u0061");if _cebg !=nil {_cebg =_bbe .TraceToDirectObject (_cebg );_cgbc ,_acde :=_cebg .(*_bbe .PdfObjectArray );if !_acde {return nil ,_g .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");
};if _cgbc .Len ()!=3{return nil ,_g .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");};_aefe ,_baddb :=_cgbc .GetAsFloat64Slice ();if _baddb !=nil {return nil ,_baddb ;
};_dgdb .Gamma =_aefe ;};_cebg =_adfe .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _cebg !=nil {_cebg =_bbe .TraceToDirectObject (_cebg );_fbad ,_fbea :=_cebg .(*_bbe .PdfObjectArray );if !_fbea {return nil ,_g .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");
};if _fbad .Len ()!=9{_gcf .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_fbad .String ());return nil ,_g .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");
};_cdbe ,_gfee :=_fbad .GetAsFloat64Slice ();if _gfee !=nil {return nil ,_gfee ;};_dgdb .Matrix =_cdbe ;};return _dgdb ,nil ;};

// HasFontByName checks if has font resource by name.
func (_bdab *PdfPage )HasFontByName (name _bbe .PdfObjectName )bool {_adefc ,_eedac :=_bdab .Resources .Font .(*_bbe .PdfObjectDictionary );if !_eedac {return false ;};if _adfaa :=_adefc .Get (name );_adfaa !=nil {return true ;};return false ;};

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_def :=NewPdfAction ();_dbd :=&PdfActionThread {};_dbd .PdfAction =_def ;_def .SetContext (_dbd );return _dbd ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_ggdaa *PdfOutlineItem )ToPdfObject ()_bbe .PdfObject {_bbegaa :=_ggdaa ._ebaeg ;_ccabf :=_bbegaa .PdfObject .(*_bbe .PdfObjectDictionary );_ccabf .Set ("\u0054\u0069\u0074l\u0065",_ggdaa .Title );if _ggdaa .A !=nil {_ccabf .Set ("\u0041",_ggdaa .A );
};if _cgcf :=_ccabf .Get ("\u0053\u0045");_cgcf !=nil {_ccabf .Remove ("\u0053\u0045");};if _ggdaa .C !=nil {_ccabf .Set ("\u0043",_ggdaa .C );};if _ggdaa .Dest !=nil {_ccabf .Set ("\u0044\u0065\u0073\u0074",_ggdaa .Dest );};if _ggdaa .F !=nil {_ccabf .Set ("\u0046",_ggdaa .F );
};if _ggdaa .Count !=nil {_ccabf .Set ("\u0043\u006f\u0075n\u0074",_bbe .MakeInteger (*_ggdaa .Count ));};if _ggdaa .Next !=nil {_ccabf .Set ("\u004e\u0065\u0078\u0074",_ggdaa .Next .ToPdfObject ());};if _ggdaa .First !=nil {_ccabf .Set ("\u0046\u0069\u0072s\u0074",_ggdaa .First .ToPdfObject ());
};if _ggdaa .Prev !=nil {_ccabf .Set ("\u0050\u0072\u0065\u0076",_ggdaa .Prev .GetContext ().GetContainingPdfObject ());};if _ggdaa .Last !=nil {_ccabf .Set ("\u004c\u0061\u0073\u0074",_ggdaa .Last .GetContext ().GetContainingPdfObject ());};if _ggdaa .Parent !=nil {_ccabf .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_ggdaa .Parent .GetContext ().GetContainingPdfObject ());
};return _bbegaa ;};func (_cgceb *PdfFunctionType0 )processSamples ()error {_bdga :=_dfc .ResampleBytes (_cgceb ._cgeegg ,_cgceb .BitsPerSample );_cgceb ._caedf =_bdga ;return nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_fbdb *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_cc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_adab :=vals [0];if _adab < 0.0||_adab > 1.0{_gcf .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_adab );
return nil ,ErrColorOutOfRange ;};_fabd :=vals [1];if _fabd < 0.0||_fabd > 1.0{_gcf .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fabd );return nil ,ErrColorOutOfRange ;
};_gfef :=vals [2];if _gfef < 0.0||_gfef > 1.0{_gcf .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_gfef );return nil ,ErrColorOutOfRange ;};_gdgb :=NewPdfColorCalRGB (_adab ,_fabd ,_gfef );
return _gdgb ,nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_baagb pdfFontType0 )GetCharMetrics (code _ff .CharCode )(_bfg .CharMetrics ,bool ){if _baagb .DescendantFont ==nil {_gcf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_baagb );
return _bfg .CharMetrics {},false ;};return _baagb .DescendantFont .GetCharMetrics (code );};

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_gdbcg *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _bbe .GetNumberAsFloat (_gdbcg .CapHeight );};

// GetContainingPdfObject gets the primitive used to parse the color space.
func (_beef *PdfColorspaceICCBased )GetContainingPdfObject ()_bbe .PdfObject {return _beef ._dfac };

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_bbfg *Outline )Insert (index uint ,item *OutlineItem ){_cebgc :=uint (len (_bbfg .Entries ));if index > _cebgc {index =_cebgc ;};_bbfg .Entries =append (_bbfg .Entries [:index ],append ([]*OutlineItem {item },_bbfg .Entries [index :]...)...);};

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_bbe .PdfObjectArray ;Domain *_bbe .PdfObjectArray ;Function []PdfFunction ;Extend *_bbe .PdfObjectArray ;};var _adaa =map[string ]struct{}{"\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061c\u0052\u006f\u006da\u006e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061\u0063\u0045\u0078\u0070\u0065\u0072\u0074\u0045\u006e\u0063o\u0064\u0069\u006e\u0067":{},"\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{}};


// WatermarkImageOptions contains options for configuring the watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;};

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{

// IsApplicable checks if a given signature dictionary `sig` is applicable for the signature handler.
// For example a signature of type `adbe.pkcs7.detached` might not fit for a rsa.sha1 handler.
IsApplicable (_ebebd *PdfSignature )bool ;

// Validate validates a PDF signature against a given digest (hash) such as that determined
// for an input file. Returns validation results.
Validate (_ecfge *PdfSignature ,_dfebd Hasher )(SignatureValidationResult ,error );

// InitSignature prepares the signature dictionary for signing. This involves setting all
// necessary fields, and also allocating sufficient space to the Contents so that the
// finalized signature can be inserted once the hash is calculated.
InitSignature (_acae *PdfSignature )error ;

// NewDigest creates a new digest/hasher based on the signature dictionary and handler.
NewDigest (_dbgda *PdfSignature )(Hasher ,error );

// Sign receives the hash `digest` (for example hash of an input file), and signs based
// on the signature dictionary `sig` and applies the signature data to the signature
// dictionary Contents field.
Sign (_dfccc *PdfSignature ,_cfaca Hasher )error ;};

// String returns the name of the colorspace (DeviceN).
func (_cecbd *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _bbe .PdfObject ;MK _bbe .PdfObject ;A _bbe .PdfObject ;AA _bbe .PdfObject ;BS _bbe .PdfObject ;Parent _bbe .PdfObject ;_abdd *PdfField ;_fdbg bool ;};

// ToPdfObject implements interface PdfModel.
func (_dbb *PdfAnnotationProjection )ToPdfObject ()_bbe .PdfObject {_dbb .PdfAnnotation .ToPdfObject ();_fad :=_dbb ._dbg ;_gadb :=_fad .PdfObject .(*_bbe .PdfObjectDictionary );_dbb .PdfAnnotationMarkup .appendToPdfDictionary (_gadb );return _fad ;};

// SignatureHandlerDocMDPParams describe the specific parameters for the SignatureHandlerEx
// These parameters describe how to check the difference between revisions.
// Revisions of the document get from the PdfParser.
type SignatureHandlerDocMDPParams struct{Parser *_bbe .PdfParser ;DiffPolicy _gfg .DiffPolicy ;};

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_beabb :=PdfColorLab {l ,a ,b };return &_beabb };

// GetNumPages returns the number of pages in the document.
func (_dccfd *PdfReader )GetNumPages ()(int ,error ){if _dccfd ._ffgcd .GetCrypter ()!=nil &&!_dccfd ._ffgcd .IsAuthenticated (){return 0,_g .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};return len (_dccfd ._cfgf ),nil ;};

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_facg _geb .ReadSeeker ;_deff *_bbe .PdfParser ;_aeaa *PdfReader ;Reader *PdfReader ;_gada []*PdfPage ;_bggf *PdfAcroForm ;_cagb *DSS ;_fgdg *Permissions ;_bafb _bbe .XrefTable ;_decd int64 ;_acbd int ;_cada []_bbe .PdfObject ;_ggee map[_bbe .PdfObject ]struct{};
_aggfg map[_bbe .PdfObject ]int64 ;_gdg map[_bbe .PdfObject ]struct{};_adbcd map[_bbe .PdfObject ]struct{};_egg int64 ;_fbedc bool ;_adbca string ;_beea *EncryptOptions ;_dfgb *PdfInfo ;};

// Size returns the width and the height of the page. The method reports
// the page dimensions as displayed by a PDF viewer (i.e. page rotation is
// taken into account).
func (_baabd *PdfPage )Size ()(float64 ,float64 ,error ){_fddgg ,_ebeac :=_baabd .GetMediaBox ();if _ebeac !=nil {return 0,0,_ebeac ;};_afafg ,_cabd :=_fddgg .Width (),_fddgg .Height ();_gdcdc ,_ebeac :=_baabd .GetRotate ();if _ebeac !=nil {_gcf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0025\u0073\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0061\u006e\u0064\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0072\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u000a",_ebeac .Error ());
};if _degde :=_gdcdc ;_degde %360!=0&&_degde %90==0{if _fbga :=(360+_degde %360)%360;_fbga ==90||_fbga ==270{_afafg ,_cabd =_cabd ,_afafg ;};};return _afafg ,_cabd ,nil ;};

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_baae :=NewPdfAnnotation ();_bbg :=&PdfAnnotationWidget {};_bbg .PdfAnnotation =_baae ;_baae .SetContext (_bbg );return _bbg ;};

// SetContext sets the sub annotation (context).
func (_gdda *PdfAnnotation )SetContext (ctx PdfModel ){_gdda ._ccfb =ctx };func _ebgfc (_dge _bbe .PdfObject )(*PdfBorderStyle ,error ){_cbcd :=&PdfBorderStyle {};_cbcd ._cafg =_dge ;var _ddag *_bbe .PdfObjectDictionary ;_dge =_bbe .TraceToDirectObject (_dge );
_ddag ,_cccd :=_dge .(*_bbe .PdfObjectDictionary );if !_cccd {return nil ,_cc .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};if _ddea :=_ddag .Get ("\u0054\u0079\u0070\u0065");_ddea !=nil {_abad ,_dafc :=_ddea .(*_bbe .PdfObjectName );
if !_dafc {_gcf .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_ddea );
}else {if *_abad !="\u0042\u006f\u0072\u0064\u0065\u0072"{_gcf .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_abad );};};};if _cfdf :=_ddag .Get ("\u0057");
_cfdf !=nil {_faaa ,_cfee :=_bbe .GetNumberAsFloat (_cfdf );if _cfee !=nil {_gcf .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_cfee );return nil ,_cfee ;};_cbcd .W =&_faaa ;
};if _acadd :=_ddag .Get ("\u0053");_acadd !=nil {_ffcf ,_bgbe :=_acadd .(*_bbe .PdfObjectName );if !_bgbe {return nil ,_cc .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};var _ggca BorderStyle ;switch *_ffcf {case "\u0053":_ggca =BorderStyleSolid ;case "\u0044":_ggca =BorderStyleDashed ;case "\u0042":_ggca =BorderStyleBeveled ;case "\u0049":_ggca =BorderStyleInset ;case "\u0055":_ggca =BorderStyleUnderline ;default:_gcf .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_ffcf );
return nil ,_cc .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_cbcd .S =&_ggca ;};if _fece :=_ddag .Get ("\u0044");_fece !=nil {_ddeb ,_gced :=_fece .(*_bbe .PdfObjectArray );
if !_gced {_gcf .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_fece );return nil ,_cc .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");
};_aced ,_dba :=_ddeb .ToIntegerArray ();if _dba !=nil {_gcf .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_dba );
return nil ,_dba ;};_cbcd .D =&_aced ;};return _cbcd ,nil ;};

// NewPdfColorPatternType2 returns an empty color shading pattern type 2 (Axial).
func NewPdfColorPatternType2 ()*PdfColorPatternType2 {_bdde :=&PdfColorPatternType2 {};return _bdde };

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_bdeb *PdfFieldText )ToPdfObject ()_bbe .PdfObject {_bdeb .PdfField .ToPdfObject ();_dddd :=_bdeb ._acga ;_dcdb :=_dddd .PdfObject .(*_bbe .PdfObjectDictionary );_dcdb .Set ("\u0046\u0054",_bbe .MakeName ("\u0054\u0078"));if _bdeb .DA !=nil {_dcdb .Set ("\u0044\u0041",_bdeb .DA );
};if _bdeb .Q !=nil {_dcdb .Set ("\u0051",_bdeb .Q );};if _bdeb .DS !=nil {_dcdb .Set ("\u0044\u0053",_bdeb .DS );};if _bdeb .RV !=nil {_dcdb .Set ("\u0052\u0056",_bdeb .RV );};if _bdeb .MaxLen !=nil {_dcdb .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_bdeb .MaxLen );
};return _dddd ;};

// ToPdfObject implements interface PdfModel.
func (_befb *PdfAnnotationText )ToPdfObject ()_bbe .PdfObject {_befb .PdfAnnotation .ToPdfObject ();_ffbg :=_befb ._dbg ;_eagb :=_ffbg .PdfObject .(*_bbe .PdfObjectDictionary );if _befb .PdfAnnotationMarkup !=nil {_befb .PdfAnnotationMarkup .appendToPdfDictionary (_eagb );
};_eagb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbe .MakeName ("\u0054\u0065\u0078\u0074"));_eagb .SetIfNotNil ("\u004f\u0070\u0065\u006e",_befb .Open );_eagb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_befb .Name );_eagb .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_befb .State );
_eagb .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_befb .StateModel );return _ffbg ;};

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_dbee *pdfCIDFontType0 )ToPdfObject ()_bbe .PdfObject {return _bbe .MakeNull ()};func (_abddbe *PdfSignature )extractChainFromPKCS7 ()([]*_gg .Certificate ,error ){_cdgac ,_eefa :=_gee .Parse (_abddbe .Contents .Bytes ());if _eefa !=nil {return nil ,_eefa ;
};return _cdgac .Certificates ,nil ;};func (_cccac *Image )resampleLowBits (_gfceb []uint32 ){_ebaca :=_gb .BytesPerLine (int (_cccac .Width ),int (_cccac .BitsPerComponent ),_cccac .ColorComponents );_fffd :=make ([]byte ,_cccac .ColorComponents *_ebaca *int (_cccac .Height ));
_afcdb :=int (_cccac .BitsPerComponent )*_cccac .ColorComponents *int (_cccac .Width );_bbdgd :=uint8 (8);var (_gagec ,_ceggc int ;_cdgaa uint32 ;);for _efgc :=0;_efgc < int (_cccac .Height );_efgc ++{_ceggc =_efgc *_ebaca ;for _cggfd :=0;_cggfd < _afcdb ;
_cggfd ++{_cdgaa =_gfceb [_gagec ];_bbdgd -=uint8 (_cccac .BitsPerComponent );_fffd [_ceggc ]|=byte (_cdgaa )<<_bbdgd ;if _bbdgd ==0{_bbdgd =8;_ceggc ++;};_gagec ++;};};_cccac .Data =_fffd ;};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_bfecg *_bbe .PdfIndirectObject ;};func (_feff *PdfWriter )copyObject (_cffbc _bbe .PdfObject ,_ebaa map[_bbe .PdfObject ]_bbe .PdfObject ,_bageb map[_bbe .PdfObject ]struct{},_bcefc bool )_bbe .PdfObject {_fdcag :=!_feff ._degbe &&_bageb !=nil ;
if _cceff ,_bafcbc :=_ebaa [_cffbc ];_bafcbc {if _fdcag &&!_bcefc {delete (_bageb ,_cffbc );};return _cceff ;};if _cffbc ==nil {_cadgf :=_bbe .MakeNull ();return _cadgf ;};_gbaad :=_cffbc ;switch _gfgag :=_cffbc .(type ){case *_bbe .PdfObjectArray :_gdccg :=_bbe .MakeArray ();
_gbaad =_gdccg ;_ebaa [_cffbc ]=_gbaad ;for _ ,_gcbcc :=range _gfgag .Elements (){_gdccg .Append (_feff .copyObject (_gcbcc ,_ebaa ,_bageb ,_bcefc ));};case *_bbe .PdfObjectStreams :_gbegd :=&_bbe .PdfObjectStreams {PdfObjectReference :_gfgag .PdfObjectReference };
_gbaad =_gbegd ;_ebaa [_cffbc ]=_gbaad ;for _ ,_cdbgbf :=range _gfgag .Elements (){_gbegd .Append (_feff .copyObject (_cdbgbf ,_ebaa ,_bageb ,_bcefc ));};case *_bbe .PdfObjectStream :_dafa :=&_bbe .PdfObjectStream {Stream :_gfgag .Stream ,PdfObjectReference :_gfgag .PdfObjectReference };
_gbaad =_dafa ;_ebaa [_cffbc ]=_gbaad ;_dafa .PdfObjectDictionary =_feff .copyObject (_gfgag .PdfObjectDictionary ,_ebaa ,_bageb ,_bcefc ).(*_bbe .PdfObjectDictionary );case *_bbe .PdfObjectDictionary :var _fecfgd bool ;if _fdcag &&!_bcefc {if _dfdde ,_ :=_bbe .GetNameVal (_gfgag .Get ("\u0054\u0079\u0070\u0065"));
_dfdde =="\u0050\u0061\u0067\u0065"{_ ,_bbffb :=_feff ._edfgb [_gfgag ];_bcefc =!_bbffb ;_fecfgd =_bcefc ;};};_gafee :=_bbe .MakeDict ();_gbaad =_gafee ;_ebaa [_cffbc ]=_gbaad ;for _ ,_gbcgg :=range _gfgag .Keys (){_gafee .Set (_gbcgg ,_feff .copyObject (_gfgag .Get (_gbcgg ),_ebaa ,_bageb ,_bcefc ));
};if _fecfgd {_gbaad =_bbe .MakeNull ();_bcefc =false ;};case *_bbe .PdfIndirectObject :_dbdae :=&_bbe .PdfIndirectObject {PdfObjectReference :_gfgag .PdfObjectReference };_gbaad =_dbdae ;_ebaa [_cffbc ]=_gbaad ;_dbdae .PdfObject =_feff .copyObject (_gfgag .PdfObject ,_ebaa ,_bageb ,_bcefc );
case *_bbe .PdfObjectString :_bdffe :=*_gfgag ;_gbaad =&_bdffe ;_ebaa [_cffbc ]=_gbaad ;case *_bbe .PdfObjectName :_eegg :=*_gfgag ;_gbaad =&_eegg ;_ebaa [_cffbc ]=_gbaad ;case *_bbe .PdfObjectNull :_gbaad =_bbe .MakeNull ();_ebaa [_cffbc ]=_gbaad ;case *_bbe .PdfObjectInteger :_edcda :=*_gfgag ;
_gbaad =&_edcda ;_ebaa [_cffbc ]=_gbaad ;case *_bbe .PdfObjectReference :_cegcc :=*_gfgag ;_gbaad =&_cegcc ;_ebaa [_cffbc ]=_gbaad ;case *_bbe .PdfObjectFloat :_abacde :=*_gfgag ;_gbaad =&_abacde ;_ebaa [_cffbc ]=_gbaad ;case *_bbe .PdfObjectBool :_effgfe :=*_gfgag ;
_gbaad =&_effgfe ;_ebaa [_cffbc ]=_gbaad ;case *pdfSignDictionary :_cacbe :=&pdfSignDictionary {PdfObjectDictionary :_bbe .MakeDict (),_ddbegb :_gfgag ._ddbegb ,_fbbfb :_gfgag ._fbbfb };_gbaad =_cacbe ;_ebaa [_cffbc ]=_gbaad ;for _ ,_gegbde :=range _gfgag .Keys (){_cacbe .Set (_gegbde ,_feff .copyObject (_gfgag .Get (_gegbde ),_ebaa ,_bageb ,_bcefc ));
};default:_gcf .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_cffbc );
};if _fdcag &&_bcefc {_bageb [_cffbc ]=struct{}{};};return _gbaad ;};

// ToInteger convert to an integer format.
func (_gffb *PdfColorLab )ToInteger (bits int )[3]uint32 {_dcfg :=_ab .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_dcfg *_gffb .L ()),uint32 (_dcfg *_gffb .A ()),uint32 (_dcfg *_gffb .B ())};};

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _bbe .PdfObject ;LE _bbe .PdfObject ;BS _bbe .PdfObject ;IC _bbe .PdfObject ;BE _bbe .PdfObject ;IT _bbe .PdfObject ;Measure _bbe .PdfObject ;};func (_cdbbd *PdfReader )newPdfAnnotationPopupFromDict (_fgc *_bbe .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_egc :=PdfAnnotationPopup {};
_egc .Parent =_fgc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_egc .Open =_fgc .Get ("\u004f\u0070\u0065\u006e");return &_egc ,nil ;};

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_bbe .PdfObjectArray ;TI *_bbe .PdfObjectInteger ;I *_bbe .PdfObjectArray ;};

// AddExtGState adds a graphics state to the XObject resources.
func (_cfade *PdfPage )AddExtGState (name _bbe .PdfObjectName ,egs *_bbe .PdfObjectDictionary )error {if _cfade .Resources ==nil {_cfade .Resources =NewPdfPageResources ();};if _cfade .Resources .ExtGState ==nil {_cfade .Resources .ExtGState =_bbe .MakeDict ();
};_fcgf ,_fcbea :=_bbe .TraceToDirectObject (_cfade .Resources .ExtGState ).(*_bbe .PdfObjectDictionary );if !_fcbea {_gcf .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_bbe .TraceToDirectObject (_cfade .Resources .ExtGState ));
return _cc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fcgf .Set (name ,egs );return nil ;};

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_cda :=NewPdfAction ();_ee :=&PdfActionImportData {};_ee .PdfAction =_cda ;_cda .SetContext (_ee );return _ee ;};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_aaccg *PdfAcroForm )ToPdfObject ()_bbe .PdfObject {_adgf :=_aaccg ._agbef ;_fefdd :=_adgf .PdfObject .(*_bbe .PdfObjectDictionary );if _aaccg .Fields !=nil {_dbcee :=_bbe .PdfObjectArray {};for _ ,_dfdbb :=range *_aaccg .Fields {_bbab :=_dfdbb .GetContext ();
if _bbab !=nil {_dbcee .Append (_bbab .ToPdfObject ());}else {_dbcee .Append (_dfdbb .ToPdfObject ());};};_fefdd .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_dbcee );};if _aaccg .NeedAppearances !=nil {_fefdd .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_aaccg .NeedAppearances );
}else {if _adaba :=_fefdd .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");_adaba !=nil {_fefdd .Remove ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");};};if _aaccg .SigFlags !=nil {_fefdd .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_aaccg .SigFlags );
};if _aaccg .CO !=nil {_fefdd .Set ("\u0043\u004f",_aaccg .CO );};if _aaccg .DR !=nil {_fefdd .Set ("\u0044\u0052",_aaccg .DR .ToPdfObject ());};if _aaccg .DA !=nil {_fefdd .Set ("\u0044\u0041",_aaccg .DA );};if _aaccg .Q !=nil {_fefdd .Set ("\u0051",_aaccg .Q );
};if _aaccg .XFA !=nil {_fefdd .Set ("\u0058\u0046\u0041",_aaccg .XFA );};if _aaccg .ADBEEchoSign !=nil {_fefdd .Set ("\u0041\u0044\u0042\u0045\u005f\u0045\u0063\u0068\u006f\u0053\u0069\u0067\u006e",_aaccg .ADBEEchoSign );};return _adgf ;};func _aega (_gbcdd _bbe .PdfObject )(*PdfColorspaceDeviceN ,error ){_agdd :=NewPdfColorspaceDeviceN ();
if _fbcb ,_adag :=_gbcdd .(*_bbe .PdfIndirectObject );_adag {_agdd ._ggb =_fbcb ;};_gbcdd =_bbe .TraceToDirectObject (_gbcdd );_acgf ,_fage :=_gbcdd .(*_bbe .PdfObjectArray );if !_fage {return nil ,_g .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");
};if _acgf .Len ()!=4&&_acgf .Len ()!=5{return nil ,_g .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_gbcdd =_acgf .Get (0);
_fabdb ,_fage :=_gbcdd .(*_bbe .PdfObjectName );if !_fage {return nil ,_g .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_fabdb !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_g .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_gbcdd =_acgf .Get (1);
_gbcdd =_bbe .TraceToDirectObject (_gbcdd );_fcde ,_fage :=_gbcdd .(*_bbe .PdfObjectArray );if !_fage {return nil ,_g .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};_agdd .ColorantNames =_fcde ;_gbcdd =_acgf .Get (2);_dbga ,_dagf :=NewPdfColorspaceFromPdfObject (_gbcdd );if _dagf !=nil {return nil ,_dagf ;};_agdd .AlternateSpace =_dbga ;_ebeb ,_dagf :=_bdce (_acgf .Get (3));if _dagf !=nil {return nil ,_dagf ;};_agdd .TintTransform =_ebeb ;
if _acgf .Len ()==5{_deed ,_efde :=_dcac (_acgf .Get (4));if _efde !=nil {return nil ,_efde ;};_agdd .Attributes =_deed ;};return _agdd ,nil ;};

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_gea :=NewPdfAnnotation ();_ade :=&PdfAnnotationPopup {};_ade .PdfAnnotation =_gea ;_gea .SetContext (_ade );return _ade ;};

// SetOpenAction sets the OpenAction in the PDF catalog.
// The value shall be either an array defining a destination (12.3.2 "Destinations" PDF32000_2008),
// or an action dictionary representing an action (12.6 "Actions" PDF32000_2008).
func (_daeeg *PdfWriter )SetOpenAction (dest _bbe .PdfObject )error {if dest ==nil ||_bbe .IsNullObject (dest ){return nil ;};_daeeg ._bgdee .Set ("\u004f\u0070\u0065\u006e\u0041\u0063\u0074\u0069\u006f\u006e",dest );return _daeeg .addObjects (dest );};
func (_efgf *PdfReader )newPdfAnnotationScreenFromDict (_bada *_bbe .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_fdbb :=PdfAnnotationScreen {};_fdbb .T =_bada .Get ("\u0054");_fdbb .MK =_bada .Get ("\u004d\u004b");_fdbb .A =_bada .Get ("\u0041");
_fdbb .AA =_bada .Get ("\u0041\u0041");return &_fdbb ,nil ;};

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_bgeeg *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_bbe .PdfObjectInteger ;BitsPerComponent *_bbe .PdfObjectInteger ;BitsPerFlag *_bbe .PdfObjectInteger ;Decode *_bbe .PdfObjectArray ;Function []PdfFunction ;};

// NewPdfColorPatternType3 returns an empty color shading pattern type 3 (Radial).
func NewPdfColorPatternType3 ()*PdfColorPatternType3 {_gacd :=&PdfColorPatternType3 {};return _gacd };var (_cgbb =_a .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");
_cfgc =_a .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");_eefeg =_a .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");
_cadcc ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_bceecf ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_cdgec ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";
);

// ToPdfObject implements interface PdfModel.
func (_bdcbe *PdfAnnotationRichMedia )ToPdfObject ()_bbe .PdfObject {_bdcbe .PdfAnnotation .ToPdfObject ();_abdgd :=_bdcbe ._dbg ;_gdcg :=_abdgd .PdfObject .(*_bbe .PdfObjectDictionary );_gdcg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbe .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));
_gdcg .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_bdcbe .RichMediaSettings );_gdcg .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_bdcbe .RichMediaContent );
return _abdgd ;};

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_badbba *PdfWriter )SetOptimizer (optimizer Optimizer ){_badbba ._aacdbg =optimizer };

// GetPageDict converts the Page to a PDF object dictionary.
func (_dcbea *PdfPage )GetPageDict ()*_bbe .PdfObjectDictionary {_dfdc :=_dcbea ._gbegc ;_dfdc .Clear ();_dfdc .Set ("\u0054\u0079\u0070\u0065",_bbe .MakeName ("\u0050\u0061\u0067\u0065"));_dfdc .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_dcbea .Parent );
if _dcbea .LastModified !=nil {_dfdc .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_dcbea .LastModified .ToPdfObject ());};if _dcbea .Resources !=nil {_dfdc .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_dcbea .Resources .ToPdfObject ());
};if _dcbea .CropBox !=nil {_dfdc .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_dcbea .CropBox .ToPdfObject ());};if _dcbea .MediaBox !=nil {_dfdc .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_dcbea .MediaBox .ToPdfObject ());};if _dcbea .BleedBox !=nil {_dfdc .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_dcbea .BleedBox .ToPdfObject ());
};if _dcbea .TrimBox !=nil {_dfdc .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_dcbea .TrimBox .ToPdfObject ());};if _dcbea .ArtBox !=nil {_dfdc .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_dcbea .ArtBox .ToPdfObject ());};_dfdc .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_dcbea .BoxColorInfo );
_dfdc .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_dcbea .Contents );if _dcbea .Rotate !=nil {_dfdc .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_bbe .MakeInteger (*_dcbea .Rotate ));};_dfdc .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_dcbea .Group );
_dfdc .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_dcbea .Thumb );_dfdc .SetIfNotNil ("\u0042",_dcbea .B );_dfdc .SetIfNotNil ("\u0044\u0075\u0072",_dcbea .Dur );_dfdc .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_dcbea .Trans );_dfdc .SetIfNotNil ("\u0041\u0041",_dcbea .AA );
_dfdc .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_dcbea .Metadata );_dfdc .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_dcbea .PieceInfo );_dfdc .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_dcbea .StructParents );
_dfdc .SetIfNotNil ("\u0049\u0044",_dcbea .ID );_dfdc .SetIfNotNil ("\u0050\u005a",_dcbea .PZ );_dfdc .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_dcbea .SeparationInfo );_dfdc .SetIfNotNil ("\u0054\u0061\u0062\u0073",_dcbea .Tabs );
_dfdc .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_dcbea .TemplateInstantiated );_dfdc .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_dcbea .PresSteps );_dfdc .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_dcbea .UserUnit );
_dfdc .SetIfNotNil ("\u0056\u0050",_dcbea .VP );if _dcbea ._eeeeb !=nil {_bafcf :=_bbe .MakeArray ();for _ ,_gdde :=range _dcbea ._eeeeb {if _ffadaf :=_gdde .GetContext ();_ffadaf !=nil {_bafcf .Append (_ffadaf .ToPdfObject ());}else {_bafcf .Append (_gdde .ToPdfObject ());
};};if _bafcf .Len ()> 0{_dfdc .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_bafcf );};}else if _dcbea .Annots !=nil {_dfdc .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_dcbea .Annots );};return _dfdc ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_eacf *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_cc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ggaf :=vals [0];if _ggaf < 0.0||_ggaf > 1.0{_gcf .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_ggaf );
return nil ,ErrColorOutOfRange ;};_bbac :=vals [1];if _bbac < 0.0||_bbac > 1.0{_gcf .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_ggaf );return nil ,ErrColorOutOfRange ;
};_beab :=vals [2];if _beab < 0.0||_beab > 1.0{_gcf .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_ggaf );return nil ,ErrColorOutOfRange ;};_beead :=NewPdfColorDeviceRGB (_ggaf ,_bbac ,_beab );
return _beead ,nil ;};

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1. Use the ToUnicode CMap if there is one.
//  2. Use the underlying font's encoding.
func (_decde *PdfFont )CharcodesToUnicode (charcodes []_ff .CharCode )[]rune {_cabf ,_ ,_ :=_decde .CharcodesToUnicodeWithStats (charcodes );return _cabf ;};

// ToPdfObject implements interface PdfModel.
func (_bbbd *PdfAnnotationMovie )ToPdfObject ()_bbe .PdfObject {_bbbd .PdfAnnotation .ToPdfObject ();_acgg :=_bbbd ._dbg ;_eabb :=_acgg .PdfObject .(*_bbe .PdfObjectDictionary );_eabb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbe .MakeName ("\u004d\u006f\u0076i\u0065"));
_eabb .SetIfNotNil ("\u0054",_bbbd .T );_eabb .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_bbbd .Movie );_eabb .SetIfNotNil ("\u0041",_bbbd .A );return _acgg ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_fbac *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_cc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dcfgb :=vals [0];_gfaa :=[]float64 {_dcfgb };_cefb ,_cdaea :=_fbac .TintTransform .Evaluate (_gfaa );
if _cdaea !=nil {_gcf .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_cdaea );_gcf .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_fbac .TintTransform );
return nil ,_cdaea ;};_gcf .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_cefb ,_fbac .AlternateSpace );
_cgab ,_cdaea :=_fbac .AlternateSpace .ColorFromFloats (_cefb );if _cdaea !=nil {_gcf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_cdaea );
return nil ,_cdaea ;};return _cgab ,nil ;};func (_gbcf *PdfReader )newPdfActionHideFromDict (_efdf *_bbe .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_efdf .Get ("\u0054"),H :_efdf .Get ("\u0048")},nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bgegc *PdfShadingType3 )ToPdfObject ()_bbe .PdfObject {_bgegc .PdfShading .ToPdfObject ();_efggc ,_dadc :=_bgegc .getShadingDict ();if _dadc !=nil {_gcf .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _bgegc .Coords !=nil {_efggc .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_bgegc .Coords );};if _bgegc .Domain !=nil {_efggc .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_bgegc .Domain );};if _bgegc .Function !=nil {if len (_bgegc .Function )==1{_efggc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bgegc .Function [0].ToPdfObject ());
}else {_ccfaa :=_bbe .MakeArray ();for _ ,_fgbcd :=range _bgegc .Function {_ccfaa .Append (_fgbcd .ToPdfObject ());};_efggc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ccfaa );};};if _bgegc .Extend !=nil {_efggc .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_bgegc .Extend );
};return _bgegc ._eecbb ;};

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_bbdc :=NewPdfAnnotation ();_bcgc :=&PdfAnnotationHighlight {};_bcgc .PdfAnnotation =_bbdc ;_bcgc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bbdc .SetContext (_bcgc );return _bcgc ;};

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_gfc PdfModel ;Type _bbe .PdfObject ;S _bbe .PdfObject ;Next _bbe .PdfObject ;_be *_bbe .PdfIndirectObject ;};

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_bbe .PdfObjectInteger ;TilingType *_bbe .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_bbe .PdfObjectFloat ;YStep *_bbe .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_bbe .PdfObjectArray ;};
func (_aggf *PdfReader )newPdfAnnotationTextFromDict (_fbe *_bbe .PdfObjectDictionary )(*PdfAnnotationText ,error ){_dbgd :=PdfAnnotationText {};_afe ,_bae :=_aggf .newPdfAnnotationMarkupFromDict (_fbe );if _bae !=nil {return nil ,_bae ;};_dbgd .PdfAnnotationMarkup =_afe ;
_dbgd .Open =_fbe .Get ("\u004f\u0070\u0065\u006e");_dbgd .Name =_fbe .Get ("\u004e\u0061\u006d\u0065");_dbgd .State =_fbe .Get ("\u0053\u0074\u0061t\u0065");_dbgd .StateModel =_fbe .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");
return &_dbgd ,nil ;};func _bebc (_gcbdc *_bbe .PdfObjectDictionary )(*PdfFieldButton ,error ){_acca :=&PdfFieldButton {};_acca .PdfField =NewPdfField ();_acca .PdfField .SetContext (_acca );_acca .Opt ,_ =_bbe .GetArray (_gcbdc .Get ("\u004f\u0070\u0074"));
_cbbbb :=NewPdfAnnotationWidget ();_cbbbb .A ,_ =_bbe .GetDict (_gcbdc .Get ("\u0041"));_cbbbb .AP ,_ =_bbe .GetDict (_gcbdc .Get ("\u0041\u0050"));_cbbbb .SetContext (_acca );_acca .PdfField .Annotations =append (_acca .PdfField .Annotations ,_cbbbb );
return _acca ,nil ;};

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_bbe .PdfIndirectObject )*PdfOutlineItem {_gfeed :=PdfOutlineItem {};_gfeed ._ebbdf =&_gfeed ;_gfeed .Title =_bbe .MakeString (title );_ecbg :=_bbe .MakeArray ();_ecbg .Append (page );_ecbg .Append (_bbe .MakeName ("\u0046\u0069\u0074"));
_gfeed .Dest =_ecbg ;return &_gfeed ;};

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_cbcafd DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};

// CompliancePdfReader is a wrapper over PdfReader that is used for verifying if the input Pdf document matches the
// compliance rules of standards like PDF/A.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type CompliancePdfReader struct{*PdfReader ;_beedba _bbe .ParserMetadata ;};

// Val returns the color value.
func (_fdcd *PdfColorDeviceGray )Val ()float64 {return float64 (*_fdcd )};func _bbdgb (_begce _bbe .PdfObject ,_beffc *PdfReader )(*OutlineDest ,error ){_edabf ,_beeab :=_bbe .GetArray (_begce );if !_beeab {return nil ,_cc .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};_gefbf :=_edabf .Len ();if _gefbf < 2{return nil ,_g .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_gefbf );
};_adafe :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_cbfbg :=_edabf .Get (0);if _dfagd ,_cadcg :=_bbe .GetIndirect (_cbfbg );_cadcg {if _ ,_bgbf ,_eggae :=_beffc .PageFromIndirectObject (_dfagd );_eggae ==nil {_adafe .Page =int64 (_bgbf -1);}else {_gcf .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_dfagd );
};_adafe .PageObj =_dfagd ;}else if _caaaf ,_gegea :=_bbe .GetIntVal (_cbfbg );_gegea {if _caaaf >=0&&_caaaf < len (_beffc .PageList ){_adafe .PageObj =_beffc .PageList [_caaaf ].GetPageAsIndirectObject ();}else {_gcf .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_caaaf );
};_adafe .Page =int64 (_caaaf );}else {return nil ,_g .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_cbfbg );};_dfgba ,_beeab :=_bbe .GetNameVal (_edabf .Get (1));
if !_beeab {_gcf .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_edabf .Get (1));
return _adafe ,nil ;};switch _dfgba {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _gefbf > 2{_adafe .Y ,_ =_bbe .GetNumberAsFloat (_bbe .TraceToDirectObject (_edabf .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _gefbf > 2{_adafe .X ,_ =_bbe .GetNumberAsFloat (_bbe .TraceToDirectObject (_edabf .Get (2)));
};case "\u0058\u0059\u005a":if _gefbf > 4{_adafe .X ,_ =_bbe .GetNumberAsFloat (_bbe .TraceToDirectObject (_edabf .Get (2)));_adafe .Y ,_ =_bbe .GetNumberAsFloat (_bbe .TraceToDirectObject (_edabf .Get (3)));_adafe .Zoom ,_ =_bbe .GetNumberAsFloat (_bbe .TraceToDirectObject (_edabf .Get (4)));
};default:_dfgba ="\u0046\u0069\u0074";};_adafe .Mode =_dfgba ;return _adafe ,nil ;};

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_begec *PdfPage )SetContentStreams (cStreams []string ,encoder _bbe .StreamEncoder )error {if len (cStreams )==0{_begec .Contents =nil ;return nil ;};if encoder ==nil {encoder =_bbe .NewRawEncoder ();};var _effd []*_bbe .PdfObjectStream ;for _ ,_bdfg :=range cStreams {_ddbeg :=&_bbe .PdfObjectStream {};
_dcfd :=encoder .MakeStreamDict ();_dbgacg ,_cafc :=encoder .EncodeBytes ([]byte (_bdfg ));if _cafc !=nil {return _cafc ;};_dcfd .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bbe .MakeInteger (int64 (len (_dbgacg ))));_ddbeg .PdfObjectDictionary =_dcfd ;
_ddbeg .Stream =_dbgacg ;_effd =append (_effd ,_ddbeg );};if len (_effd )==1{_begec .Contents =_effd [0];}else {_fbecg :=_bbe .MakeArray ();for _ ,_bdefe :=range _effd {_fbecg .Append (_bdefe );};_begec .Contents =_fbecg ;};return nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_fdac *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _fdac .UnderlyingCS ==nil {return nil ,_cc .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");
};return _fdac .UnderlyingCS .ColorFromFloats (vals );};

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_eagd *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _bbe .PdfObject )(_bbe .PdfObjectName ,error ){var _afbe *_bbe .PdfObjectName ;var _ceeg *_bbe .PdfObjectArray ;if _fgef ,_gddd :=obj .(*_bbe .PdfIndirectObject );_gddd {if _gaega ,_ffbgg :=_fgef .PdfObject .(*_bbe .PdfObjectArray );
_ffbgg {_ceeg =_gaega ;}else if _bdgd ,_gaegb :=_fgef .PdfObject .(*_bbe .PdfObjectName );_gaegb {_afbe =_bdgd ;};}else if _fege ,_ebbb :=obj .(*_bbe .PdfObjectArray );_ebbb {_ceeg =_fege ;}else if _adbb ,_egdbe :=obj .(*_bbe .PdfObjectName );_egdbe {_afbe =_adbb ;
};if _afbe !=nil {switch *_afbe {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_afbe ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_afbe ,nil ;
};};if _ceeg !=nil &&_ceeg .Len ()> 0{if _cede ,_dded :=_ceeg .Get (0).(*_bbe .PdfObjectName );_dded {switch *_cede {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _ceeg .Len ()==1{return *_cede ,nil ;
};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_cede ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_cede ,nil ;
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_cede ,nil ;};};};return "",nil ;};

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_dggf :=NewPdfAnnotation ();_gffg :=&PdfAnnotationInk {};_gffg .PdfAnnotation =_dggf ;_gffg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dggf .SetContext (_gffg );return _gffg ;};

// ToPdfObject implements interface PdfModel.
func (_aag *PdfAnnotationPolygon )ToPdfObject ()_bbe .PdfObject {_aag .PdfAnnotation .ToPdfObject ();_bgee :=_aag ._dbg ;_abga :=_bgee .PdfObject .(*_bbe .PdfObjectDictionary );_aag .PdfAnnotationMarkup .appendToPdfDictionary (_abga );_abga .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbe .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));
_abga .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_aag .Vertices );_abga .SetIfNotNil ("\u004c\u0045",_aag .LE );_abga .SetIfNotNil ("\u0042\u0053",_aag .BS );_abga .SetIfNotNil ("\u0049\u0043",_aag .IC );_abga .SetIfNotNil ("\u0042\u0045",_aag .BE );
_abga .SetIfNotNil ("\u0049\u0054",_aag .IT );_abga .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_aag .Measure );return _bgee ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_eeacg *PdfShadingType7 )ToPdfObject ()_bbe .PdfObject {_eeacg .PdfShading .ToPdfObject ();_beebe ,_fdfcb :=_eeacg .getShadingDict ();if _fdfcb !=nil {_gcf .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _eeacg .BitsPerCoordinate !=nil {_beebe .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_eeacg .BitsPerCoordinate );};if _eeacg .BitsPerComponent !=nil {_beebe .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_eeacg .BitsPerComponent );
};if _eeacg .BitsPerFlag !=nil {_beebe .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_eeacg .BitsPerFlag );};if _eeacg .Decode !=nil {_beebe .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_eeacg .Decode );};if _eeacg .Function !=nil {if len (_eeacg .Function )==1{_beebe .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_eeacg .Function [0].ToPdfObject ());
}else {_cgebfe :=_bbe .MakeArray ();for _ ,_acbaa :=range _eeacg .Function {_cgebfe .Append (_acbaa .ToPdfObject ());};_beebe .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cgebfe );};};return _eeacg ._eecbb ;};func (_aecbc *Image )getSuitableEncoder ()(_bbe .StreamEncoder ,error ){var (_gfcd ,_bcdfa =int (_aecbc .Width ),int (_aecbc .Height );
_ddegd =make (map[string ]bool );_gddff =true ;_gabd =false ;_ddffa =func ()*_bbe .DCTEncoder {return _bbe .NewDCTEncoder ()};_bebdf =func ()*_bbe .DCTEncoder {_bbgfec :=_bbe .NewDCTEncoder ();_bbgfec .BitsPerComponent =16;return _bbgfec ;};);for _egdgf :=0;
_egdgf < _bcdfa ;_egdgf ++{for _bcgaf :=0;_bcgaf < _gfcd ;_bcgaf ++{_dcfec ,_cadf :=_aecbc .ColorAt (_bcgaf ,_egdgf );if _cadf !=nil {return nil ,_cadf ;};_gaacf ,_cgddb ,_bdcg ,_aggeg :=_dcfec .RGBA ();if _gddff &&(_gaacf !=_cgddb ||_gaacf !=_bdcg ||_cgddb !=_bdcg ){_gddff =false ;
};if !_gabd {switch _dcfec .(type ){case _c .NRGBA :_gabd =_aggeg > 0;};};_ddegd [_g .Sprintf ("\u0025\u0064\u002c\u0025\u0064\u002c\u0025\u0064",_gaacf ,_cgddb ,_bdcg )]=true ;if len (_ddegd )> 2&&_gabd {return _bebdf (),nil ;};};};if _gabd ||len (_aecbc ._gagad )> 0{return _bbe .NewFlateEncoder (),nil ;
};if len (_ddegd )<=2{_ggdb :=_aecbc .ConvertToBinary ();if _ggdb !=nil {return nil ,_ggdb ;};return _bbe .NewJBIG2Encoder (),nil ;};if _gddff {return _ddffa (),nil ;};if _aecbc .ColorComponents ==1{if _aecbc .BitsPerComponent ==1{return _bbe .NewJBIG2Encoder (),nil ;
}else if _aecbc .BitsPerComponent ==8{_ccdc :=_bbe .NewDCTEncoder ();_ccdc .ColorComponents =1;return _ccdc ,nil ;};}else if _aecbc .ColorComponents ==3{if _aecbc .BitsPerComponent ==8{return _ddffa (),nil ;}else if _aecbc .BitsPerComponent ==16{return _bebdf (),nil ;
};}else if _aecbc .ColorComponents ==4{_eaec :=_bebdf ();_eaec .ColorComponents =4;return _eaec ,nil ;};return _bebdf (),nil ;};

// WriteToFile writes the Appender output to file specified by path.
func (_fdeg *PdfAppender )WriteToFile (outputPath string )error {_aabg ,_aaad :=_cd .Create (outputPath );if _aaad !=nil {return _aaad ;};defer _aabg .Close ();return _fdeg .Write (_aabg );};

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_abafg *PdfPageResources )SetXObjectFormByName (keyName _bbe .PdfObjectName ,xform *XObjectForm )error {_baaba :=xform .ToPdfObject ().(*_bbe .PdfObjectStream );_gdcce :=_abafg .SetXObjectByName (keyName ,_baaba );return _gdcce ;};

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
//   - For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//     for Type 1 Fonts".
//   - For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//     "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//     conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//     encoding and use the glyph indices as character codes, as described following Table 118.
func (_dgce *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_ffcfg ,_ ,_afbb :=_dgce .CharcodesToUnicodeWithStats (_dgce .BytesToCharcodes (data ));_dcbbd :=_ff .ExpandLigatures (_ffcfg );return _dcbbd ,_eg .RuneCountInString (_dcbbd ),_afbb ;
};

// Transform rectangle with the supplied matrix.
func (_eebfcd *PdfRectangle )Transform (transformMatrix _ggeb .Matrix ){_eebfcd .Llx ,_eebfcd .Lly =transformMatrix .Transform (_eebfcd .Llx ,_eebfcd .Lly );_eebfcd .Urx ,_eebfcd .Ury =transformMatrix .Transform (_eebfcd .Urx ,_eebfcd .Ury );_eebfcd .Normalize ();
};func (_ebd *PdfReader )newPdfActionResetFormFromDict (_ffgf *_bbe .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_ffgf .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_ffgf .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_cdfb *PdfPage )GetPageAsIndirectObject ()*_bbe .PdfIndirectObject {return _cdfb ._efggg };

// SetContentStream sets the pattern cell's content stream.
func (_gcagb *PdfTilingPattern )SetContentStream (content []byte ,encoder _bbe .StreamEncoder )error {_fbecc ,_fddef :=_gcagb ._agefc .(*_bbe .PdfObjectStream );if !_fddef {_gcf .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gcagb ._agefc );
return _bbe .ErrTypeError ;};if encoder ==nil {encoder =_bbe .NewRawEncoder ();};_ecgba :=_fbecc .PdfObjectDictionary ;_fddefg :=encoder .MakeStreamDict ();_ecgba .Merge (_fddefg );_daccb ,_ffcd :=encoder .EncodeBytes (content );if _ffcd !=nil {return _ffcd ;
};_ecgba .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bbe .MakeInteger (int64 (len (_daccb ))));_fbecc .Stream =_daccb ;return nil ;};

// String returns a string that describes `base`.
func (_abbca fontCommon )String ()string {return _g .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_abbca .coreString ());};

// B returns the value of the blue component of the color.
func (_dega *PdfColorDeviceRGB )B ()float64 {return _dega [2]};func (_cggac *PdfReader )newPdfPageFromDict (_dgced *_bbe .PdfObjectDictionary )(*PdfPage ,error ){_cbbaa :=NewPdfPage ();_cbbaa ._gbegc =_dgced ;_cbbaa ._cagaa =*_dgced ;_bgecd :=*_dgced ;
_gagef ,_daaf :=_bgecd .Get ("\u0054\u0079\u0070\u0065").(*_bbe .PdfObjectName );if !_daaf {return nil ,_cc .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");
};if *_gagef !="\u0050\u0061\u0067\u0065"{return nil ,_cc .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");};if _dfeaa :=_bgecd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");
_dfeaa !=nil {_cbbaa .Parent =_dfeaa ;};if _bfgdc :=_bgecd .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_bfgdc !=nil {_cgad ,_abfcb :=_bbe .GetString (_bfgdc );if !_abfcb {return nil ,_cc .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");
};_gedffb ,_gedgf :=NewPdfDate (_cgad .Str ());if _gedgf !=nil {return nil ,_gedgf ;};_cbbaa .LastModified =&_gedffb ;};if _accf :=_bgecd .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_accf !=nil &&!_bbe .IsNullObject (_accf ){_dccc ,_gbcdf :=_bbe .GetDict (_accf );
if !_gbcdf {return nil ,_g .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_accf );};var _ddefb error ;_cbbaa .Resources ,_ddefb =NewPdfPageResourcesFromDict (_dccc );
if _ddefb !=nil {return nil ,_ddefb ;};}else {_gggf ,_ggead :=_cbbaa .getParentResources ();if _ggead !=nil {return nil ,_ggead ;};if _gggf ==nil {_gggf =NewPdfPageResources ();};_cbbaa .Resources =_gggf ;};if _dfffd :=_bgecd .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");
_dfffd !=nil {_eegf ,_gecg :=_bbe .GetArray (_dfffd );if !_gecg {return nil ,_cc .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _aaabf error ;
_cbbaa .MediaBox ,_aaabf =NewPdfRectangle (*_eegf );if _aaabf !=nil {return nil ,_aaabf ;};};if _abfg :=_bgecd .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_abfg !=nil {_gcaag ,_cfea :=_bbe .GetArray (_abfg );if !_cfea {return nil ,_cc .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _ebgfg error ;_cbbaa .CropBox ,_ebgfg =NewPdfRectangle (*_gcaag );if _ebgfg !=nil {return nil ,_ebgfg ;};};if _dbbdbe :=_bgecd .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_dbbdbe !=nil {_bdfce ,_aabf :=_bbe .GetArray (_dbbdbe );if !_aabf {return nil ,_cc .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");
};var _gbcce error ;_cbbaa .BleedBox ,_gbcce =NewPdfRectangle (*_bdfce );if _gbcce !=nil {return nil ,_gbcce ;};};if _geacb :=_bgecd .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_geacb !=nil {_aeeab ,_bcfaa :=_bbe .GetArray (_geacb );if !_bcfaa {return nil ,_cc .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _ccffe error ;_cbbaa .TrimBox ,_ccffe =NewPdfRectangle (*_aeeab );if _ccffe !=nil {return nil ,_ccffe ;};};if _acff :=_bgecd .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_acff !=nil {_begef ,_deab :=_bbe .GetArray (_acff );if !_deab {return nil ,_cc .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _efdb error ;_cbbaa .ArtBox ,_efdb =NewPdfRectangle (*_begef );if _efdb !=nil {return nil ,_efdb ;};};if _dfefg :=_bgecd .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_dfefg !=nil {_cbbaa .BoxColorInfo =_dfefg ;};if _bbabg :=_bgecd .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
_bbabg !=nil {_cbbaa .Contents =_bbabg ;};if _cagfg :=_bgecd .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_cagfg !=nil {_fcbb ,_egca :=_bbe .GetNumberAsInt64 (_cagfg );if _egca !=nil {return nil ,_cc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};_cbbaa .Rotate =&_fcbb ;};if _febcc :=_bgecd .Get ("\u0047\u0072\u006fu\u0070");_febcc !=nil {_cbbaa .Group =_febcc ;};if _cdbabd :=_bgecd .Get ("\u0054\u0068\u0075m\u0062");_cdbabd !=nil {_cbbaa .Thumb =_cdbabd ;};if _gcabf :=_bgecd .Get ("\u0042");
_gcabf !=nil {_cbbaa .B =_gcabf ;};if _adbae :=_bgecd .Get ("\u0044\u0075\u0072");_adbae !=nil {_cbbaa .Dur =_adbae ;};if _gaecfd :=_bgecd .Get ("\u0054\u0072\u0061n\u0073");_gaecfd !=nil {_cbbaa .Trans =_gaecfd ;};if _fgdfag :=_bgecd .Get ("\u0041\u0041");
_fgdfag !=nil {_cbbaa .AA =_fgdfag ;};if _bgeff :=_bgecd .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_bgeff !=nil {_cbbaa .Metadata =_bgeff ;};if _debee :=_bgecd .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_debee !=nil {_cbbaa .PieceInfo =_debee ;
};if _cgbcc :=_bgecd .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_cgbcc !=nil {_cbbaa .StructParents =_cgbcc ;};if _ababg :=_bgecd .Get ("\u0049\u0044");_ababg !=nil {_cbbaa .ID =_ababg ;};if _bafcb :=_bgecd .Get ("\u0050\u005a");
_bafcb !=nil {_cbbaa .PZ =_bafcb ;};if _ebed :=_bgecd .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");_ebed !=nil {_cbbaa .SeparationInfo =_ebed ;};if _cbebg :=_bgecd .Get ("\u0054\u0061\u0062\u0073");_cbebg !=nil {_cbbaa .Tabs =_cbebg ;
};if _baddc :=_bgecd .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");_baddc !=nil {_cbbaa .TemplateInstantiated =_baddc ;};if _bbggd :=_bgecd .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");
_bbggd !=nil {_cbbaa .PresSteps =_bbggd ;};if _aaaee :=_bgecd .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_aaaee !=nil {_cbbaa .UserUnit =_aaaee ;};if _efaaa :=_bgecd .Get ("\u0056\u0050");_efaaa !=nil {_cbbaa .VP =_efaaa ;};if _begbf :=_bgecd .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");
_begbf !=nil {_cbbaa .Annots =_begbf ;};_cbbaa ._cbged =_cggac ;return _cbbaa ,nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_efgfa *PdfSignature )GetContainingPdfObject ()_bbe .PdfObject {return _efgfa ._babd };

// SetCatalogMetadata sets the catalog metadata (XMP) stream object.
func (_gbadf *PdfWriter )SetCatalogMetadata (meta _bbe .PdfObject )error {if meta ==nil {_gbadf ._bgdee .Remove ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return nil ;};_bbdad ,_adcaf :=_bbe .GetStream (meta );if !_adcaf {return _cc .New ("\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u006d\u0065\u0074\u0061\u0064a\u0074\u0061\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0073t\u0072\u0065\u0061\u006d");
};_gbadf .addObject (_bbdad );_gbadf ._bgdee .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_bbdad );return nil ;};

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _bbe .PdfObject ;Sy _bbe .PdfObject ;};func (_cbcgd *pdfFontSimple )updateStandard14Font (){_gage ,_fbcba :=_cbcgd .Encoder ().(_ff .SimpleEncoder );if !_fbcba {_gcf .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_cbcgd .Encoder (),_cbcgd );
return ;};_bacea :=_gage .Charcodes ();_cbcgd ._dbba =make (map[_ff .CharCode ]float64 ,len (_bacea ));for _ ,_bdfa :=range _bacea {_cgeeg ,_ :=_gage .CharcodeToRune (_bdfa );_acgdf ,_ :=_cbcgd ._gbafb .Read (_cgeeg );_cbcgd ._dbba [_bdfa ]=_acgdf .Wx ;
};};

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _bbe .PdfObject ;Name _bbe .PdfObject ;State _bbe .PdfObject ;StateModel _bbe .PdfObject ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_fede *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_bbe .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_cc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cdfa ,_fcbf :=_bbe .GetNumbersAsFloat (objects );
if _fcbf !=nil {return nil ,_fcbf ;};return _fede .ColorFromFloats (_cdfa );};

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_bfafe *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_cc .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");
};_fgcgf ,_cbdee :=_gb .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._gagad ,img ._eacbf );if _cbdee !=nil {return img ,_cbdee ;};_fgfd ,_cbdee :=_gb .GrayConverter .Convert (_fgcgf );
if _cbdee !=nil {return img ,_cbdee ;};return _gdbea (_fgfd .Base ()),nil ;};func _fggde (_bdgfb _bbe .PdfObject )(*PdfShading ,error ){_begde :=&PdfShading {};var _gbggd *_bbe .PdfObjectDictionary ;if _eagbf ,_ebbbb :=_bbe .GetIndirect (_bdgfb );_ebbbb {_begde ._eecbb =_eagbf ;
_fabcg ,_cbdeee :=_eagbf .PdfObject .(*_bbe .PdfObjectDictionary );if !_cbdeee {_gcf .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_bbe .ErrTypeError ;
};_gbggd =_fabcg ;}else if _bedb ,_eaagg :=_bbe .GetStream (_bdgfb );_eaagg {_begde ._eecbb =_bedb ;_gbggd =_bedb .PdfObjectDictionary ;}else if _cagaf ,_ddddd :=_bbe .GetDict (_bdgfb );_ddddd {_begde ._eecbb =_cagaf ;_gbggd =_cagaf ;}else {_gcf .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_bdgfb );
return nil ,_bbe .ErrTypeError ;};if _gbggd ==nil {_gcf .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_cc .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_bdgfb =_gbggd .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _bdgfb ==nil {_gcf .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_bdgfb =_bbe .TraceToDirectObject (_bdgfb );_gcaeb ,_baegf :=_bdgfb .(*_bbe .PdfObjectInteger );if !_baegf {_gcf .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_bdgfb );
return nil ,_bbe .ErrTypeError ;};if *_gcaeb < 1||*_gcaeb > 7{_gcf .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_gcaeb );
return nil ,_bbe .ErrTypeError ;};_begde .ShadingType =_gcaeb ;_bdgfb =_gbggd .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _bdgfb ==nil {_gcf .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_edeed ,_eefbg :=NewPdfColorspaceFromPdfObject (_bdgfb );if _eefbg !=nil {_gcf .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_eefbg );
return nil ,_eefbg ;};_begde .ColorSpace =_edeed ;_bdgfb =_gbggd .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _bdgfb !=nil {_bdgfb =_bbe .TraceToDirectObject (_bdgfb );_fffgb ,_gbgcdf :=_bdgfb .(*_bbe .PdfObjectArray );if !_gbgcdf {_gcf .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_bdgfb );
return nil ,_bbe .ErrTypeError ;};_begde .Background =_fffgb ;};_bdgfb =_gbggd .Get ("\u0042\u0042\u006f\u0078");if _bdgfb !=nil {_bdgfb =_bbe .TraceToDirectObject (_bdgfb );_aeegc ,_ageca :=_bdgfb .(*_bbe .PdfObjectArray );if !_ageca {_gcf .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_bdgfb );
return nil ,_bbe .ErrTypeError ;};_fbeef ,_deac :=NewPdfRectangle (*_aeegc );if _deac !=nil {_gcf .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_deac );return nil ,_deac ;};_begde .BBox =_fbeef ;};_bdgfb =_gbggd .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");
if _bdgfb !=nil {_bdgfb =_bbe .TraceToDirectObject (_bdgfb );_acbcg ,_beffca :=_bdgfb .(*_bbe .PdfObjectBool );if !_beffca {_gcf .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bdgfb );
return nil ,_bbe .ErrTypeError ;};_begde .AntiAlias =_acbcg ;};switch *_gcaeb {case 1:_ggdge ,_efbfb :=_cffe (_gbggd );if _efbfb !=nil {return nil ,_efbfb ;};_ggdge .PdfShading =_begde ;_begde ._cgge =_ggdge ;return _begde ,nil ;case 2:_caaea ,_geage :=_gdgdeb (_gbggd );
if _geage !=nil {return nil ,_geage ;};_caaea .PdfShading =_begde ;_begde ._cgge =_caaea ;return _begde ,nil ;case 3:_ggedg ,_gffa :=_deabe (_gbggd );if _gffa !=nil {return nil ,_gffa ;};_ggedg .PdfShading =_begde ;_begde ._cgge =_ggedg ;return _begde ,nil ;
case 4:_befaf ,_bdcbf :=_fcedg (_gbggd );if _bdcbf !=nil {return nil ,_bdcbf ;};_befaf .PdfShading =_begde ;_begde ._cgge =_befaf ;return _begde ,nil ;case 5:_gaaa ,_aedf :=_cfbgde (_gbggd );if _aedf !=nil {return nil ,_aedf ;};_gaaa .PdfShading =_begde ;
_begde ._cgge =_gaaa ;return _begde ,nil ;case 6:_eeaca ,_fcbga :=_gceag (_gbggd );if _fcbga !=nil {return nil ,_fcbga ;};_eeaca .PdfShading =_begde ;_begde ._cgge =_eeaca ;return _begde ,nil ;case 7:_aacdf ,_gadaa :=_dcgdf (_gbggd );if _gadaa !=nil {return nil ,_gadaa ;
};_aacdf .PdfShading =_begde ;_begde ._cgge =_aacdf ;return _begde ,nil ;};return nil ,_cc .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_af :=NewPdfAction ();_ffc :=&PdfActionGoToR {};_ffc .PdfAction =_af ;_af .SetContext (_ffc );return _ffc ;};func (_cbca *PdfReader )newPdfAnnotationInkFromDict (_caf *_bbe .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_dcba :=PdfAnnotationInk {};
_bgeb ,_dcbe :=_cbca .newPdfAnnotationMarkupFromDict (_caf );if _dcbe !=nil {return nil ,_dcbe ;};_dcba .PdfAnnotationMarkup =_bgeb ;_dcba .InkList =_caf .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_dcba .BS =_caf .Get ("\u0042\u0053");return &_dcba ,nil ;
};func _bdce (_bgbbb _bbe .PdfObject )(PdfFunction ,error ){_bgbbb =_bbe .ResolveReference (_bgbbb );if _fdfbd ,_fdgad :=_bgbbb .(*_bbe .PdfObjectStream );_fdgad {_caaa :=_fdfbd .PdfObjectDictionary ;_gcfea ,_gbcgb :=_caaa .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_bbe .PdfObjectInteger );
if !_gbcgb {_gcf .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_cc .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_gcfea ==0{return _gegd (_fdfbd );}else if *_gcfea ==4{return _acgdc (_fdfbd );}else {return nil ,_cc .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _edebfb ,_fcded :=_bgbbb .(*_bbe .PdfIndirectObject );
_fcded {_bead ,_daabg :=_edebfb .PdfObject .(*_bbe .PdfObjectDictionary );if !_daabg {_gcf .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_cc .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_bdgf ,_daabg :=_bead .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_bbe .PdfObjectInteger );
if !_daabg {_gcf .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_cc .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_bdgf ==2{return _cgdga (_edebfb );}else if *_bdgf ==3{return _agcdb (_edebfb );}else {return nil ,_cc .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _agbfe ,_ccgc :=_bgbbb .(*_bbe .PdfObjectDictionary );
_ccgc {_ccbee ,_aefa :=_agbfe .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_bbe .PdfObjectInteger );if !_aefa {_gcf .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_cc .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_ccbee ==2{return _cgdga (_agbfe );}else if *_ccbee ==3{return _agcdb (_agbfe );
}else {return nil ,_cc .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_gcf .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_bgbbb );
return nil ,_cc .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bccbg *PdfShading )ToPdfObject ()_bbe .PdfObject {_fcbgd :=_bccbg ._eecbb ;_deecg ,_cgag :=_bccbg .getShadingDict ();if _cgag !=nil {_gcf .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _bccbg .ShadingType !=nil {_deecg .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_bccbg .ShadingType );};if _bccbg .ColorSpace !=nil {_deecg .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_bccbg .ColorSpace .ToPdfObject ());
};if _bccbg .Background !=nil {_deecg .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_bccbg .Background );};if _bccbg .BBox !=nil {_deecg .Set ("\u0042\u0042\u006f\u0078",_bccbg .BBox .ToPdfObject ());};if _bccbg .AntiAlias !=nil {_deecg .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_bccbg .AntiAlias );
};return _fcbgd ;};

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_abfbgg *Outline )ToPdfOutline ()*PdfOutline {_fadfe :=NewPdfOutline ();var _fefeg []*PdfOutlineItem ;var _bfbg int64 ;var _cbbd *PdfOutlineItem ;for _ ,_bfbd :=range _abfbgg .Entries {_fgcbc ,_eedae :=_bfbd .ToPdfOutlineItem ();_fgcbc .Parent =&_fadfe .PdfOutlineTreeNode ;
if _cbbd !=nil {_cbbd .Next =&_fgcbc .PdfOutlineTreeNode ;_fgcbc .Prev =&_cbbd .PdfOutlineTreeNode ;};_fefeg =append (_fefeg ,_fgcbc );_bfbg +=_eedae ;_cbbd =_fgcbc ;};_bdgde :=int64 (len (_fefeg ));_bfbg +=_bdgde ;if _bdgde > 0{_fadfe .First =&_fefeg [0].PdfOutlineTreeNode ;
_fadfe .Last =&_fefeg [_bdgde -1].PdfOutlineTreeNode ;_fadfe .Count =&_bfbg ;};return _fadfe ;};

// ToPdfObject implements interface PdfModel.
func (_eeg *PdfActionRendition )ToPdfObject ()_bbe .PdfObject {_eeg .PdfAction .ToPdfObject ();_bfce :=_eeg ._be ;_abd :=_bfce .PdfObject .(*_bbe .PdfObjectDictionary );_abd .SetIfNotNil ("\u0053",_bbe .MakeName (string (ActionTypeRendition )));_abd .SetIfNotNil ("\u0052",_eeg .R );
_abd .SetIfNotNil ("\u0041\u004e",_eeg .AN );_abd .SetIfNotNil ("\u004f\u0050",_eeg .OP );_abd .SetIfNotNil ("\u004a\u0053",_eeg .JS );return _bfce ;};

// ToPdfObject implements interface PdfModel.
func (_babe *PdfAnnotationPrinterMark )ToPdfObject ()_bbe .PdfObject {_babe .PdfAnnotation .ToPdfObject ();_dfad :=_babe ._dbg ;_bcbc :=_dfad .PdfObject .(*_bbe .PdfObjectDictionary );_bcbc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbe .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));
_bcbc .SetIfNotNil ("\u004d\u004e",_babe .MN );return _dfad ;};func _cdeef (_fdafc *PdfField ,_ecgb _bbe .PdfObject )error {switch _fdafc .GetContext ().(type ){case *PdfFieldText :switch _gdcbcd :=_ecgb .(type ){case *_bbe .PdfObjectName :_gedfb :=_gdcbcd ;
_gcf .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_gedfb .String ());
_fdafc .V =_bbe .MakeEncodedString (_gdcbcd .String (),true );case *_bbe .PdfObjectString :_fdafc .V =_bbe .MakeEncodedString (_gdcbcd .String (),true );default:_gcf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_gdcbcd ,_gdcbcd );
};case *PdfFieldButton :switch _ecgb .(type ){case *_bbe .PdfObjectName :if len (_ecgb .String ())> 0{_fdafc .V =_ecgb ;_gbfc (_fdafc ,_ecgb );};case *_bbe .PdfObjectString :if len (_ecgb .String ())> 0{_fdafc .V =_bbe .MakeName (_ecgb .String ());_gbfc (_fdafc ,_fdafc .V );
};default:_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_fdafc .PartialName (),_ecgb );_fdafc .V =_ecgb ;};case *PdfFieldChoice :switch _ecgb .(type ){case *_bbe .PdfObjectName :if len (_ecgb .String ())> 0{_fdafc .V =_bbe .MakeString (_ecgb .String ());
_gbfc (_fdafc ,_ecgb );};case *_bbe .PdfObjectString :if len (_ecgb .String ())> 0{_fdafc .V =_ecgb ;_gbfc (_fdafc ,_bbe .MakeName (_ecgb .String ()));};default:_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_fdafc .PartialName (),_ecgb );
_fdafc .V =_ecgb ;};case *PdfFieldSignature :_gcf .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_fdafc .PartialName (),_ecgb );
};return nil ;};

// ToPdfObject converts date to a PDF string object.
func (_aacgg *PdfDate )ToPdfObject ()_bbe .PdfObject {_gcffa :=_g .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_aacgg ._fbgcd ,_aacgg ._adagcb ,_aacgg ._ecbec ,_aacgg ._fcffa ,_aacgg ._bafbb ,_aacgg ._gcffe ,_aacgg ._fdgcgf ,_aacgg ._bdfdc ,_aacgg ._degcc );
return _bbe .MakeString (_gcffa );};func (_dde *PdfReader )loadAction (_gefe _bbe .PdfObject )(*PdfAction ,error ){if _efdd ,_dafg :=_bbe .GetIndirect (_gefe );_dafg {_ddbg ,_afec :=_dde .newPdfActionFromIndirectObject (_efdd );if _afec !=nil {return nil ,_afec ;
};return _ddbg ,nil ;}else if !_bbe .IsNullObject (_gefe ){return nil ,_cc .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};return nil ,nil ;};func _cfccf ()string {_cccbdc .Lock ();defer _cccbdc .Unlock ();return _fcfgd };

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_ecggb *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_gcf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
return img ,_cc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_gfaad pdfFontType3 )GetRuneMetrics (r rune )(_bfg .CharMetrics ,bool ){_dbcfb :=_gfaad .Encoder ();if _dbcfb ==nil {_gcf .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_gfaad );
return _bfg .CharMetrics {},false ;};_ffada ,_fdfe :=_dbcfb .RuneToCharcode (r );if !_fdfe {if r !=' '{_gcf .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_gfaad );
};return _bfg .CharMetrics {},false ;};_gace ,_debag :=_gfaad .GetCharMetrics (_ffada );return _gace ,_debag ;};

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_dgc :=NewPdfAnnotation ();_eaf :=&PdfAnnotationLine {};_eaf .PdfAnnotation =_dgc ;_eaf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dgc .SetContext (_eaf );return _eaf ;};

// SetAction sets the PDF action for the annotation link.
func (_aaag *PdfAnnotationLink )SetAction (action *PdfAction ){_aaag ._ecb =action ;if action ==nil {_aaag .A =nil ;};};

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _bbe .PdfObject ;};func (_cdba *PdfReader )newPdfAnnotationHighlightFromDict (_ebf *_bbe .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_fdec :=PdfAnnotationHighlight {};_bgaf ,_feg :=_cdba .newPdfAnnotationMarkupFromDict (_ebf );
if _feg !=nil {return nil ,_feg ;};_fdec .PdfAnnotationMarkup =_bgaf ;_fdec .QuadPoints =_ebf .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_fdec ,nil ;};func (_dddf *PdfReader )newPdfAcroFormFromDict (_fadd *_bbe .PdfIndirectObject ,_dccbc *_bbe .PdfObjectDictionary )(*PdfAcroForm ,error ){_aagdg :=NewPdfAcroForm ();
if _fadd !=nil {_aagdg ._agbef =_fadd ;_fadd .PdfObject =_bbe .MakeDict ();};if _acdfb :=_dccbc .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");_acdfb !=nil &&!_bbe .IsNullObject (_acdfb ){_gdbe ,_gfed :=_bbe .GetArray (_acdfb );if !_gfed {return nil ,_g .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_acdfb );
};var _edfgd []*PdfField ;for _ ,_fbgba :=range _gdbe .Elements (){_eabg ,_fdfda :=_bbe .GetIndirect (_fbgba );if !_fdfda {if _ ,_dcfc :=_fbgba .(*_bbe .PdfObjectNull );_dcfc {_gcf .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");
continue ;};_gcf .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_fbgba );
return nil ,_g .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_ecceg ,_bggbb :=_dddf .newPdfFieldFromIndirectObject (_eabg ,nil );
if _bggbb !=nil {return nil ,_bggbb ;};_gcf .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_ecceg );_edfgd =append (_edfgd ,_ecceg );};_aagdg .Fields =&_edfgd ;};if _eedgd :=_dccbc .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");
_eedgd !=nil {_cdcea ,_gddgg :=_bbe .GetBool (_eedgd );if _gddgg {_aagdg .NeedAppearances =_cdcea ;}else {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_eedgd );
};};if _gbbcd :=_dccbc .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_gbbcd !=nil {_bbdce ,_ecdce :=_bbe .GetInt (_gbbcd );if _ecdce {_aagdg .SigFlags =_bbdce ;}else {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gbbcd );
};};if _cdeb :=_dccbc .Get ("\u0043\u004f");_cdeb !=nil {_becfc ,_dadbg :=_bbe .GetArray (_cdeb );if _dadbg {_aagdg .CO =_becfc ;}else {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_cdeb );
};};if _aafce :=_dccbc .Get ("\u0044\u0052");_aafce !=nil {if _cfbgdd ,_ebegg :=_bbe .GetDict (_aafce );_ebegg {_ecacc ,_facf :=NewPdfPageResourcesFromDict (_cfbgdd );if _facf !=nil {_gcf .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_facf );
return nil ,_facf ;};_aagdg .DR =_ecacc ;}else {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_aafce );};};if _badbb :=_dccbc .Get ("\u0044\u0041");
_badbb !=nil {_caeb ,_adgcg :=_bbe .GetString (_badbb );if _adgcg {_aagdg .DA =_caeb ;}else {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_badbb );
};};if _agcfg :=_dccbc .Get ("\u0051");_agcfg !=nil {_gebe ,_baegc :=_bbe .GetInt (_agcfg );if _baegc {_aagdg .Q =_gebe ;}else {_gcf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_agcfg );
};};if _bece :=_dccbc .Get ("\u0058\u0046\u0041");_bece !=nil {_aagdg .XFA =_bece ;};if _aggfd :=_dccbc .Get ("\u0041\u0044\u0042\u0045\u005f\u0045\u0063\u0068\u006f\u0053\u0069\u0067\u006e");_aggfd !=nil {_aagdg .ADBEEchoSign =_aggfd ;};_aagdg .ToPdfObject ();
return _aagdg ,nil ;};

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_gcaa *Image )ColorAt (x ,y int )(_c .Color ,error ){_agacf :=_gb .BytesPerLine (int (_gcaa .Width ),int (_gcaa .BitsPerComponent ),_gcaa .ColorComponents );switch _gcaa .ColorComponents {case 1:return _gb .ColorAtGrayscale (x ,y ,int (_gcaa .BitsPerComponent ),_agacf ,_gcaa .Data ,_gcaa ._eacbf );
case 3:return _gb .ColorAtNRGBA (x ,y ,int (_gcaa .Width ),_agacf ,int (_gcaa .BitsPerComponent ),_gcaa .Data ,_gcaa ._gagad ,_gcaa ._eacbf );case 4:return _gb .ColorAtCMYK (x ,y ,int (_gcaa .Width ),_gcaa .Data ,_gcaa ._eacbf );};_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_gcaa .ColorComponents ,_gcaa .BitsPerComponent );
return nil ,_cc .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_bddfc *PdfReader )GetPageLabels ()(_bbe .PdfObject ,error ){_gcaaa :=_bbe .ResolveReference (_bddfc ._cagcc .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _gcaaa ==nil {return nil ,nil ;};if !_bddfc ._egggg {_ccge :=_bddfc .traverseObjectData (_gcaaa );
if _ccge !=nil {return nil ,_ccge ;};};return _gcaaa ,nil ;};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _bbe .PdfObject ;IC _bbe .PdfObject ;BE _bbe .PdfObject ;RD _bbe .PdfObject ;};func (_ddd *PdfReader )newPdfActionGotoFromDict (_cff *_bbe .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_cff .Get ("\u0044")},nil ;
};func _dgfd (_bgaa string )(map[_ff .CharCode ]_ff .GlyphName ,error ){_caaf :=_df .Split (_bgaa ,"\u000a");_dacfd :=make (map[_ff .CharCode ]_ff .GlyphName );for _ ,_fbedb :=range _caaf {_aaeae :=_eefeg .FindStringSubmatch (_fbedb );if _aaeae ==nil {continue ;
};_fegb ,_bdgdca :=_aaeae [1],_aaeae [2];_eegd ,_cegg :=_fc .Atoi (_fegb );if _cegg !=nil {_gcf .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_fbedb );
return nil ,_bbe .ErrTypeError ;};_dacfd [_ff .CharCode (_eegd )]=_ff .GlyphName (_bdgdca );};_gcf .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_dacfd );
return _dacfd ,nil ;};

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_edbgg *XObjectImage )SetFilter (encoder _bbe .StreamEncoder )error {_gfaeb :=_edbgg .Stream ;_fcaac ,_ceede :=_edbgg .Filter .DecodeBytes (_gfaeb );if _ceede !=nil {return _ceede ;};_edbgg .Filter =encoder ;encoder .UpdateParams (_edbgg .getParamsDict ());
_gfaeb ,_ceede =encoder .EncodeBytes (_fcaac );if _ceede !=nil {return _ceede ;};_edbgg .Stream =_gfaeb ;return nil ;};func _dbage ()_ge .Time {_cccbdc .Lock ();defer _cccbdc .Unlock ();return _abdac };func (_gfd *PdfReader )newPdfActionURIFromDict (_fefb *_bbe .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_fefb .Get ("\u0055\u0052\u0049"),IsMap :_fefb .Get ("\u0049\u0073\u004da\u0070")},nil ;
};

// ToInteger convert to an integer format.
func (_ggcg *PdfColorCalGray )ToInteger (bits int )uint32 {_ggcf :=_ab .Pow (2,float64 (bits ))-1;return uint32 (_ggcf *_ggcg .Val ());};func (_aga *PdfReader )newPdfActionImportDataFromDict (_bbda *_bbe .PdfObjectDictionary )(*PdfActionImportData ,error ){_gfda ,_cdg :=_bfac (_bbda .Get ("\u0046"));
if _cdg !=nil {return nil ,_cdg ;};return &PdfActionImportData {F :_gfda },nil ;};

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _bbe .PdfObject ;Name _bbe .PdfObject ;};

// NewCompliancePdfReader creates a PdfReader or an input io.ReadSeeker that during reading will scan the files for the
// metadata details. It could be used for the PDF standard implementations like PDF/A or PDF/X.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
func NewCompliancePdfReader (rs _geb .ReadSeeker )(*CompliancePdfReader ,error ){const _fcga ="\u006d\u006f\u0064\u0065l\u003a\u004e\u0065\u0077\u0043\u006f\u006d\u0070\u006c\u0069a\u006ec\u0065\u0050\u0064\u0066\u0052\u0065\u0061d\u0065\u0072";_fafga ,_bfbe :=_cbab (rs ,&ReaderOpts {ComplianceMode :true },false ,_fcga );
if _bfbe !=nil {return nil ,_bfbe ;};return &CompliancePdfReader {PdfReader :_fafga },nil ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_ddcg *PdfShadingPatternType2 )ToPdfObject ()_bbe .PdfObject {_ddcg .PdfPattern .ToPdfObject ();_fdefa :=_ddcg .getDict ();if _ddcg .Shading !=nil {_fdefa .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_ddcg .Shading .ToPdfObject ());};if _ddcg .Matrix !=nil {_fdefa .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_ddcg .Matrix );
};if _ddcg .ExtGState !=nil {_fdefa .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_ddcg .ExtGState );};return _ddcg ._agefc ;};

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _bbe .StreamEncoder ;FormType _bbe .PdfObject ;BBox _bbe .PdfObject ;Matrix _bbe .PdfObject ;Resources *PdfPageResources ;Group _bbe .PdfObject ;Ref _bbe .PdfObject ;MetaData _bbe .PdfObject ;PieceInfo _bbe .PdfObject ;LastModified _bbe .PdfObject ;
StructParent _bbe .PdfObject ;StructParents _bbe .PdfObject ;OPI _bbe .PdfObject ;OC _bbe .PdfObject ;Name _bbe .PdfObject ;

// Stream data.
Stream []byte ;_abbbg *_bbe .PdfObjectStream ;};

// GetCatalogMarkInfo gets catalog MarkInfo object.
func (_gdefg *PdfReader )GetCatalogMarkInfo ()(_bbe .PdfObject ,bool ){if _gdefg ._cagcc ==nil {return nil ,false ;};_gggbc :=_gdefg ._cagcc .Get ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f");return _gggbc ,_gggbc !=nil ;};

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_dgcd *PdfWriter )AddPage (page *PdfPage )error {const _dfcaf ="\u006d\u006f\u0064el\u003a\u0050\u0064\u0066\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_eagf (page );_ebccf :=page .ToPdfObject ();_gcf .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");
_gcf .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_ebccf );_ecaa ,_bcacc :=_bbe .GetIndirect (_ebccf );if !_bcacc {return _cc .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");
};_gcf .Log .Trace ("\u0025\u0073",_ecaa );_gcf .Log .Trace ("\u0025\u0073",_ecaa .PdfObject );_fcdfee ,_bcacc :=_bbe .GetDict (_ecaa .PdfObject );if !_bcacc {return _cc .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_edgag ,_bcacc :=_bbe .GetName (_fcdfee .Get ("\u0054\u0079\u0070\u0065"));if !_bcacc {return _g .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_fcdfee .Get ("\u0054\u0079\u0070\u0065"));
};if _edgag .String ()!="\u0050\u0061\u0067\u0065"{return _cc .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_agcdg :=[]_bbe .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
_bfef ,_gedffg :=_bbe .GetIndirect (_fcdfee .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_gcf .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_fcdfee .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_gedffg );
for _gedffg {_gcf .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_bfef );_dccadb ,_bgage :=_bbe .GetDict (_bfef .PdfObject );if !_bgage {return _cc .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_gcddc :=range _agcdg {_gcf .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_gcddc );if _fcdfee .Get (_gcddc )!=nil {_gcf .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");
continue ;};if _fabgc :=_dccadb .Get (_gcddc );_fabgc !=nil {_gcf .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_gcddc );_fcdfee .Set (_gcddc ,_fabgc );};};_bfef ,_gedffg =_bbe .GetIndirect (_dccadb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));
_gcf .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_dccadb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_gcf .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");
_fcdfee .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_dgcd ._fbfea );_ecaa .PdfObject =_fcdfee ;_abacc ,_bcacc :=_bbe .GetDict (_dgcd ._fbfea .PdfObject );if !_bcacc {return _cc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_gbgbg ,_bcacc :=_bbe .GetArray (_abacc .Get ("\u004b\u0069\u0064\u0073"));if !_bcacc {return _cc .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_gbgbg .Append (_ecaa );_dgcd ._edfgb [_fcdfee ]=struct{}{};_eeeed ,_bcacc :=_bbe .GetInt (_abacc .Get ("\u0043\u006f\u0075n\u0074"));if !_bcacc {return _cc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};*_eeeed =*_eeeed +1;if page ._cbged ==nil {_acfeeg :=_ea .Track (_dgcd ._adcddd ,_dfcaf );if _acfeeg !=nil {return _acfeeg ;};}else {_abbff :=_ea .Track (page ._cbged ._egaee ,_dfcaf );if _abbff !=nil {return _abbff ;};};_dgcd .addObject (_ecaa );_ddfgb :=_dgcd .addObjects (_fcdfee );
if _ddfgb !=nil {return _ddfgb ;};return nil ;};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_agdec *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_deb :=NewPdfAction ();_cga :=&PdfActionJavaScript {};_cga .PdfAction =_deb ;_deb .SetContext (_cga );return _cga ;};func (_fcgbe *PdfWriter )setCatalogVersion (){_fcgbe ._bgdee .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_bbe .MakeName (_g .Sprintf ("\u0025\u0064\u002e%\u0064",_fcgbe ._dfadc .Major ,_fcgbe ._dfadc .Minor )));
};

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1. It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2. If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3. If there is no /MissingWidth then a failure is returned.
//
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
// well give them 0 width. There is no need for the bool return.
//
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_aaabc *PdfFont )GetCharMetrics (code _ff .CharCode )(CharMetrics ,bool ){var _eagba _bfg .CharMetrics ;switch _fcdd :=_aaabc ._afag .(type ){case *pdfFontSimple :if _cegce ,_dbce :=_fcdd .GetCharMetrics (code );_dbce {return _cegce ,_dbce ;};case *pdfFontType0 :if _gbcc ,_fedg :=_fcdd .GetCharMetrics (code );
_fedg {return _gbcc ,_fedg ;};case *pdfCIDFontType0 :if _adaf ,_gbccf :=_fcdd .GetCharMetrics (code );_gbccf {return _adaf ,_gbccf ;};case *pdfCIDFontType2 :if _edabg ,_dabd :=_fcdd .GetCharMetrics (code );_dabd {return _edabg ,_dabd ;};case *pdfFontType3 :if _dbdc ,_bffccg :=_fcdd .GetCharMetrics (code );
_bffccg {return _dbdc ,_bffccg ;};default:_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_aaabc ._afag );
return _eagba ,false ;};if _ccceg ,_gdcbcf :=_aaabc .GetFontDescriptor ();_gdcbcf ==nil &&_ccceg !=nil {return _bfg .CharMetrics {Wx :_ccceg ._ggcge },true ;};_gcf .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_aaabc );
return _eagba ,false ;};func (_dbfbg *PdfPage )getParentResources ()(*PdfPageResources ,error ){_fcfaeb :=_dbfbg .Parent ;for _fcfaeb !=nil {_gcagc ,_fcgc :=_bbe .GetDict (_fcfaeb );if !_fcgc {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");
return nil ,_cc .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};if _dbggf :=_gcagc .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_dbggf !=nil {_ageaf ,_caceb :=_bbe .GetDict (_dbggf );
if !_caceb {return nil ,_cc .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");};_dgcg ,_afga :=NewPdfPageResourcesFromDict (_ageaf );if _afga !=nil {return nil ,_afga ;};return _dgcg ,nil ;};
_fcfaeb =_gcagc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_ecdb *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_bbe .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_cc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bded ,_edga :=_bbe .GetNumbersAsFloat (objects );
if _edga !=nil {return nil ,_edga ;};return _ecdb .ColorFromFloats (_bded );};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_bffc :=PdfColorDeviceGray (grayVal );return &_bffc ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_aebda *PdfOutline )ToPdfObject ()_bbe .PdfObject {_fbfg :=_aebda ._faabb ;_dede :=_fbfg .PdfObject .(*_bbe .PdfObjectDictionary );_dede .Set ("\u0054\u0079\u0070\u0065",_bbe .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _aebda .First !=nil {_dede .Set ("\u0046\u0069\u0072s\u0074",_aebda .First .ToPdfObject ());
};if _aebda .Last !=nil {_dede .Set ("\u004c\u0061\u0073\u0074",_aebda .Last .GetContext ().GetContainingPdfObject ());};if _aebda .Parent !=nil {_dede .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_aebda .Parent .GetContext ().GetContainingPdfObject ());
};if _aebda .Count !=nil {_dede .Set ("\u0043\u006f\u0075n\u0074",_bbe .MakeInteger (*_aebda .Count ));};return _fbfg ;};

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_aeebc :=&PdfFilespec {};_aeebc ._ffbgc =_bbe .MakeIndirectObject (_bbe .MakeDict ());return _aeebc ;};func _ddcfa (_dcbada *_bbe .PdfObjectDictionary ,_ceddg *fontCommon )(*pdfCIDFontType2 ,error ){if _ceddg ._cafed !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_gcf .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_ceddg );
return nil ,_bbe .ErrRangeError ;};_bfbea :=_aebec (_ceddg );_ecaf ,_bfgdg :=_bbe .GetDict (_dcbada .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_bfgdg {_gcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_ceddg );
return nil ,ErrRequiredAttributeMissing ;};_bfbea .CIDSystemInfo =_ecaf ;_bfbea .DW =_dcbada .Get ("\u0044\u0057");_bfbea .W =_dcbada .Get ("\u0057");_bfbea .DW2 =_dcbada .Get ("\u0044\u0057\u0032");_bfbea .W2 =_dcbada .Get ("\u0057\u0032");_bfbea .CIDToGIDMap =_dcbada .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");
_bfbea ._agecf =1000.0;if _cbgdc ,_eebca :=_bbe .GetNumberAsFloat (_bfbea .DW );_eebca ==nil {_bfbea ._agecf =_cbgdc ;};_aefb ,_feae :=_gfgfe (_bfbea .W );if _feae !=nil {return nil ,_feae ;};if _aefb ==nil {_aefb =map[_ff .CharCode ]float64 {};};_bfbea ._bdcd =_aefb ;
return _bfbea ,nil ;};func (_eeaea *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _eeaea ._abdgdb };

// ColorToRGB converts gray -> rgb for a single color component.
func (_cgeac *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_efgd ,_ccdb :=color .(*PdfColorDeviceGray );if !_ccdb {_gcf .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );
return nil ,_cc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_efgd ),float64 (*_efgd ),float64 (*_efgd )),nil ;};

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_bbef *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _bbef .RunesToCharcodeBytes ([]rune (str ));};

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _bbe .PdfObject ;};func (_ebdf *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};

// ToPdfObject implements interface PdfModel.
func (_ffgd *PdfAnnotationFileAttachment )ToPdfObject ()_bbe .PdfObject {_ffgd .PdfAnnotation .ToPdfObject ();_bed :=_ffgd ._dbg ;_eaae :=_bed .PdfObject .(*_bbe .PdfObjectDictionary );_ffgd .PdfAnnotationMarkup .appendToPdfDictionary (_eaae );_eaae .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbe .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));
_eaae .SetIfNotNil ("\u0046\u0053",_ffgd .FS );_eaae .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ffgd .Name );return _bed ;};

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_edbf *PdfPage )ToPdfObject ()_bbe .PdfObject {_ffacf :=_edbf ._efggg ;_edbf .GetPageDict ();return _ffacf ;};const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;XObjectTypeForm ;XObjectTypePS ;XObjectTypeUnknown ;);

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_cdde *PdfPattern )GetContext ()PdfModel {return _cdde ._adcag };

// GetXHeight returns the XHeight of the font `descriptor`.
func (_fbcdf *PdfFontDescriptor )GetXHeight ()(float64 ,error ){return _bbe .GetNumberAsFloat (_fbcdf .XHeight );};

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_bbe .PdfObject ;GetContainingPdfObject ()_bbe .PdfObject ;};

// GetContainingPdfObject returns the container of the DSS (indirect object).
func (_cbdd *DSS )GetContainingPdfObject ()_bbe .PdfObject {return _cbdd ._gcba };

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _bbe .PdfObject ;Open _bbe .PdfObject ;};

// PdfInfo holds document information that will overwrite
// document information global variables defined above.
type PdfInfo struct{Title *_bbe .PdfObjectString ;Author *_bbe .PdfObjectString ;Subject *_bbe .PdfObjectString ;Keywords *_bbe .PdfObjectString ;Creator *_bbe .PdfObjectString ;Producer *_bbe .PdfObjectString ;CreationDate *PdfDate ;ModifiedDate *PdfDate ;
Trapped *_bbe .PdfObjectName ;_fecbf *_bbe .PdfObjectDictionary ;};func _gfgfe (_affge _bbe .PdfObject )(map[_ff .CharCode ]float64 ,error ){if _affge ==nil {return nil ,nil ;};_cefef ,_fgcc :=_bbe .GetArray (_affge );if !_fgcc {return nil ,nil ;};_fbgbc :=map[_ff .CharCode ]float64 {};
_fbfbd :=_cefef .Len ();for _bfda :=0;_bfda < _fbfbd -1;_bfda ++{_bddce :=_bbe .TraceToDirectObject (_cefef .Get (_bfda ));_fcbc ,_gbcg :=_bbe .GetIntVal (_bddce );if !_gbcg {return nil ,_g .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_bfda ,_bddce );
};_bfda ++;if _bfda > _fbfbd -1{return nil ,_g .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_cefef );};_cbefa :=_bbe .TraceToDirectObject (_cefef .Get (_bfda ));
switch _cbefa .(type ){case *_bbe .PdfObjectArray :_dfcd ,_ :=_bbe .GetArray (_cbefa );if _gcadd ,_cbdfa :=_dfcd .ToFloat64Array ();_cbdfa ==nil {for _dcae :=0;_dcae < len (_gcadd );_dcae ++{_fbgbc [_ff .CharCode (_fcbc +_dcae )]=_gcadd [_dcae ];};}else {return nil ,_g .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_bfda ,_cbefa );
};case *_bbe .PdfObjectInteger :_agea ,_cegb :=_bbe .GetIntVal (_cbefa );if !_cegb {return nil ,_g .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_bfda ,_cbefa );
};_bfda ++;if _bfda > _fbfbd -1{return nil ,_g .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_cefef );};_degae :=_cefef .Get (_bfda );_eecgc ,_dcgf :=_bbe .GetNumberAsFloat (_degae );
if _dcgf !=nil {return nil ,_g .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_bfda ,_degae );};for _beeac :=_fcbc ;_beeac <=_agea ;
_beeac ++{_fbgbc [_ff .CharCode (_beeac )]=_eecgc ;};default:return nil ,_g .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_bfda ,_cbefa );
};};return _fbgbc ,nil ;};

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;func (_cffg *PdfReader )buildOutlineTree (_gbgcd _bbe .PdfObject ,_bcbg *PdfOutlineTreeNode ,_facbe *PdfOutlineTreeNode ,_gbefc map[_bbe .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _gbefc ==nil {_gbefc =map[_bbe .PdfObject ]struct{}{};
};_gbefc [_gbgcd ]=struct{}{};_cgebf ,_bbbde :=_gbgcd .(*_bbe .PdfIndirectObject );if !_bbbde {return nil ,nil ,_g .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_gbgcd );
};_bdebaf ,_feeg :=_cgebf .PdfObject .(*_bbe .PdfObjectDictionary );if !_feeg {return nil ,nil ,_cc .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_gcf .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_bdebaf ,_cgebf ,_cgebf );
if _bfcc :=_bdebaf .Get ("\u0054\u0069\u0074l\u0065");_bfcc !=nil {_fcacgd ,_bgag :=_cffg .newPdfOutlineItemFromIndirectObject (_cgebf );if _bgag !=nil {return nil ,nil ,_bgag ;};_fcacgd .Parent =_bcbg ;_fcacgd .Prev =_facbe ;_eggdc :=_bbe .ResolveReference (_bdebaf .Get ("\u0046\u0069\u0072s\u0074"));
if _ ,_aedad :=_gbefc [_eggdc ];_eggdc !=nil &&_eggdc !=_cgebf &&!_aedad {if !_bbe .IsNullObject (_eggdc ){_cece ,_efdfag ,_fdbgcd :=_cffg .buildOutlineTree (_eggdc ,&_fcacgd .PdfOutlineTreeNode ,nil ,_gbefc );if _fdbgcd !=nil {_gcf .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_fdbgcd );
}else {_fcacgd .First =_cece ;_fcacgd .Last =_efdfag ;};};};_bbfcd :=_bbe .ResolveReference (_bdebaf .Get ("\u004e\u0065\u0078\u0074"));if _ ,_gaecfc :=_gbefc [_bbfcd ];_bbfcd !=nil &&_bbfcd !=_cgebf &&!_gaecfc {if !_bbe .IsNullObject (_bbfcd ){_gfdbg ,_edef ,_bcfeb :=_cffg .buildOutlineTree (_bbfcd ,_bcbg ,&_fcacgd .PdfOutlineTreeNode ,_gbefc );
if _bcfeb !=nil {_gcf .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_bcfeb );
}else {_fcacgd .Next =_gfdbg ;return &_fcacgd .PdfOutlineTreeNode ,_edef ,nil ;};};};return &_fcacgd .PdfOutlineTreeNode ,&_fcacgd .PdfOutlineTreeNode ,nil ;};_bbfdca ,_dbbbb :=_gbbb (_cgebf );if _dbbbb !=nil {return nil ,nil ,_dbbbb ;};_bbfdca .Parent =_bcbg ;
if _gdeeg :=_bdebaf .Get ("\u0046\u0069\u0072s\u0074");_gdeeg !=nil {_gdeeg =_bbe .ResolveReference (_gdeeg );if _ ,_ggfgf :=_gbefc [_gdeeg ];_gdeeg !=nil &&_gdeeg !=_cgebf &&!_ggfgf {_ccde :=_bbe .TraceToDirectObject (_gdeeg );if _ ,_dgcf :=_ccde .(*_bbe .PdfObjectNull );
!_dgcf &&_ccde !=nil {_aadfec ,_bgdfc ,_dccdd :=_cffg .buildOutlineTree (_gdeeg ,&_bbfdca .PdfOutlineTreeNode ,nil ,_gbefc );if _dccdd !=nil {_gcf .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_dccdd );
}else {_bbfdca .First =_aadfec ;_bbfdca .Last =_bgdfc ;};};};};return &_bbfdca .PdfOutlineTreeNode ,&_bbfdca .PdfOutlineTreeNode ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ccfbe *PdfAnnotationScreen )ToPdfObject ()_bbe .PdfObject {_ccfbe .PdfAnnotation .ToPdfObject ();_eeaf :=_ccfbe ._dbg ;_cgb :=_eeaf .PdfObject .(*_bbe .PdfObjectDictionary );_cgb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbe .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));
_cgb .SetIfNotNil ("\u0054",_ccfbe .T );_cgb .SetIfNotNil ("\u004d\u004b",_ccfbe .MK );_cgb .SetIfNotNil ("\u0041",_ccfbe .A );_cgb .SetIfNotNil ("\u0041\u0041",_ccfbe .AA );return _eeaf ;};