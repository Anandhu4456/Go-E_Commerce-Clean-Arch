//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package fonts ;import (_de "bytes";_ab "encoding/binary";_fa "errors";_b "fmt";_ff "github.com/unidoc/unipdf/v3/common";_e "github.com/unidoc/unipdf/v3/core";_ga "github.com/unidoc/unipdf/v3/internal/cmap";_g "github.com/unidoc/unipdf/v3/internal/textencoding";
_a "io";_bf "os";_f "regexp";_dcc "sort";_dc "strings";_c "sync";);func (_bc *RuneCharSafeMap )Length ()int {_bc ._ffe .RLock ();defer _bc ._ffe .RUnlock ();return len (_bc ._gag );};const (FontWeightMedium FontWeight =iota ;FontWeightBold ;FontWeightRoman ;
);func RegisterStdFont (name StdFontName ,fnc func ()StdFont ,aliases ...StdFontName ){if _ ,_aed :=_cfb .read (name );_aed {panic ("\u0066o\u006e\u0074\u0020\u0061l\u0072\u0065\u0061\u0064\u0079 \u0072e\u0067i\u0073\u0074\u0065\u0072\u0065\u0064\u003a "+string (name ));
};_cfb .write (name ,fnc );for _ ,_gb :=range aliases {RegisterStdFont (_gb ,fnc );};};func _ddd ()StdFont {_dcd .Do (_afc );_cb :=Descriptor {Name :CourierBoldName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0021,BBox :[4]float64 {-113,-250,749,801},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_cb ,_ffg );};func _cgb ()StdFont {_gaf .Do (_dfb );_eda :=Descriptor {Name :TimesBoldItalicName ,Family :_bgd ,Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-200,-218,996,921},ItalicAngle :-15,Ascent :683,Descent :-217,CapHeight :669,XHeight :462,StemV :121,StemH :42};
return NewStdFont (_eda ,_cae );};func _cgf ()StdFont {_gca :=_g .NewZapfDingbatsEncoder ();_ebd :=Descriptor {Name :ZapfDingbatsName ,Family :string (ZapfDingbatsName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-1,-143,981,820},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :90,StemH :28};
return NewStdFontWithEncoding (_ebd ,_abb ,_gca );};func (_eb CharMetrics )String ()string {return _b .Sprintf ("<\u0025\u002e\u0031\u0066\u002c\u0025\u002e\u0031\u0066\u003e",_eb .Wx ,_eb .Wy );};func (_dd *RuneCharSafeMap )Range (f func (_aba rune ,_dbf CharMetrics )(_fd bool )){_dd ._ffe .RLock ();
defer _dd ._ffe .RUnlock ();for _fg ,_bd :=range _dd ._gag {if f (_fg ,_bd ){break ;};};};var _bge *RuneCharSafeMap ;func (_ef *RuneCharSafeMap )Copy ()*RuneCharSafeMap {_ed :=MakeRuneCharSafeMap (_ef .Length ());_ef .Range (func (_ac rune ,_fac CharMetrics )(_df bool ){_ed ._gag [_ac ]=_fac ;
return false });return _ed ;};type RuneCharSafeMap struct{_gag map[rune ]CharMetrics ;_ffe _c .RWMutex ;};func _eaf ()StdFont {_gaf .Do (_dfb );_dbd :=Descriptor {Name :TimesItalicName ,Family :_bgd ,Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-169,-217,1010,883},ItalicAngle :-15.5,Ascent :683,Descent :-217,CapHeight :653,XHeight :441,StemV :76,StemH :32};
return NewStdFont (_dbd ,_deg );};func _ffgf ()StdFont {_bec .Do (_fda );_bb :=Descriptor {Name :HelveticaBoldObliqueName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-174,-228,1114,962},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_bb ,_gfe );};var _dcd _c .Once ;func _dfe ()StdFont {_bdf :=_g .NewSymbolEncoder ();_fagc :=Descriptor {Name :SymbolName ,Family :string (SymbolName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-180,-293,1090,1010},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :85,StemH :92};
return NewStdFontWithEncoding (_fagc ,_ded ,_bdf );};var _eec =[]rune {'A','Æ','Á','Ă','Â','Ä','À','Ā','Ą','Å','Ã','B','C','Ć','Č','Ç','D','Ď','Đ','∆','E','É','Ě','Ê','Ë','Ė','È','Ē','Ę','Ð','€','F','G','Ğ','Ģ','H','I','Í','Î','Ï','İ','Ì','Ī','Į','J','K','Ķ','L','Ĺ','Ľ','Ļ','Ł','M','N','Ń','Ň','Ņ','Ñ','O','Œ','Ó','Ô','Ö','Ò','Ő','Ō','Ø','Õ','P','Q','R','Ŕ','Ř','Ŗ','S','Ś','Š','Ş','Ș','T','Ť','Ţ','Þ','U','Ú','Û','Ü','Ù','Ű','Ū','Ų','Ů','V','W','X','Y','Ý','Ÿ','Z','Ź','Ž','Ż','a','á','ă','â','´','ä','æ','à','ā','&','ą','å','^','~','*','@','ã','b','\\','|','{','}','[',']','˘','¦','•','c','ć','ˇ','č','ç','¸','¢','ˆ',':',',','\uf6c3','©','¤','d','†','‡','ď','đ','°','¨','÷','$','˙','ı','e','é','ě','ê','ë','ė','è','8','…','ē','—','–','ę','=','ð','!','¡','f','ﬁ','5','ﬂ','ƒ','4','⁄','g','ğ','ģ','ß','`','>','≥','«','»','‹','›','h','˝','-','i','í','î','ï','ì','ī','į','j','k','ķ','l','ĺ','ľ','ļ','<','≤','¬','◊','ł','m','¯','−','µ','×','n','ń','ň','ņ','9','≠','ñ','#','o','ó','ô','ö','œ','˛','ò','ő','ō','1','½','¼','¹','ª','º','ø','õ','p','¶','(',')','∂','%','.','·','‰','+','±','q','?','¿','"','„','“','”','‘','’','‚','\'','r','ŕ','√','ř','ŗ','®','˚','s','ś','š','ş','ș','§',';','7','6','/',' ','£','∑','t','ť','ţ','þ','3','¾','³','˜','™','2','²','u','ú','û','ü','ù','ű','ū','_','ų','ů','v','w','x','y','ý','ÿ','¥','z','ź','ž','ż','0'};
func (_cgbd *TtfType )MakeToUnicode ()*_ga .CMap {_dgbga :=make (map[_ga .CharCode ]rune );if len (_cgbd .GlyphNames )==0{for _gge :=range _cgbd .Chars {_dgbga [_ga .CharCode (_gge )]=_gge ;};return _ga .NewToUnicodeCMap (_dgbga );};for _aede ,_fef :=range _cgbd .Chars {_dcg :=_ga .CharCode (_aede );
_feb :=_cgbd .GlyphNames [_fef ];_dee ,_dfa :=_g .GlyphToRune (_feb );if !_dfa {_ff .Log .Debug ("\u004e\u006f \u0072\u0075\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065\u003d\u0030\u0078\u0025\u0030\u0034\u0078\u0020\u0067\u006c\u0079\u0070h=\u0025\u0071",_aede ,_feb );
_dee =_g .MissingCodeRune ;};_dgbga [_dcg ]=_dee ;};return _ga .NewToUnicodeCMap (_dgbga );};func _fda (){_abaf =MakeRuneCharSafeMap (len (_eec ));_age =MakeRuneCharSafeMap (len (_eec ));for _fafc ,_da :=range _eec {_abaf .Write (_da ,CharMetrics {Wx :float64 (_dgbg [_fafc ])});
_age .Write (_da ,CharMetrics {Wx :float64 (_efc [_fafc ])});};_cge =_abaf .Copy ();_gfe =_age .Copy ();};var _dfbe *RuneCharSafeMap ;func MakeRuneCharSafeMap (length int )*RuneCharSafeMap {return &RuneCharSafeMap {_gag :make (map[rune ]CharMetrics ,length )};
};func (_ddeg *ttfParser )Read32Fixed ()float64 {_beb :=float64 (_ddeg .ReadShort ());_fada :=float64 (_ddeg .ReadUShort ())/65536.0;return _beb +_fada ;};func (_ba *fontMap )write (_fag StdFontName ,_ge func ()StdFont ){_ba .Lock ();defer _ba .Unlock ();
_ba ._ae [_fag ]=_ge ;};var _bfe *RuneCharSafeMap ;func (_gbaf *ttfParser )ParseHhea ()error {if _cfab :=_gbaf .Seek ("\u0068\u0068\u0065\u0061");_cfab !=nil {return _cfab ;};_gbaf .Skip (4+15*2);_gbaf ._fba =_gbaf .ReadUShort ();return nil ;};var _age *RuneCharSafeMap ;
func (_dab *ttfParser )parseCmapFormat6 ()error {_ebf :=int (_dab .ReadUShort ());_eed :=int (_dab .ReadUShort ());_ff .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u0046o\u0072\u006d\u0061\u0074\u0036\u003a\u0020%s\u0020\u0066\u0069\u0072s\u0074\u0043\u006f\u0064\u0065\u003d\u0025\u0064\u0020en\u0074\u0072y\u0043\u006f\u0075\u006e\u0074\u003d\u0025\u0064",_dab ._feg .String (),_ebf ,_eed );
for _ccba :=0;_ccba < _eed ;_ccba ++{_bdb :=GID (_dab .ReadUShort ());_dab ._feg .Chars [rune (_ccba +_ebf )]=_bdb ;};return nil ;};var _abb =&RuneCharSafeMap {_gag :map[rune ]CharMetrics {' ':{Wx :278},'→':{Wx :838},'↔':{Wx :1016},'↕':{Wx :458},'①':{Wx :788},'②':{Wx :788},'③':{Wx :788},'④':{Wx :788},'⑤':{Wx :788},'⑥':{Wx :788},'⑦':{Wx :788},'⑧':{Wx :788},'⑨':{Wx :788},'⑩':{Wx :788},'■':{Wx :761},'▲':{Wx :892},'▼':{Wx :892},'◆':{Wx :788},'●':{Wx :791},'◗':{Wx :438},'★':{Wx :816},'☎':{Wx :719},'☛':{Wx :960},'☞':{Wx :939},'♠':{Wx :626},'♣':{Wx :776},'♥':{Wx :694},'♦':{Wx :595},'✁':{Wx :974},'✂':{Wx :961},'✃':{Wx :974},'✄':{Wx :980},'✆':{Wx :789},'✇':{Wx :790},'✈':{Wx :791},'✉':{Wx :690},'✌':{Wx :549},'✍':{Wx :855},'✎':{Wx :911},'✏':{Wx :933},'✐':{Wx :911},'✑':{Wx :945},'✒':{Wx :974},'✓':{Wx :755},'✔':{Wx :846},'✕':{Wx :762},'✖':{Wx :761},'✗':{Wx :571},'✘':{Wx :677},'✙':{Wx :763},'✚':{Wx :760},'✛':{Wx :759},'✜':{Wx :754},'✝':{Wx :494},'✞':{Wx :552},'✟':{Wx :537},'✠':{Wx :577},'✡':{Wx :692},'✢':{Wx :786},'✣':{Wx :788},'✤':{Wx :788},'✥':{Wx :790},'✦':{Wx :793},'✧':{Wx :794},'✩':{Wx :823},'✪':{Wx :789},'✫':{Wx :841},'✬':{Wx :823},'✭':{Wx :833},'✮':{Wx :816},'✯':{Wx :831},'✰':{Wx :923},'✱':{Wx :744},'✲':{Wx :723},'✳':{Wx :749},'✴':{Wx :790},'✵':{Wx :792},'✶':{Wx :695},'✷':{Wx :776},'✸':{Wx :768},'✹':{Wx :792},'✺':{Wx :759},'✻':{Wx :707},'✼':{Wx :708},'✽':{Wx :682},'✾':{Wx :701},'✿':{Wx :826},'❀':{Wx :815},'❁':{Wx :789},'❂':{Wx :789},'❃':{Wx :707},'❄':{Wx :687},'❅':{Wx :696},'❆':{Wx :689},'❇':{Wx :786},'❈':{Wx :787},'❉':{Wx :713},'❊':{Wx :791},'❋':{Wx :785},'❍':{Wx :873},'❏':{Wx :762},'❐':{Wx :762},'❑':{Wx :759},'❒':{Wx :759},'❖':{Wx :784},'❘':{Wx :138},'❙':{Wx :277},'❚':{Wx :415},'❛':{Wx :392},'❜':{Wx :392},'❝':{Wx :668},'❞':{Wx :668},'❡':{Wx :732},'❢':{Wx :544},'❣':{Wx :544},'❤':{Wx :910},'❥':{Wx :667},'❦':{Wx :760},'❧':{Wx :760},'❶':{Wx :788},'❷':{Wx :788},'❸':{Wx :788},'❹':{Wx :788},'❺':{Wx :788},'❻':{Wx :788},'❼':{Wx :788},'❽':{Wx :788},'❾':{Wx :788},'❿':{Wx :788},'➀':{Wx :788},'➁':{Wx :788},'➂':{Wx :788},'➃':{Wx :788},'➄':{Wx :788},'➅':{Wx :788},'➆':{Wx :788},'➇':{Wx :788},'➈':{Wx :788},'➉':{Wx :788},'➊':{Wx :788},'➋':{Wx :788},'➌':{Wx :788},'➍':{Wx :788},'➎':{Wx :788},'➏':{Wx :788},'➐':{Wx :788},'➑':{Wx :788},'➒':{Wx :788},'➓':{Wx :788},'➔':{Wx :894},'➘':{Wx :748},'➙':{Wx :924},'➚':{Wx :748},'➛':{Wx :918},'➜':{Wx :927},'➝':{Wx :928},'➞':{Wx :928},'➟':{Wx :834},'➠':{Wx :873},'➡':{Wx :828},'➢':{Wx :924},'➣':{Wx :924},'➤':{Wx :917},'➥':{Wx :930},'➦':{Wx :931},'➧':{Wx :463},'➨':{Wx :883},'➩':{Wx :836},'➪':{Wx :836},'➫':{Wx :867},'➬':{Wx :867},'➭':{Wx :696},'➮':{Wx :696},'➯':{Wx :874},'➱':{Wx :874},'➲':{Wx :760},'➳':{Wx :946},'➴':{Wx :771},'➵':{Wx :865},'➶':{Wx :771},'➷':{Wx :888},'➸':{Wx :967},'➹':{Wx :888},'➺':{Wx :831},'➻':{Wx :873},'➼':{Wx :927},'➽':{Wx :970},'➾':{Wx :918},'\uf8d7':{Wx :390},'\uf8d8':{Wx :390},'\uf8d9':{Wx :317},'\uf8da':{Wx :317},'\uf8db':{Wx :276},'\uf8dc':{Wx :276},'\uf8dd':{Wx :509},'\uf8de':{Wx :509},'\uf8df':{Wx :410},'\uf8e0':{Wx :410},'\uf8e1':{Wx :234},'\uf8e2':{Wx :234},'\uf8e3':{Wx :334},'\uf8e4':{Wx :334}}};
func (_bbe *ttfParser )ParseComponents ()error {if _gee :=_bbe .ParseHead ();_gee !=nil {return _gee ;};if _dfaf :=_bbe .ParseHhea ();_dfaf !=nil {return _dfaf ;};if _aeb :=_bbe .ParseMaxp ();_aeb !=nil {return _aeb ;};if _efa :=_bbe .ParseHmtx ();_efa !=nil {return _efa ;
};if _ ,_abf :=_bbe ._edb ["\u006e\u0061\u006d\u0065"];_abf {if _ffd :=_bbe .ParseName ();_ffd !=nil {return _ffd ;};};if _ ,_ceg :=_bbe ._edb ["\u004f\u0053\u002f\u0032"];_ceg {if _bfd :=_bbe .ParseOS2 ();_bfd !=nil {return _bfd ;};};if _ ,_eac :=_bbe ._edb ["\u0070\u006f\u0073\u0074"];
_eac {if _aae :=_bbe .ParsePost ();_aae !=nil {return _aae ;};};if _ ,_acbd :=_bbe ._edb ["\u0063\u006d\u0061\u0070"];_acbd {if _ddee :=_bbe .ParseCmap ();_ddee !=nil {return _ddee ;};};return nil ;};var _ggg *RuneCharSafeMap ;func (_gcg *ttfParser )ReadStr (length int )(string ,error ){_bbc :=make ([]byte ,length );
_bgf ,_adg :=_gcg ._cbb .Read (_bbc );if _adg !=nil {return "",_adg ;}else if _bgf !=length {return "",_b .Errorf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0073",length );
};return string (_bbc ),nil ;};func (_cgcf *TtfType )NewEncoder ()_g .TextEncoder {return _g .NewTrueTypeFontEncoder (_cgcf .Chars )};var _deg *RuneCharSafeMap ;func init (){RegisterStdFont (CourierName ,_cc ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u0043\u006f\u0075\u0072\u0069e\u0072\u004e\u0065\u0077","\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077");
RegisterStdFont (CourierBoldName ,_ddd ,"\u0043o\u0075r\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (CourierObliqueName ,_gc ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (CourierBoldObliqueName ,_facd ,"C\u006f\u0075\u0072\u0069er\u004ee\u0077\u002c\u0042\u006f\u006cd\u0049\u0074\u0061\u006c\u0069\u0063");};func (_bg *RuneCharSafeMap )Read (b rune )(CharMetrics ,bool ){_bg ._ffe .RLock ();defer _bg ._ffe .RUnlock ();
_aa ,_ad :=_bg ._gag [b ];return _aa ,_ad ;};var _ded =&RuneCharSafeMap {_gag :map[rune ]CharMetrics {' ':{Wx :250},'!':{Wx :333},'#':{Wx :500},'%':{Wx :833},'&':{Wx :778},'(':{Wx :333},')':{Wx :333},'+':{Wx :549},',':{Wx :250},'.':{Wx :250},'/':{Wx :278},'0':{Wx :500},'1':{Wx :500},'2':{Wx :500},'3':{Wx :500},'4':{Wx :500},'5':{Wx :500},'6':{Wx :500},'7':{Wx :500},'8':{Wx :500},'9':{Wx :500},':':{Wx :278},';':{Wx :278},'<':{Wx :549},'=':{Wx :549},'>':{Wx :549},'?':{Wx :444},'[':{Wx :333},']':{Wx :333},'_':{Wx :500},'{':{Wx :480},'|':{Wx :200},'}':{Wx :480},'¬':{Wx :713},'°':{Wx :400},'±':{Wx :549},'µ':{Wx :576},'×':{Wx :549},'÷':{Wx :549},'ƒ':{Wx :500},'Α':{Wx :722},'Β':{Wx :667},'Γ':{Wx :603},'Ε':{Wx :611},'Ζ':{Wx :611},'Η':{Wx :722},'Θ':{Wx :741},'Ι':{Wx :333},'Κ':{Wx :722},'Λ':{Wx :686},'Μ':{Wx :889},'Ν':{Wx :722},'Ξ':{Wx :645},'Ο':{Wx :722},'Π':{Wx :768},'Ρ':{Wx :556},'Σ':{Wx :592},'Τ':{Wx :611},'Υ':{Wx :690},'Φ':{Wx :763},'Χ':{Wx :722},'Ψ':{Wx :795},'α':{Wx :631},'β':{Wx :549},'γ':{Wx :411},'δ':{Wx :494},'ε':{Wx :439},'ζ':{Wx :494},'η':{Wx :603},'θ':{Wx :521},'ι':{Wx :329},'κ':{Wx :549},'λ':{Wx :549},'ν':{Wx :521},'ξ':{Wx :493},'ο':{Wx :549},'π':{Wx :549},'ρ':{Wx :549},'ς':{Wx :439},'σ':{Wx :603},'τ':{Wx :439},'υ':{Wx :576},'φ':{Wx :521},'χ':{Wx :549},'ψ':{Wx :686},'ω':{Wx :686},'ϑ':{Wx :631},'ϒ':{Wx :620},'ϕ':{Wx :603},'ϖ':{Wx :713},'•':{Wx :460},'…':{Wx :1000},'′':{Wx :247},'″':{Wx :411},'⁄':{Wx :167},'€':{Wx :750},'ℑ':{Wx :686},'℘':{Wx :987},'ℜ':{Wx :795},'Ω':{Wx :768},'ℵ':{Wx :823},'←':{Wx :987},'↑':{Wx :603},'→':{Wx :987},'↓':{Wx :603},'↔':{Wx :1042},'↵':{Wx :658},'⇐':{Wx :987},'⇑':{Wx :603},'⇒':{Wx :987},'⇓':{Wx :603},'⇔':{Wx :1042},'∀':{Wx :713},'∂':{Wx :494},'∃':{Wx :549},'∅':{Wx :823},'∆':{Wx :612},'∇':{Wx :713},'∈':{Wx :713},'∉':{Wx :713},'∋':{Wx :439},'∏':{Wx :823},'∑':{Wx :713},'−':{Wx :549},'∗':{Wx :500},'√':{Wx :549},'∝':{Wx :713},'∞':{Wx :713},'∠':{Wx :768},'∧':{Wx :603},'∨':{Wx :603},'∩':{Wx :768},'∪':{Wx :768},'∫':{Wx :274},'∴':{Wx :863},'∼':{Wx :549},'≅':{Wx :549},'≈':{Wx :549},'≠':{Wx :549},'≡':{Wx :549},'≤':{Wx :549},'≥':{Wx :549},'⊂':{Wx :713},'⊃':{Wx :713},'⊄':{Wx :713},'⊆':{Wx :713},'⊇':{Wx :713},'⊕':{Wx :768},'⊗':{Wx :768},'⊥':{Wx :658},'⋅':{Wx :250},'⌠':{Wx :686},'⌡':{Wx :686},'〈':{Wx :329},'〉':{Wx :329},'◊':{Wx :494},'♠':{Wx :753},'♣':{Wx :753},'♥':{Wx :753},'♦':{Wx :753},'\uf6d9':{Wx :790},'\uf6da':{Wx :790},'\uf6db':{Wx :890},'\uf8e5':{Wx :500},'\uf8e6':{Wx :603},'\uf8e7':{Wx :1000},'\uf8e8':{Wx :790},'\uf8e9':{Wx :790},'\uf8ea':{Wx :786},'\uf8eb':{Wx :384},'\uf8ec':{Wx :384},'\uf8ed':{Wx :384},'\uf8ee':{Wx :384},'\uf8ef':{Wx :384},'\uf8f0':{Wx :384},'\uf8f1':{Wx :494},'\uf8f2':{Wx :494},'\uf8f3':{Wx :494},'\uf8f4':{Wx :494},'\uf8f5':{Wx :686},'\uf8f6':{Wx :384},'\uf8f7':{Wx :384},'\uf8f8':{Wx :384},'\uf8f9':{Wx :384},'\uf8fa':{Wx :384},'\uf8fb':{Wx :384},'\uf8fc':{Wx :494},'\uf8fd':{Wx :494},'\uf8fe':{Wx :494},'\uf8ff':{Wx :790}}};
func NewFontFile2FromPdfObject (obj _e .PdfObject )(TtfType ,error ){obj =_e .TraceToDirectObject (obj );_def ,_bac :=obj .(*_e .PdfObjectStream );if !_bac {_ff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u0073\u0074\u0072e\u0061\u006d \u0028\u0025\u0054\u0029",obj );
return TtfType {},_e .ErrTypeError ;};_cec ,_fbf :=_e .DecodeStream (_def );if _fbf !=nil {return TtfType {},_fbf ;};_aedb :=ttfParser {_cbb :_de .NewReader (_cec )};return _aedb .Parse ();};var _dgbg =[]int16 {667,1000,667,667,667,667,667,667,667,667,667,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,500,667,667,556,556,556,556,556,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,667,556,556,469,584,389,1015,556,556,278,260,334,334,278,278,333,260,350,500,500,333,500,500,333,556,333,278,278,250,737,556,556,556,556,643,556,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,556,278,333,278,500,556,500,556,556,167,556,556,556,611,333,584,549,556,556,333,333,556,333,333,222,278,278,278,278,278,222,222,500,500,222,222,299,222,584,549,584,471,222,833,333,584,556,584,556,556,556,556,556,549,556,556,556,556,556,556,944,333,556,556,556,556,834,834,333,370,365,611,556,556,537,333,333,476,889,278,278,1000,584,584,556,556,611,355,333,333,333,222,222,222,191,333,333,453,333,333,737,333,500,500,500,500,500,556,278,556,556,278,278,556,600,278,317,278,556,556,834,333,333,1000,556,333,556,556,556,556,556,556,556,556,556,556,500,722,500,500,500,500,556,500,500,500,500,556};
func (_ggf *TtfType )String ()string {return _b .Sprintf ("\u0046\u004fN\u0054\u005f\u0046\u0049\u004cE\u0032\u007b\u0025\u0023\u0071 \u0055\u006e\u0069\u0074\u0073\u0050\u0065\u0072\u0045\u006d\u003d\u0025\u0064\u0020\u0042\u006f\u006c\u0064\u003d\u0025\u0074\u0020\u0049\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065\u003d\u0025\u0066\u0020"+"\u0043\u0061pH\u0065\u0069\u0067h\u0074\u003d\u0025\u0064 Ch\u0061rs\u003d\u0025\u0064\u0020\u0047\u006c\u0079ph\u004e\u0061\u006d\u0065\u0073\u003d\u0025d\u007d",_ggf .PostScriptName ,_ggf .UnitsPerEm ,_ggf .Bold ,_ggf .ItalicAngle ,_ggf .CapHeight ,len (_ggf .Chars ),len (_ggf .GlyphNames ));
};func (_af *RuneCharSafeMap )Write (b rune ,r CharMetrics ){_af ._ffe .Lock ();defer _af ._ffe .Unlock ();_af ._gag [b ]=r ;};func _afc (){const _faf =600;_bfe =MakeRuneCharSafeMap (len (_eec ));for _ ,_aea :=range _eec {_bfe .Write (_aea ,CharMetrics {Wx :_faf });
};_ffg =_bfe .Copy ();_ggg =_bfe .Copy ();_bge =_bfe .Copy ();};func (_cdfe *ttfParser )ParsePost ()error {if _edf :=_cdfe .Seek ("\u0070\u006f\u0073\u0074");_edf !=nil {return _edf ;};_bbeg :=_cdfe .Read32Fixed ();_cdfe ._feg .ItalicAngle =_cdfe .Read32Fixed ();
_cdfe ._feg .UnderlinePosition =_cdfe .ReadShort ();_cdfe ._feg .UnderlineThickness =_cdfe .ReadShort ();_cdfe ._feg .IsFixedPitch =_cdfe .ReadULong ()!=0;_cdfe .ReadULong ();_cdfe .ReadULong ();_cdfe .ReadULong ();_cdfe .ReadULong ();_ff .Log .Trace ("\u0050a\u0072\u0073\u0065\u0050\u006f\u0073\u0074\u003a\u0020\u0066\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065\u003d\u0025\u0066",_bbeg );
switch _bbeg {case 1.0:_cdfe ._feg .GlyphNames =_edc ;case 2.0:_gfbd :=int (_cdfe .ReadUShort ());_aegf :=make ([]int ,_gfbd );_cdfe ._feg .GlyphNames =make ([]GlyphName ,_gfbd );_ebe :=-1;for _cgbgd :=0;_cgbgd < _gfbd ;_cgbgd ++{_aaa :=int (_cdfe .ReadUShort ());
_aegf [_cgbgd ]=_aaa ;if _aaa <=0x7fff&&_aaa > _ebe {_ebe =_aaa ;};};var _aagc []GlyphName ;if _ebe >=len (_edc ){_aagc =make ([]GlyphName ,_ebe -len (_edc )+1);for _faba :=0;_faba < _ebe -len (_edc )+1;_faba ++{_bdag :=int (_cdfe .readByte ());_dbfa ,_cbf :=_cdfe .ReadStr (_bdag );
if _cbf !=nil {return _cbf ;};_aagc [_faba ]=GlyphName (_dbfa );};};for _agg :=0;_agg < _gfbd ;_agg ++{_dae :=_aegf [_agg ];if _dae < len (_edc ){_cdfe ._feg .GlyphNames [_agg ]=_edc [_dae ];}else if _dae >=len (_edc )&&_dae <=32767{_cdfe ._feg .GlyphNames [_agg ]=_aagc [_dae -len (_edc )];
}else {_cdfe ._feg .GlyphNames [_agg ]="\u002e\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064";};};case 2.5:_gfc :=make ([]int ,_cdfe ._add );for _cbbf :=0;_cbbf < len (_gfc );_cbbf ++{_adeg :=int (_cdfe .ReadSByte ());_gfc [_cbbf ]=_cbbf +1+_adeg ;
};_cdfe ._feg .GlyphNames =make ([]GlyphName ,len (_gfc ));for _caeb :=0;_caeb < len (_cdfe ._feg .GlyphNames );_caeb ++{_fbff :=_edc [_gfc [_caeb ]];_cdfe ._feg .GlyphNames [_caeb ]=_fbff ;};case 3.0:_ff .Log .Debug ("\u004e\u006f\u0020\u0050\u006f\u0073t\u0053\u0063\u0072i\u0070\u0074\u0020n\u0061\u006d\u0065\u0020\u0069\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020is\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0066\u006f\u006e\u0074\u002e");
default:_ff .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020f\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065=\u0025\u0066",_bbeg );};return nil ;};func _cbe ()StdFont {_bec .Do (_fda );_eg :=Descriptor {Name :HelveticaBoldName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-170,-228,1003,962},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_eg ,_age );};func (_cbga *ttfParser )Skip (n int ){_cbga ._cbb .Seek (int64 (n ),_a .SeekCurrent )};func (_cbg *ttfParser )ParseHead ()error {if _cgba :=_cbg .Seek ("\u0068\u0065\u0061\u0064");_cgba !=nil {return _cgba ;};_cbg .Skip (3*4);
_eef :=_cbg .ReadULong ();if _eef !=0x5F0F3CF5{_ff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0063\u006fr\u0072e\u0063\u0074\u0020\u006d\u0061\u0067\u0069\u0063\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u002e\u0020\u0046\u006fn\u0074\u0020\u006d\u0061\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0020\u0063\u006f\u0072\u0072\u0065\u0063t\u006c\u0079\u002e\u0020\u0025\u0073",_cbg );
};_cbg .Skip (2);_cbg ._feg .UnitsPerEm =_cbg .ReadUShort ();_cbg .Skip (2*8);_cbg ._feg .Xmin =_cbg .ReadShort ();_cbg ._feg .Ymin =_cbg .ReadShort ();_cbg ._feg .Xmax =_cbg .ReadShort ();_cbg ._feg .Ymax =_cbg .ReadShort ();return nil ;};func init (){RegisterStdFont (HelveticaName ,_cg ,"\u0041\u0072\u0069a\u006c");
RegisterStdFont (HelveticaBoldName ,_cbe ,"\u0041\u0072\u0069\u0061\u006c\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (HelveticaObliqueName ,_ca ,"\u0041\u0072\u0069a\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063");RegisterStdFont (HelveticaBoldObliqueName ,_ffgf ,"\u0041\u0072i\u0061\u006c\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};const (_bgd ="\u0054\u0069\u006de\u0073";TimesRomanName =StdFontName ("T\u0069\u006d\u0065\u0073\u002d\u0052\u006f\u006d\u0061\u006e");TimesBoldName =StdFontName ("\u0054\u0069\u006d\u0065\u0073\u002d\u0042\u006f\u006c\u0064");TimesItalicName =StdFontName ("\u0054\u0069\u006de\u0073\u002d\u0049\u0074\u0061\u006c\u0069\u0063");
TimesBoldItalicName =StdFontName ("\u0054\u0069m\u0065\u0073\u002dB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063"););func (_gac *ttfParser )Seek (tag string )error {_ebeb ,_gefb :=_gac ._edb [tag ];if !_gefb {return _b .Errorf ("\u0074\u0061\u0062\u006ce \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0073",tag );
};_gac ._cbb .Seek (int64 (_ebeb ),_a .SeekStart );return nil ;};func _facd ()StdFont {_dcd .Do (_afc );_dgb :=Descriptor {Name :CourierBoldObliqueName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0061,BBox :[4]float64 {-57,-250,869,801},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_dgb ,_ggg );};func NewStdFontWithEncoding (desc Descriptor ,metrics *RuneCharSafeMap ,encoder _g .TextEncoder )StdFont {var _ag rune =0xA0;if _ ,_ada :=metrics .Read (_ag );!_ada {_fdd ,_ :=metrics .Read (0x20);metrics .Write (_ag ,_fdd );
};return StdFont {_bae :desc ,_cd :metrics ,_ec :encoder };};var _efc =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,556,722,722,611,611,611,611,611,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,722,556,556,584,584,389,975,556,611,278,280,389,389,333,333,333,280,350,556,556,333,556,556,333,556,333,333,278,250,737,556,611,556,556,743,611,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,611,333,333,333,611,556,611,556,556,167,611,611,611,611,333,584,549,556,556,333,333,611,333,333,278,278,278,278,278,278,278,278,556,556,278,278,400,278,584,549,584,494,278,889,333,584,611,584,611,611,611,611,556,549,611,556,611,611,611,611,944,333,611,611,611,556,834,834,333,370,365,611,611,611,556,333,333,494,889,278,278,1000,584,584,611,611,611,474,500,500,500,278,278,278,238,389,389,549,389,389,737,333,556,556,556,556,556,556,333,556,556,278,278,556,600,333,389,333,611,556,834,333,333,1000,556,333,611,611,611,611,611,611,611,556,611,611,556,778,556,556,556,556,556,500,500,500,500,556};
func (_abag StdFont )Encoder ()_g .TextEncoder {return _abag ._ec };func (_ffec *ttfParser )parseCmapFormat0 ()error {_cceg ,_fagd :=_ffec .ReadStr (256);if _fagd !=nil {return _fagd ;};_fce :=[]byte (_cceg );_ff .Log .Trace ("\u0070a\u0072\u0073e\u0043\u006d\u0061p\u0046\u006f\u0072\u006d\u0061\u0074\u0030:\u0020\u0025\u0073\u000a\u0064\u0061t\u0061\u0053\u0074\u0072\u003d\u0025\u002b\u0071\u000a\u0064\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d",_ffec ._feg .String (),_cceg ,_fce );
for _cgeb ,_deb :=range _fce {_ffec ._feg .Chars [rune (_cgeb )]=GID (_deb );};return nil ;};var _bec _c .Once ;var _cge *RuneCharSafeMap ;func (_ade StdFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_fad ,_baf :=_ade ._cd .Read (r );return _fad ,_baf ;
};var _ffg *RuneCharSafeMap ;func (_gg *fontMap )read (_cf StdFontName )(func ()StdFont ,bool ){_gg .Lock ();defer _gg .Unlock ();_ce ,_fdg :=_gg ._ae [_cf ];return _ce ,_fdg ;};func _dfb (){_dfbe =MakeRuneCharSafeMap (len (_eec ));_fcg =MakeRuneCharSafeMap (len (_eec ));
_cae =MakeRuneCharSafeMap (len (_eec ));_deg =MakeRuneCharSafeMap (len (_eec ));for _dgd ,_fae :=range _eec {_dfbe .Write (_fae ,CharMetrics {Wx :float64 (_cgbg [_dgd ])});_fcg .Write (_fae ,CharMetrics {Wx :float64 (_eca [_dgd ])});_cae .Write (_fae ,CharMetrics {Wx :float64 (_cdc [_dgd ])});
_deg .Write (_fae ,CharMetrics {Wx :float64 (_fbd [_dgd ])});};};func init (){RegisterStdFont (SymbolName ,_dfe ,"\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063","S\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064","\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (ZapfDingbatsName ,_cgf );};func (_aecc *ttfParser )parseCmapSubtable31 (_gged int64 )error {_cea :=make ([]rune ,0,8);_gbg :=make ([]rune ,0,8);_abd :=make ([]int16 ,0,8);_egc :=make ([]uint16 ,0,8);_aecc ._feg .Chars =make (map[rune ]GID );
_aecc ._cbb .Seek (int64 (_aecc ._edb ["\u0063\u006d\u0061\u0070"])+_gged ,_a .SeekStart );_fafe :=_aecc .ReadUShort ();if _fafe !=4{_ff .Log .Debug ("u\u006e\u0065\u0078\u0070\u0065\u0063t\u0065\u0064\u0020\u0073\u0075\u0062t\u0061\u0062\u006c\u0065\u0020\u0066\u006fr\u006d\u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0028\u0025w\u0029",_fafe );
return nil ;};_aecc .Skip (2*2);_aag :=int (_aecc .ReadUShort ()/2);_aecc .Skip (3*2);for _dbdf :=0;_dbdf < _aag ;_dbdf ++{_gbg =append (_gbg ,rune (_aecc .ReadUShort ()));};_aecc .Skip (2);for _cca :=0;_cca < _aag ;_cca ++{_cea =append (_cea ,rune (_aecc .ReadUShort ()));
};for _aeaa :=0;_aeaa < _aag ;_aeaa ++{_abd =append (_abd ,_aecc .ReadShort ());};_cdb ,_ :=_aecc ._cbb .Seek (int64 (0),_a .SeekCurrent );for _gfg :=0;_gfg < _aag ;_gfg ++{_egc =append (_egc ,_aecc .ReadUShort ());};for _dfag :=0;_dfag < _aag ;_dfag ++{_bace :=_cea [_dfag ];
_gedb :=_gbg [_dfag ];_ccc :=_abd [_dfag ];_acdb :=_egc [_dfag ];if _acdb > 0{_aecc ._cbb .Seek (_cdb +2*int64 (_dfag )+int64 (_acdb ),_a .SeekStart );};for _cdbf :=_bace ;_cdbf <=_gedb ;_cdbf ++{if _cdbf ==0xFFFF{break ;};var _bgb int32 ;if _acdb > 0{_bgb =int32 (_aecc .ReadUShort ());
if _bgb > 0{_bgb +=int32 (_ccc );};}else {_bgb =_cdbf +int32 (_ccc );};if _bgb >=65536{_bgb -=65536;};if _bgb > 0{_aecc ._feg .Chars [_cdbf ]=GID (_bgb );};};};return nil ;};type GlyphName =_g .GlyphName ;func IsStdFont (name StdFontName )bool {_ ,_ee :=_cfb .read (name );
return _ee };func (_ggb *ttfParser )ParseCmap ()error {var _dba int64 ;if _cac :=_ggb .Seek ("\u0063\u006d\u0061\u0070");_cac !=nil {return _cac ;};_ggb .ReadUShort ();_gbe :=int (_ggb .ReadUShort ());_baff :=int64 (0);_fca :=int64 (0);_cce :=int64 (0);
for _gaff :=0;_gaff < _gbe ;_gaff ++{_gbeb :=_ggb .ReadUShort ();_agf :=_ggb .ReadUShort ();_dba =int64 (_ggb .ReadULong ());if _gbeb ==3&&_agf ==1{_fca =_dba ;}else if _gbeb ==3&&_agf ==10{_cce =_dba ;}else if _gbeb ==1&&_agf ==0{_baff =_dba ;};};if _baff !=0{if _cdcg :=_ggb .parseCmapVersion (_baff );
_cdcg !=nil {return _cdcg ;};};if _fca !=0{if _dgf :=_ggb .parseCmapSubtable31 (_fca );_dgf !=nil {return _dgf ;};};if _cce !=0{if _dffb :=_ggb .parseCmapVersion (_cce );_dffb !=nil {return _dffb ;};};if _fca ==0&&_baff ==0&&_cce ==0{_ff .Log .Debug ("\u0074\u0074\u0066P\u0061\u0072\u0073\u0065\u0072\u002e\u0050\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u002e\u0020\u004e\u006f\u0020\u0033\u0031\u002c\u0020\u0031\u0030\u002c\u0020\u00331\u0030\u0020\u0074\u0061\u0062\u006c\u0065\u002e");
};return nil ;};var _fbd =[]int16 {611,889,611,611,611,611,611,611,611,611,611,611,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,611,722,722,722,722,333,333,333,333,333,333,333,333,444,667,667,556,556,611,556,556,833,667,667,667,667,667,722,944,722,722,722,722,722,722,722,722,611,722,611,611,611,611,500,500,500,500,500,556,556,556,611,722,722,722,722,722,722,722,722,722,611,833,611,556,556,556,556,556,556,556,500,500,500,500,333,500,667,500,500,778,500,500,422,541,500,920,500,500,278,275,400,400,389,389,333,275,350,444,444,333,444,444,333,500,333,333,250,250,760,500,500,500,500,544,500,400,333,675,500,333,278,444,444,444,444,444,444,444,500,889,444,889,500,444,675,500,333,389,278,500,500,500,500,500,167,500,500,500,500,333,675,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,444,444,278,278,300,278,675,549,675,471,278,722,333,675,500,675,500,500,500,500,500,549,500,500,500,500,500,500,667,333,500,500,500,500,750,750,300,276,310,500,500,500,523,333,333,476,833,250,250,1000,675,675,500,500,500,420,556,556,556,333,333,333,214,389,389,453,389,389,760,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,300,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,444,667,444,444,444,444,500,389,389,389,389,500};
func init (){RegisterStdFont (TimesRomanName ,_aca ,"\u0054\u0069\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e","\u0054\u0069\u006de\u0073");RegisterStdFont (TimesBoldName ,_acd ,"\u0054i\u006de\u0073\u004e\u0065\u0077\u0052o\u006d\u0061n\u002c\u0042\u006f\u006c\u0064","\u0054\u0069\u006d\u0065\u0073\u002c\u0042\u006f\u006c\u0064");
RegisterStdFont (TimesItalicName ,_eaf ,"T\u0069m\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006da\u006e\u002c\u0049\u0074al\u0069\u0063","\u0054\u0069\u006de\u0073\u002c\u0049\u0074\u0061\u006c\u0069\u0063");RegisterStdFont (TimesBoldItalicName ,_cgb ,"\u0054i\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e,\u0042\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063","\u0054\u0069m\u0065\u0073\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};var _cae *RuneCharSafeMap ;func (_gd *ttfParser )ReadSByte ()(_eff int8 ){_ab .Read (_gd ._cbb ,_ab .BigEndian ,&_eff );return _eff };func (_fagcb *ttfParser )ParseOS2 ()error {if _ffdb :=_fagcb .Seek ("\u004f\u0053\u002f\u0032");_ffdb !=nil {return _ffdb ;
};_gbbd :=_fagcb .ReadUShort ();_fagcb .Skip (4*2);_fagcb .Skip (11*2+10+4*4+4);_gad :=_fagcb .ReadUShort ();_fagcb ._feg .Bold =(_gad &32)!=0;_fagcb .Skip (2*2);_fagcb ._feg .TypoAscender =_fagcb .ReadShort ();_fagcb ._feg .TypoDescender =_fagcb .ReadShort ();
if _gbbd >=2{_fagcb .Skip (3*2+2*4+2);_fagcb ._feg .CapHeight =_fagcb .ReadShort ();}else {_fagcb ._feg .CapHeight =0;};return nil ;};func (_dcdf *TtfType )MakeEncoder ()(_g .SimpleEncoder ,error ){_abaga :=make (map[_g .CharCode ]GlyphName );for _cfa :=_g .CharCode (0);
_cfa <=256;_cfa ++{_eba :=rune (_cfa );_dde ,_bde :=_dcdf .Chars [_eba ];if !_bde {continue ;};var _gggb GlyphName ;if int (_dde )>=0&&int (_dde )< len (_dcdf .GlyphNames ){_gggb =_dcdf .GlyphNames [_dde ];}else {_cgc :=rune (_dde );if _faea ,_cdce :=_g .RuneToGlyph (_cgc );
_cdce {_gggb =_faea ;};};if _gggb !=""{_abaga [_cfa ]=_gggb ;};};if len (_abaga )==0{_ff .Log .Debug ("WA\u0052\u004eI\u004e\u0047\u003a\u0020\u005a\u0065\u0072\u006f\u0020l\u0065\u006e\u0067\u0074\u0068\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u002e\u0020\u0074\u0074\u0066=\u0025s\u0020\u0043\u0068\u0061\u0072\u0073\u003d\u005b%\u00200\u0032\u0078]",_dcdf ,_dcdf .Chars );
};return _g .NewCustomSimpleTextEncoder (_abaga ,nil );};type TtfType struct{UnitsPerEm uint16 ;PostScriptName string ;Bold bool ;ItalicAngle float64 ;IsFixedPitch bool ;TypoAscender int16 ;TypoDescender int16 ;UnderlinePosition int16 ;UnderlineThickness int16 ;
Xmin ,Ymin ,Xmax ,Ymax int16 ;CapHeight int16 ;Widths []uint16 ;Chars map[rune ]GID ;GlyphNames []GlyphName ;};var _edc =[]GlyphName {"\u002en\u006f\u0074\u0064\u0065\u0066","\u002e\u006e\u0075l\u006c","\u006e\u006fn\u006d\u0061\u0072k\u0069\u006e\u0067\u0072\u0065\u0074\u0075\u0072\u006e","\u0073\u0070\u0061c\u0065","\u0065\u0078\u0063\u006c\u0061\u006d","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c","\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u0069\u0067\u006e","\u0064\u006f\u006c\u006c\u0061\u0072","\u0070e\u0072\u0063\u0065\u006e\u0074","\u0061m\u0070\u0065\u0072\u0073\u0061\u006ed","q\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067\u006c\u0065","\u0070a\u0072\u0065\u006e\u006c\u0065\u0066t","\u0070\u0061\u0072\u0065\u006e\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b","\u0070\u006c\u0075\u0073","\u0063\u006f\u006dm\u0061","\u0068\u0079\u0070\u0068\u0065\u006e","\u0070\u0065\u0072\u0069\u006f\u0064","\u0073\u006c\u0061s\u0068","\u007a\u0065\u0072\u006f","\u006f\u006e\u0065","\u0074\u0077\u006f","\u0074\u0068\u0072e\u0065","\u0066\u006f\u0075\u0072","\u0066\u0069\u0076\u0065","\u0073\u0069\u0078","\u0073\u0065\u0076e\u006e","\u0065\u0069\u0067h\u0074","\u006e\u0069\u006e\u0065","\u0063\u006f\u006co\u006e","\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn","\u006c\u0065\u0073\u0073","\u0065\u0071\u0075a\u006c","\u0067r\u0065\u0061\u0074\u0065\u0072","\u0071\u0075\u0065\u0073\u0074\u0069\u006f\u006e","\u0061\u0074","\u0041","\u0042","\u0043","\u0044","\u0045","\u0046","\u0047","\u0048","\u0049","\u004a","\u004b","\u004c","\u004d","\u004e","\u004f","\u0050","\u0051","\u0052","\u0053","\u0054","\u0055","\u0056","\u0057","\u0058","\u0059","\u005a","b\u0072\u0061\u0063\u006b\u0065\u0074\u006c\u0065\u0066\u0074","\u0062a\u0063\u006b\u0073\u006c\u0061\u0073h","\u0062\u0072\u0061c\u006b\u0065\u0074\u0072\u0069\u0067\u0068\u0074","a\u0073\u0063\u0069\u0069\u0063\u0069\u0072\u0063\u0075\u006d","\u0075\u006e\u0064\u0065\u0072\u0073\u0063\u006f\u0072\u0065","\u0067\u0072\u0061v\u0065","\u0061","\u0062","\u0063","\u0064","\u0065","\u0066","\u0067","\u0068","\u0069","\u006a","\u006b","\u006c","\u006d","\u006e","\u006f","\u0070","\u0071","\u0072","\u0073","\u0074","\u0075","\u0076","\u0077","\u0078","\u0079","\u007a","\u0062r\u0061\u0063\u0065\u006c\u0065\u0066t","\u0062\u0061\u0072","\u0062\u0072\u0061\u0063\u0065\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0063\u0069\u0069\u0074\u0069\u006c\u0064\u0065","\u0041d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0041\u0072\u0069n\u0067","\u0043\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0045\u0061\u0063\u0075\u0074\u0065","\u004e\u0074\u0069\u006c\u0064\u0065","\u004fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u0055d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0061\u0063\u0075\u0074\u0065","\u0061\u0067\u0072\u0061\u0076\u0065","a\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0074\u0069\u006c\u0064\u0065","\u0061\u0072\u0069n\u0067","\u0063\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0065\u0061\u0063\u0075\u0074\u0065","\u0065\u0067\u0072\u0061\u0076\u0065","e\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0065d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0069\u0061\u0063\u0075\u0074\u0065","\u0069\u0067\u0072\u0061\u0076\u0065","i\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0069d\u0069\u0065\u0072\u0065\u0073\u0069s","\u006e\u0074\u0069\u006c\u0064\u0065","\u006f\u0061\u0063\u0075\u0074\u0065","\u006f\u0067\u0072\u0061\u0076\u0065","o\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u006fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u006f\u0074\u0069\u006c\u0064\u0065","\u0075\u0061\u0063\u0075\u0074\u0065","\u0075\u0067\u0072\u0061\u0076\u0065","u\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0075d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0064\u0061\u0067\u0067\u0065\u0072","\u0064\u0065\u0067\u0072\u0065\u0065","\u0063\u0065\u006e\u0074","\u0073\u0074\u0065\u0072\u006c\u0069\u006e\u0067","\u0073e\u0063\u0074\u0069\u006f\u006e","\u0062\u0075\u006c\u006c\u0065\u0074","\u0070a\u0072\u0061\u0067\u0072\u0061\u0070h","\u0067\u0065\u0072\u006d\u0061\u006e\u0064\u0062\u006c\u0073","\u0072\u0065\u0067\u0069\u0073\u0074\u0065\u0072\u0065\u0064","\u0063o\u0070\u0079\u0072\u0069\u0067\u0068t","\u0074r\u0061\u0064\u0065\u006d\u0061\u0072k","\u0061\u0063\u0075t\u0065","\u0064\u0069\u0065\u0072\u0065\u0073\u0069\u0073","\u006e\u006f\u0074\u0065\u0071\u0075\u0061\u006c","\u0041\u0045","\u004f\u0073\u006c\u0061\u0073\u0068","\u0069\u006e\u0066\u0069\u006e\u0069\u0074\u0079","\u0070l\u0075\u0073\u006d\u0069\u006e\u0075s","\u006ce\u0073\u0073\u0065\u0071\u0075\u0061l","\u0067\u0072\u0065a\u0074\u0065\u0072\u0065\u0071\u0075\u0061\u006c","\u0079\u0065\u006e","\u006d\u0075","p\u0061\u0072\u0074\u0069\u0061\u006c\u0064\u0069\u0066\u0066","\u0073u\u006d\u006d\u0061\u0074\u0069\u006fn","\u0070r\u006f\u0064\u0075\u0063\u0074","\u0070\u0069","\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u006c","o\u0072\u0064\u0066\u0065\u006d\u0069\u006e\u0069\u006e\u0065","\u006f\u0072\u0064m\u0061\u0073\u0063\u0075\u006c\u0069\u006e\u0065","\u004f\u006d\u0065g\u0061","\u0061\u0065","\u006f\u0073\u006c\u0061\u0073\u0068","\u0071\u0075\u0065s\u0074\u0069\u006f\u006e\u0064\u006f\u0077\u006e","\u0065\u0078\u0063\u006c\u0061\u006d\u0064\u006f\u0077\u006e","\u006c\u006f\u0067\u0069\u0063\u0061\u006c\u006e\u006f\u0074","\u0072a\u0064\u0069\u0063\u0061\u006c","\u0066\u006c\u006f\u0072\u0069\u006e","a\u0070\u0070\u0072\u006f\u0078\u0065\u0071\u0075\u0061\u006c","\u0044\u0065\u006ct\u0061","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074r\u0069\u0067\u0068\u0074","\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073","\u006e\u006fn\u0062\u0072\u0065a\u006b\u0069\u006e\u0067\u0073\u0070\u0061\u0063\u0065","\u0041\u0067\u0072\u0061\u0076\u0065","\u0041\u0074\u0069\u006c\u0064\u0065","\u004f\u0074\u0069\u006c\u0064\u0065","\u004f\u0045","\u006f\u0065","\u0065\u006e\u0064\u0061\u0073\u0068","\u0065\u006d\u0064\u0061\u0073\u0068","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u006c\u0065\u0066\u0074","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c\u0072\u0069\u0067\u0068\u0074","\u0071u\u006f\u0074\u0065\u006c\u0065\u0066t","\u0071\u0075\u006f\u0074\u0065\u0072\u0069\u0067\u0068\u0074","\u0064\u0069\u0076\u0069\u0064\u0065","\u006co\u007a\u0065\u006e\u0067\u0065","\u0079d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0059d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e","\u0063\u0075\u0072\u0072\u0065\u006e\u0063\u0079","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006c\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006cr\u0069\u0067\u0068\u0074","\u0066\u0069","\u0066\u006c","\u0064a\u0067\u0067\u0065\u0072\u0064\u0062l","\u0070\u0065\u0072\u0069\u006f\u0064\u0063\u0065\u006et\u0065\u0072\u0065\u0064","\u0071\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067l\u0062\u0061\u0073\u0065","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u0062\u0061\u0073\u0065","p\u0065\u0072\u0074\u0068\u006f\u0075\u0073\u0061\u006e\u0064","A\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","E\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0041\u0061\u0063\u0075\u0074\u0065","\u0045d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0045\u0067\u0072\u0061\u0076\u0065","\u0049\u0061\u0063\u0075\u0074\u0065","I\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0049d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0049\u0067\u0072\u0061\u0076\u0065","\u004f\u0061\u0063\u0075\u0074\u0065","O\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061\u0070\u0070l\u0065","\u004f\u0067\u0072\u0061\u0076\u0065","\u0055\u0061\u0063\u0075\u0074\u0065","U\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0055\u0067\u0072\u0061\u0076\u0065","\u0064\u006f\u0074\u006c\u0065\u0073\u0073\u0069","\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0074\u0069\u006cd\u0065","\u006d\u0061\u0063\u0072\u006f\u006e","\u0062\u0072\u0065v\u0065","\u0064o\u0074\u0061\u0063\u0063\u0065\u006et","\u0072\u0069\u006e\u0067","\u0063e\u0064\u0069\u006c\u006c\u0061","\u0068\u0075\u006eg\u0061\u0072\u0075\u006d\u006c\u0061\u0075\u0074","\u006f\u0067\u006f\u006e\u0065\u006b","\u0063\u0061\u0072o\u006e","\u004c\u0073\u006c\u0061\u0073\u0068","\u006c\u0073\u006c\u0061\u0073\u0068","\u0053\u0063\u0061\u0072\u006f\u006e","\u0073\u0063\u0061\u0072\u006f\u006e","\u005a\u0063\u0061\u0072\u006f\u006e","\u007a\u0063\u0061\u0072\u006f\u006e","\u0062r\u006f\u006b\u0065\u006e\u0062\u0061r","\u0045\u0074\u0068","\u0065\u0074\u0068","\u0059\u0061\u0063\u0075\u0074\u0065","\u0079\u0061\u0063\u0075\u0074\u0065","\u0054\u0068\u006fr\u006e","\u0074\u0068\u006fr\u006e","\u006d\u0069\u006eu\u0073","\u006d\u0075\u006c\u0074\u0069\u0070\u006c\u0079","o\u006e\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","t\u0077\u006f\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u0074\u0068\u0072\u0065\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u006fn\u0065\u0068\u0061\u006c\u0066","\u006f\u006e\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072","\u0074\u0068\u0072\u0065\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073","\u0066\u0072\u0061n\u0063","\u0047\u0062\u0072\u0065\u0076\u0065","\u0067\u0062\u0072\u0065\u0076\u0065","\u0049\u0064\u006f\u0074\u0061\u0063\u0063\u0065\u006e\u0074","\u0053\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0073\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0043\u0061\u0063\u0075\u0074\u0065","\u0063\u0061\u0063\u0075\u0074\u0065","\u0043\u0063\u0061\u0072\u006f\u006e","\u0063\u0063\u0061\u0072\u006f\u006e","\u0064\u0063\u0072\u006f\u0061\u0074"};
type FontWeight int ;func (_gef StdFont )Name ()string {return string (_gef ._bae .Name )};func NewStdFont (desc Descriptor ,metrics *RuneCharSafeMap )StdFont {return NewStdFontWithEncoding (desc ,metrics ,_g .NewStandardEncoder ());};func (_beg *ttfParser )Parse ()(TtfType ,error ){_gaa ,_bbg :=_beg .ReadStr (4);
if _bbg !=nil {return TtfType {},_bbg ;};if _gaa !="\u0000\u0001\u0000\u0000"&&_gaa !="\u0074\u0072\u0075\u0065"{_ff .Log .Debug ("\u0055n\u0072\u0065c\u006f\u0067\u006ei\u007a\u0065\u0064\u0020\u0054\u0072\u0075e\u0054\u0079\u0070\u0065\u0020\u0066i\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u002e\u0020v\u0065\u0072\u0073\u0069\u006f\u006e\u003d\u0025\u0071",_gaa );
};_gba :=int (_beg .ReadUShort ());_beg .Skip (3*2);_beg ._edb =make (map[string ]uint32 );var _ceca string ;for _gbaa :=0;_gbaa < _gba ;_gbaa ++{_ceca ,_bbg =_beg .ReadStr (4);if _bbg !=nil {return TtfType {},_bbg ;};_beg .Skip (4);_gcc :=_beg .ReadULong ();
_beg .Skip (4);_beg ._edb [_ceca ]=_gcc ;};_ff .Log .Trace (_eea (_beg ._edb ));if _bbg =_beg .ParseComponents ();_bbg !=nil {return TtfType {},_bbg ;};return _beg ._feg ,nil ;};func (_fab *ttfParser )ParseMaxp ()error {if _abe :=_fab .Seek ("\u006d\u0061\u0078\u0070");
_abe !=nil {return _abe ;};_fab .Skip (4);_fab ._add =_fab .ReadUShort ();return nil ;};func _cg ()StdFont {_bec .Do (_fda );_gbb :=Descriptor {Name :HelveticaName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0020,BBox :[4]float64 {-166,-225,1000,931},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_gbb ,_abaf );};func (_ea StdFont )GetMetricsTable ()*RuneCharSafeMap {return _ea ._cd };type Font interface{Encoder ()_g .TextEncoder ;GetRuneMetrics (_db rune )(CharMetrics ,bool );};var _cfb =&fontMap {_ae :make (map[StdFontName ]func ()StdFont )};
const (SymbolName =StdFontName ("\u0053\u0079\u006d\u0062\u006f\u006c");ZapfDingbatsName =StdFontName ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073"););func (_dfd *ttfParser )readByte ()(_ecg uint8 ){_ab .Read (_dfd ._cbb ,_ab .BigEndian ,&_ecg );
return _ecg ;};var _eca =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,611,778,778,778,778,389,389,389,389,389,389,389,389,500,778,778,667,667,667,667,667,944,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,611,778,722,722,722,722,556,556,556,556,556,667,667,667,611,722,722,722,722,722,722,722,722,722,722,1000,722,722,722,722,667,667,667,667,500,500,500,500,333,500,722,500,500,833,500,500,581,520,500,930,500,556,278,220,394,394,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,556,500,500,672,556,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,333,333,333,556,500,556,500,500,167,500,500,500,556,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,333,556,556,278,278,394,278,570,549,570,494,278,833,333,570,556,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,300,330,500,500,556,540,333,333,494,1000,250,250,1000,570,570,556,500,500,555,500,500,500,333,333,333,278,444,444,549,444,444,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,333,416,333,556,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,500,722,500,500,500,500,500,444,444,444,444,500};
type fontMap struct{_c .Mutex ;_ae map[StdFontName ]func ()StdFont ;};func NewStdFontByName (name StdFontName )(StdFont ,bool ){_acb ,_dg :=_cfb .read (name );if !_dg {return StdFont {},false ;};return _acb (),true ;};func TtfParseFile (fileStr string )(TtfType ,error ){_aaf ,_dga :=_bf .Open (fileStr );
if _dga !=nil {return TtfType {},_dga ;};defer _aaf .Close ();return TtfParse (_aaf );};const (CourierName =StdFontName ("\u0043o\u0075\u0072\u0069\u0065\u0072");CourierBoldName =StdFontName ("\u0043\u006f\u0075r\u0069\u0065\u0072\u002d\u0042\u006f\u006c\u0064");
CourierObliqueName =StdFontName ("\u0043o\u0075r\u0069\u0065\u0072\u002d\u004f\u0062\u006c\u0069\u0071\u0075\u0065");CourierBoldObliqueName =StdFontName ("\u0043\u006f\u0075\u0072ie\u0072\u002d\u0042\u006f\u006c\u0064\u004f\u0062\u006c\u0069\u0071\u0075\u0065");
);func (_efe *ttfParser )ParseHmtx ()error {if _caf :=_efe .Seek ("\u0068\u006d\u0074\u0078");_caf !=nil {return _caf ;};_efe ._feg .Widths =make ([]uint16 ,0,8);for _aad :=uint16 (0);_aad < _efe ._fba ;_aad ++{_efe ._feg .Widths =append (_efe ._feg .Widths ,_efe .ReadUShort ());
_efe .Skip (2);};if _efe ._fba < _efe ._add &&_efe ._fba > 0{_cab :=_efe ._feg .Widths [_efe ._fba -1];for _fgb :=_efe ._fba ;_fgb < _efe ._add ;_fgb ++{_efe ._feg .Widths =append (_efe ._feg .Widths ,_cab );};};return nil ;};func (_aee StdFont )Descriptor ()Descriptor {return _aee ._bae };
func _eea (_agd map[string ]uint32 )string {var _aef []string ;for _daa :=range _agd {_aef =append (_aef ,_daa );};_dcc .Slice (_aef ,func (_bda ,_ddf int )bool {return _agd [_aef [_bda ]]< _agd [_aef [_ddf ]]});_egg :=[]string {_b .Sprintf ("\u0054\u0072\u0075\u0065Ty\u0070\u0065\u0020\u0074\u0061\u0062\u006c\u0065\u0073\u003a\u0020\u0025\u0064",len (_agd ))};
for _ ,_bdeg :=range _aef {_egg =append (_egg ,_b .Sprintf ("\u0009%\u0071\u0020\u0025\u0035\u0064",_bdeg ,_agd [_bdeg ]));};return _dc .Join (_egg ,"\u000a");};type StdFontName string ;var _gaf _c .Once ;func (_dbg *ttfParser )parseCmapVersion (_aeba int64 )error {_ff .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006da\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a \u006f\u0066\u0066s\u0065t\u003d\u0025\u0064",_aeba );
if _dbg ._feg .Chars ==nil {_dbg ._feg .Chars =make (map[rune ]GID );};_dbg ._cbb .Seek (int64 (_dbg ._edb ["\u0063\u006d\u0061\u0070"])+_aeba ,_a .SeekStart );var _fbab ,_ggec uint32 ;_dfafg :=_dbg .ReadUShort ();if _dfafg < 8{_fbab =uint32 (_dbg .ReadUShort ());
_ggec =uint32 (_dbg .ReadUShort ());}else {_dbg .ReadUShort ();_fbab =_dbg .ReadULong ();_ggec =_dbg .ReadULong ();};_ff .Log .Debug ("\u0070\u0061\u0072\u0073\u0065\u0043m\u0061\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064 \u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067u\u0061g\u0065\u003d\u0025\u0064",_dfafg ,_fbab ,_ggec );
switch _dfafg {case 0:return _dbg .parseCmapFormat0 ();case 6:return _dbg .parseCmapFormat6 ();case 12:return _dbg .parseCmapFormat12 ();default:_ff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063m\u0061\u0070\u0020\u0066\u006f\u0072\u006da\u0074\u003d\u0025\u0064",_dfafg );
return nil ;};};func (_acdd *ttfParser )parseCmapSubtable10 (_fbce int64 )error {if _acdd ._feg .Chars ==nil {_acdd ._feg .Chars =make (map[rune ]GID );};_acdd ._cbb .Seek (int64 (_acdd ._edb ["\u0063\u006d\u0061\u0070"])+_fbce ,_a .SeekStart );var _gfed ,_gcf uint32 ;
_dcb :=_acdd .ReadUShort ();if _dcb < 8{_gfed =uint32 (_acdd .ReadUShort ());_gcf =uint32 (_acdd .ReadUShort ());}else {_acdd .ReadUShort ();_gfed =_acdd .ReadULong ();_gcf =_acdd .ReadULong ();};_ff .Log .Trace ("\u0070\u0061r\u0073\u0065\u0043\u006d\u0061p\u0053\u0075\u0062\u0074\u0061b\u006c\u0065\u0031\u0030\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067\u0075\u0061\u0067\u0065\u003d\u0025\u0064",_dcb ,_gfed ,_gcf );
if _dcb !=0{return _fa .New ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063\u006d\u0061p\u0020s\u0075\u0062\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_gfd ,_gcb :=_acdd .ReadStr (256);if _gcb !=nil {return _gcb ;
};_cegc :=[]byte (_gfd );for _adec ,_cdf :=range _cegc {_acdd ._feg .Chars [rune (_adec )]=GID (_cdf );if _cdf !=0{_b .Printf ("\u0009\u0030\u0078\u002502\u0078\u0020\u279e\u0020\u0030\u0078\u0025\u0030\u0032\u0078\u003d\u0025\u0063\u000a",_adec ,_cdf ,rune (_cdf ));
};};return nil ;};type Descriptor struct{Name StdFontName ;Family string ;Weight FontWeight ;Flags uint ;BBox [4]float64 ;ItalicAngle float64 ;Ascent float64 ;Descent float64 ;CapHeight float64 ;XHeight float64 ;StemV float64 ;StemH float64 ;};func _aca ()StdFont {_gaf .Do (_dfb );
_fe :=Descriptor {Name :TimesRomanName ,Family :_bgd ,Weight :FontWeightRoman ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,898},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :662,XHeight :450,StemV :84,StemH :28};return NewStdFont (_fe ,_dfbe );
};func _cc ()StdFont {_dcd .Do (_afc );_ccb :=Descriptor {Name :CourierName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0021,BBox :[4]float64 {-23,-250,715,805},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_ccb ,_bfe );};var _cdc =[]int16 {667,944,667,667,667,667,667,667,667,667,667,667,667,667,667,667,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,667,722,722,722,778,389,389,389,389,389,389,389,389,500,667,667,611,611,611,611,611,889,722,722,722,722,722,722,944,722,722,722,722,722,722,722,722,611,722,667,667,667,667,556,556,556,556,556,611,611,611,611,722,722,722,722,722,722,722,722,722,667,889,667,611,611,611,611,611,611,611,500,500,500,500,333,500,722,500,500,778,500,500,570,570,500,832,500,500,278,220,348,348,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,500,500,500,608,500,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,389,389,333,556,500,556,500,500,167,500,500,500,500,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,278,500,500,278,278,382,278,570,549,606,494,278,778,333,606,576,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,266,300,500,500,500,500,333,333,494,833,250,250,1000,570,570,500,500,500,555,500,500,500,333,333,333,278,389,389,549,389,389,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,366,278,500,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,444,667,500,444,444,444,500,389,389,389,389,500};
type GID =_g .GID ;func (_gaaa *ttfParser )ReadULong ()(_ecc uint32 ){_ab .Read (_gaaa ._cbb ,_ab .BigEndian ,&_ecc );return _ecc ;};type CharMetrics struct{Wx float64 ;Wy float64 ;};func (_cgg *ttfParser )ParseName ()error {if _egd :=_cgg .Seek ("\u006e\u0061\u006d\u0065");
_egd !=nil {return _egd ;};_gcab ,_ :=_cgg ._cbb .Seek (0,_a .SeekCurrent );_cgg ._feg .PostScriptName ="";_cgg .Skip (2);_gcaba :=_cgg .ReadUShort ();_bcd :=_cgg .ReadUShort ();for _ddae :=uint16 (0);_ddae < _gcaba &&_cgg ._feg .PostScriptName =="";_ddae ++{_cgg .Skip (3*2);
_acab :=_cgg .ReadUShort ();_dgbgb :=_cgg .ReadUShort ();_adb :=_cgg .ReadUShort ();if _acab ==6{_cgg ._cbb .Seek (_gcab +int64 (_bcd )+int64 (_adb ),_a .SeekStart );_cda ,_fafa :=_cgg .ReadStr (int (_dgbgb ));if _fafa !=nil {return _fafa ;};_cda =_dc .Replace (_cda ,"\u0000","",-1);
_deee ,_fafa :=_f .Compile ("\u005b\u0028\u0029\u007b\u007d\u003c\u003e\u0020\u002f%\u005b\u005c\u005d\u005d");if _fafa !=nil {return _fafa ;};_cgg ._feg .PostScriptName =_deee .ReplaceAllString (_cda ,"");};};if _cgg ._feg .PostScriptName ==""{_ff .Log .Debug ("\u0050a\u0072\u0073e\u004e\u0061\u006de\u003a\u0020\u0054\u0068\u0065\u0020\u006ea\u006d\u0065\u0020\u0050\u006f\u0073t\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u0077\u0061\u0073\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e");
};return nil ;};type ttfParser struct{_feg TtfType ;_cbb _a .ReadSeeker ;_edb map[string ]uint32 ;_fba uint16 ;_add uint16 ;};func (_eaa *ttfParser )parseCmapFormat12 ()error {_fdgb :=_eaa .ReadULong ();_ff .Log .Trace ("\u0070\u0061\u0072se\u0043\u006d\u0061\u0070\u0046\u006f\u0072\u006d\u0061t\u00312\u003a \u0025s\u0020\u006e\u0075\u006d\u0047\u0072\u006f\u0075\u0070\u0073\u003d\u0025\u0064",_eaa ._feg .String (),_fdgb );
for _bdbe :=uint32 (0);_bdbe < _fdgb ;_bdbe ++{_efeg :=_eaa .ReadULong ();_cbgc :=_eaa .ReadULong ();_fed :=_eaa .ReadULong ();if _efeg > 0x0010FFFF||(0xD800<=_efeg &&_efeg <=0xDFFF){return _fa .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");
};if _cbgc < _efeg ||_cbgc > 0x0010FFFF||(0xD800<=_cbgc &&_cbgc <=0xDFFF){return _fa .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");};for _dda :=_efeg ;_dda <=_cbgc ;
_dda ++{if _dda > 0x10FFFF{_ff .Log .Debug ("\u0046\u006fr\u006d\u0061\u0074\u0020\u0031\u0032\u0020\u0063\u006d\u0061\u0070\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0063\u0068\u0061\u0072\u0061\u0063\u0074\u0065\u0072\u0020\u0062\u0065\u0079\u006f\u006e\u0064\u0020\u0055\u0043\u0053\u002d\u0034");
};_eaa ._feg .Chars [rune (_dda )]=GID (_fed );_fed ++;};};return nil ;};var _fcg *RuneCharSafeMap ;func TtfParse (r _a .ReadSeeker )(TtfType ,error ){_bfb :=&ttfParser {_cbb :r };return _bfb .Parse ()};var _abaf *RuneCharSafeMap ;func _ca ()StdFont {_bec .Do (_fda );
_fc :=Descriptor {Name :HelveticaObliqueName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-170,-225,1116,931},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};return NewStdFont (_fc ,_cge );
};func _gc ()StdFont {_dcd .Do (_afc );_faca :=Descriptor {Name :CourierObliqueName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0061,BBox :[4]float64 {-27,-250,849,805},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_faca ,_bge );};func (_adeb StdFont )ToPdfObject ()_e .PdfObject {_gec :=_e .MakeDict ();_gec .Set ("\u0054\u0079\u0070\u0065",_e .MakeName ("\u0046\u006f\u006e\u0074"));_gec .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_e .MakeName ("\u0054\u0079\u0070e\u0031"));
_gec .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_e .MakeName (_adeb .Name ()));_gec .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_adeb ._ec .ToPdfObject ());return _e .MakeIndirectObject (_gec );};func (_ceaf *ttfParser )ReadUShort ()(_cfc uint16 ){_ab .Read (_ceaf ._cbb ,_ab .BigEndian ,&_cfc );
return _cfc ;};func _acd ()StdFont {_gaf .Do (_dfb );_daf :=Descriptor {Name :TimesBoldName ,Family :_bgd ,Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,935},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :676,XHeight :461,StemV :139,StemH :44};
return NewStdFont (_daf ,_fcg );};const (HelveticaName =StdFontName ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");HelveticaBoldName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061-\u0042\u006f\u006c\u0064");HelveticaObliqueName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061\u002d\u004f\u0062l\u0069\u0071\u0075\u0065");
HelveticaBoldObliqueName =StdFontName ("H\u0065\u006c\u0076\u0065ti\u0063a\u002d\u0042\u006f\u006c\u0064O\u0062\u006c\u0069\u0071\u0075\u0065"););var _ Font =StdFont {};func (_acg *ttfParser )ReadShort ()(_ddfa int16 ){_ab .Read (_acg ._cbb ,_ab .BigEndian ,&_ddfa );
return _ddfa ;};var _cgbg =[]int16 {722,889,722,722,722,722,722,722,722,722,722,667,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,556,722,722,722,722,333,333,333,333,333,333,333,333,389,722,722,611,611,611,611,611,889,722,722,722,722,722,722,889,722,722,722,722,722,722,722,722,556,722,667,667,667,667,556,556,556,556,556,611,611,611,556,722,722,722,722,722,722,722,722,722,722,944,722,722,722,722,611,611,611,611,444,444,444,444,333,444,667,444,444,778,444,444,469,541,500,921,444,500,278,200,480,480,333,333,333,200,350,444,444,333,444,444,333,500,333,278,250,250,760,500,500,500,500,588,500,400,333,564,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,564,500,333,333,333,556,500,556,500,500,167,500,500,500,500,333,564,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,500,500,278,278,344,278,564,549,564,471,278,778,333,564,500,564,500,500,500,500,500,549,500,500,500,500,500,500,722,333,500,500,500,500,750,750,300,276,310,500,500,500,453,333,333,476,833,250,250,1000,564,564,500,444,444,408,444,444,444,333,333,333,180,333,333,453,333,333,760,333,389,389,389,389,389,500,278,500,500,278,250,500,600,278,326,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,500,722,500,500,500,500,500,444,444,444,444,500};
type StdFont struct{_bae Descriptor ;_cd *RuneCharSafeMap ;_ec _g .TextEncoder ;};var _gfe *RuneCharSafeMap ;